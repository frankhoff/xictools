#! /bin/bash

# Utility called by "make fetch" to assemble packages from different
# machines into a common area for upload to the wrcad.com web site.
#
# Usage:  ./fetchdist "progname ..."  "osname ..."
#
# The valid prognames are the XicTools packages:
#   adms, fastcap, fasthenry, mozy, mrouter, vl, wrspice, xic, xtlserv
#
# The osname tokens are in the form osname.arch, where the osname is
# the dstribution name assigned in configuration, and arch is the
# architecture key also defined by the configuration.  If the arch
# part is missing, a default will be assumed (i386 for Windows, x86_64
# otherwise).

progs=$1
oses=$2

# This script assumes that on each machine, the root of the git build
# tree is $HOME/src/xt, and the user name is the same as the user
# running this script, on each machine.

# Where files are placed, this must exist.  Files go to a subdirectory
# named for the operating system.
outdir=$HOME/export/xictools

utildir=$(dirname $0)

# Find and echo the version number of the program name passed as an
# argument.
#
version()
{
    program=$1
    # We're running "make fetch" in xt_base/packages.  The local
    # programs are assumed identical to the remote versions.
    root=../..
    if [ -d $root/$program ]; then
        echo $($root/$program/version)
    fi
}

# Grab the distribution file
# arguments: program osname arch
#
get()
{
    program=$1
    ostok=$2
    tifs=$IFS
    IFS="."
    set -- $ostok
    IFS=$tifs
    osname=$1
    arch=$2

    version=$(version $program)
    if [ x$version = x ]; then
        echo Unknown program: $program
        exit 1
    fi

    echo Fetching $program-$osname >&2
    case $osname in
    Darwin*)
        if [ ! -d $outdir/$osname ]; then
            mkdir $outdir/$osname
        fi
        host=$($utildir/exported host $osname)
        if [ -z "$host" ]; then
            echo "Unknown distribution name $osname"
        else
            arch=x86_64
            fname=xictools_$program-$osname-$version-$arch.pkg
            dir=$USER@$host:/Users/$USER/src/xt/xt_base/packages/pkgfiles
            rsync $dir/$fname $outdir/$osname/$fname
            chmod 0644 $outdir/$osname/$fname
        fi
        ;;
    Linux*)
        if [ ! -d $outdir/$osname ]; then
            mkdir $outdir/$osname
        fi
        if [ -z "$arch" ]; then
            arch=x86_64
        fi
        host=$($utildir/exported host $osname)

        if [ -z "$host" ]; then
            echo "Unknown distribution name $osname"
        else
            sfx=$($utildir/exported sfx $osname)
            fname="xictools_$program-$osname-$version-$arch.$sfx"
            if [ $arch = x86_64 ]; then
                dir=$USER@$host:/home/$USER/src/xt/xt_base/packages/pkgfiles
                odir=$outdir/$osname
            else
                dir=$USER@$host:/home/$USER/src/xt-32/xt_base/packages/pkgfiles
                odir=$outdir/$osname.$arch
            fi
            if [ ! -d $odir ]; then
                mkdir $odir
            fi
            rsync $dir/$fname $odir/$fname
            chmod 0644 $odir/$fname
        fi
        ;;
    MINGW*)
        if [ ! -d $outdir/$osname ]; then
            mkdir $outdir/$osname
        fi
        host=$($utildir/exported host $osname)
        if [ -z "$host" ]; then
            echo "Unknown distribution name $osname"
        else
            arch=x86_64
            fname=xictools_$program-$osname-$version-$arch.exe
            dir=$USER@$host:/cygdrive/c/msys64/home/$USER/src/xt/xt_base/packages/pkgfiles
            rsync $dir/$fname $outdir/$osname/$fname
            chmod 0644 $outdir/$osname/$fname
        fi
        ;;
    *)
        echo "Unknown distribution name $osname"
        ;;
    esac
    echo '--------------------------------------------------------------'>&2
}

scripts="wr_install wr_uninstall uninstall.bat cleanold.bat"

if [ ! -d $outdir/scripts ]; then
    mkdir $outdir/scripts
fi
for a in $scripts; do
    if [ ! -f $outdir/scripts/$a -o \
             "x$(diff --brief $outdir/scripts/$a $utildir/$a)" != x ]; then
        cp -fp $utildir/$a $outdir/scripts/$a
        echo Updated $a
    fi
done

for o in $oses; do
    for p in $progs; do
        get $p $o
    done
done

# Create a script which provides current release numbers for each program.
# This will be exported to wrcad.com.  This also provides the info from
# the "exported" script.

$utildir/mkcurrent > $outdir/exported.new
chmod 755 $outdir/exported.new

