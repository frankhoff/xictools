#
# Update the distribution files.
#
# Usage: update_help [-t] "programs..."

# Change this if you're not me.
login=stevew

# Top of xictools repository at source.
srcloc=/home/$login/src/xt

# Help files go to $help_destdir/$prog/help
help_destdir=/home/webadmin/wrcad.com/html/helplib

# Release notes go here.
docs_destdir=/home/webadmin/wrcad.com/html/xictools/docs

# Scripts go here.
script_destdir=/home/webadmin/wrcad.com/html/xictools/scripts

xic_notes=xic4.3
wrs_notes=wrs4.3

dryrun=no
if [ x$1 = x-t ]; then
    dryrun=yes
    shift
fi

progs=$*

sshc=$SSH_CONNECTION
if [ x"$sshc" = x ]; then
    echo "Can't get home IP, exiting"
    exit
fi
set -- $sshc
home=$1
echo Connecting to $home

# Refresh the help database.
# argument: collection_name
#
fetch_help()
{
    prog=$1
    if [ x$prog = xxic -o x$prog = xwrspice ]; then
        echo "Updating $prog help"
        if [ ! -d $help_destdir ]; then
            if [ $dryrun = yes ]; then
                echo mkdir $help_destdir
            else
                mkdir $help_destdir
            fi
        fi
        if [ ! -d $help_destdir/$prog ]; then
            if [ $dryrun = yes ]; then
                echo mkdir $help_destdir/$prog
            else
                mkdir $help_destdir/$prog
            fi
        fi

        if [ $dryrun = yes ]; then
            echo /usr/bin/rsync -e ssh -a $login@$home:$srcloc/$prog/help \
  $help_destdir/$prog
        else
            /usr/bin/rsync -e ssh -a $login@$home:$srcloc/$prog/help \
  $help_destdir/$prog
        fi
    else
        echo "unknown program $prog"
    fi
}

for p in $progs; do
    fname=
    if [ $p = xic ]; then
        fname=$xic_notes
    elif [ $p = wrspice ]; then
        fname=$wrs_notes
    fi
    if [ -n "$fname" ]; then
        echo Updating $fname
        if [ ! -d $docs_destdir ]; then
            if [ $dryrun = yes ]; then
                echo mkdir $docs_destdir
            else
                mkdir $docs_destdir
            fi
        fi
        if [ ! -d $docs_destdir/${p}_release_notes ]; then
            if [ $dryrun = yes ]; then
                echo mkdir $docs_destdir/${p}_release_notes
            else
                mkdir $docs_destdir/${p}_release_notes
            fi
        fi
        newloc=$docs_destdir/${p}_release_notes/$fname
        if [ $dryrun = yes ]; then
            echo rsync --rsh=ssh $login@$home:$srcloc/$p/docs/$fname $newloc
        else
            rsync --rsh=ssh $login@$home:$srcloc/$p/docs/$fname $newloc
        fi
        fetch_help $p
    else
        echo "unknown program $p"
    fi
done

echo Updating scripts
if [ ! -d $script_destdir ]; then
    if [ $dryrun = yes ]; then
        echo mkdir $script_destdir
    else
        mkdir $script_destdir
    fi
fi
util=$srcloc/xt_base/packages/util
if [ $dryrun = yes ]; then
    echo rsync --rsh=ssh $login@$home:$util/wr_install $script_destdir
    echo rsync --rsh=ssh $login@$home:$util/wr_uninstall $script_destdir
    echo rsync --rsh=ssh $login@$home:$util/cleanold.bat $script_destdir
    echo rsync --rsh=ssh $login@$home:$util/uninstall.bat $script_destdir
else
    rsync --rsh=ssh $login@$home:$util/wr_install $script_destdir
    rsync --rsh=ssh $login@$home:$util/wr_uninstall $script_destdir
    rsync --rsh=ssh $login@$home:$util/cleanold.bat $script_destdir
    rsync --rsh=ssh $login@$home:$util/uninstall.bat $script_destdir
fi

