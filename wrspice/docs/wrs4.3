Rspice Generation 4 Release Notes

This is the 4.3 post-production series.  See the release note archive
for the production releases (4.2.1 - 4.2.16) and earlier.

The 4.3 branch is the first open-source release of the XicTools.  The
programs (Xic, WRspice, and others) are available at no cost, in
binary packages for selected operating systems, and as source code.

As open-source, there may well be many different versions of the
programs available.  As much as possible, these will be consolidated
into general releases, and tagged known-good releases will be issued
periodically.  The latest source code will be available directly from
the repository, for those wishing to track the latest.

Scroll down to the notes for the current WRspice release, which
follows some important general information.

*****************************************************
IMPORTANT -- New Windows framework, releases.

Starting January 2021, all Windows binaries are 64-bit, compiled under
the MINGW64 subsystem of MSYS2 (64-bit version).

Although it may be possible to run the programs from other MINGW64
installations, for example Cygwin, it is recommended MSYS2 be
installed.  This replaces the "gtk_bundle" package that was previously
used to supply gui dlls.

* Installing MSYS2

MSYS2 is a linux-like environment similar to Cygwin.

When installing MSYS2 and XicTools programs, you are strongly
advised to install in the default locations.

Go to msys2.org.  Download and run the installer, and follow the
directions.  It is easy.  When done, you will have a shell window on
the screen.  You should type the following commands to load some
things you'll need.

 pacman -S vim
 pacman -S winpty
 pacman -S mingw-w64-x86_64-gtk2
 pacman -S mingw-w64-x86_64-gsl

Then, use the vim editor to edit the .bash_profile file that exists in
the current (your home) directory.  Add the following lines to the
bottom of the file:

 mount c:/usr/local/xictools /usr/local/xictools
 export PATH="/usr/local/xictools/bin:$PATH"

This should be all that is needed to run the XicTools programs.

* The mintty Terminal Emulator Window

The terminal window used in MSYS2 is "mintty".  This does NOT work
directly with native Windows programs that work with a console window,
which includes the XicTools programs.  One must run WRspice and
probably Xic with the "winpty" program.  Just type "winpty" followed
by the name and arguments of the program you want to run.

For example, command to run WRspice is

 winpty wrspice ...

where the ... represents the command line arguments to wrspice.

The winpty program performs some magic that enables native Windows
programs expecting to find a command.com type of window to work with
the mintty.

*****************************************************
IMPORTANT -- Mac OS X note!

The Darwin64 package release is now generated on High Sierra (10.13),
but the programs are fully compatible with Sierra (10.12), Mojave
(10.14), and Catalina (10.15).

*****************************************************
IMPORTANT -- Font Size (March 2020)

The default GTK font sizes generally seem reasonable on Linux and
Windows, but not on Apple, where they are too small on my old 2010 13
inch MacBook Pro, and too large on my new 15 inch MacBook Pro.

One can change the fonts with the Font setting pop up and saving, but
these apply only to text in application windows, not the native widget
text.  The widget text size could be changed in the .gtkrc-2.0 file.

Now, the default application font sizes track the widget font sizes,
so fixing font sizes can generally be done very simply from .gtkrc-2.0
as below.

1.  Create (if necessary, it might already exist) a file in your home
directory named ".gtkrc-2.0".

2.  Add a line to the file, for example:  gtk-font-name="foo 10"

The integer 10 is an example, your size may vary.  Experiment to find
the best size for your screen.  For my old MacBook I use 18, for the
new one 10.  Linux and Windows seem to get this right in the first
place, 10 being about the default.

*****************************************************
IMPORTANT -- Search path setup.

In 4.3 releases, all executables are linked into the
   /usr/local/xictools/bin
directory, or the equivalent if you installed xictoiols in another
location.  The directory should be added to your shell search path.

*****************************************************
End of general info.


===============================================================================
wrspice-4.3.13  1/20/2021
Current Release

CHANGES AND NEW FEATURES
------- --- --- --------

* Added a new command "printf".  This is like the print command,
  however it prints to the report file for use in operating range and
  Monte Carlo analysis.

* Altered parameters are now added to the report file automatically,
  no need for "alterf" command, for Monte Carlo analysis.

* One can now use "set" in exec blocks to set values for parameters
  with RHS variables, e.g., .param p1=$val, the exec block might
  contain "set val=1.2".

* The .measure results vectors and scales are now extended
  when multiple dimensions are encountered, there is no longer a
  "_history" and "_history_scale".

* PSF output now includes @device[param] branch current constructs. 
  The '@' and '[param]' are stripped.

* jj.va Josephson junction Verilog-A:  the NOIDT preprocessor define
  is now enabled by default, since this generally reduces interation
  count and simulation time in WRspice.

* Added the mmjco utility to the WRspice package.  This is for
  computing tunnel current amplitude tables for the (mitmojco) TJM
  Josephson junction model.

* New variable "tjm_path" provides a list of directories to search for
  fit files, effectively defaults to "( .  ~/.mmjco )".  Fit file
  loading in TJM is now complete, the model param can be set to path
  or file name, or "tjm1" and "tjm2" for internal models.


BUGS FIXED
---- -----

* Fixed a bug with the jjaccel variable not working properly with
  phase-mode DCOP.

* Fixed "set unixcom", it would crash. the program.

* Fixed single-quoted bstring (pattern definition for pulse/gpulse)
  bug.  The quoting would cause an extra 1-bit in the sequence.

* The measure runop was not working, fixed.

* Fix spurious error messages that were being generated when reading a
  rawfile.

* Fixed handling of numerical params treated as strings.  E.g.,

    .param p1=10 p2=2/p1 p3=1/p2

  Previously p3 would evaluate to 0.05 due to evaluating 1/2/10, now
  RHS parameters are expanded before use so result is 1/0.2=5.

* The presence of a .measure would cause corruption of multi-dimensional
  plot data.

* Fixed internal JJ model parameter handling.  Specifying capacitance
  now overrides CPIC, which is needed to get proper time step.  Also
  specifying RSUB or RN revalues VM, ICRN.  In the parameter info,
  removed the "mv" from VM, ICRN which are actually in volts.


-------------------------------------------------------------------------------
wrspice-4.3.12  7/20/2020
Current Release

CHANGES AND NEW FEATURES
------- --- --- --------

* Josephson Junction Models

    The internal and Verilog-A JJ models now use model parameter
    DEFTEMP and instance parameter TEMP_K instead of TEMP, which is a
    reserved word in some simulation environments.

    The Verilog-A model has a new NOIDT compiler symbol.  This turns
    on a different integration algorithm which may be more accurate in
    some simulators.

* Misc.

    The Vectors tool now double quotes each entry sent to print/plot. 
    This seems to be the only way to avoid parser trouble from net
    expression indexing.


BUGS FIXED
---- -----

* Avoid seg faults when (incorrectly) using .exec block to run
  analysis, as the circuit struct has not been set up yet.

* The Vectors panel now comes up in reasonable time when the vector
  count is large, used to hang.

* Forms like v(xx<0>) are now handled in ipc from Xic and from the
  Vectors panel without a syntax error when not double quoted.

* Added "power" set-only instance parameter to sources for HSPICE
  compatibility.  The value must be 0 or BADPARAM is triggered.

* Fix spurions syntax error in PWL caused by expression terms
  containing parentheses, e.g. pwl(0 0 100p 4/(1+1)).

* Fix recursion/expansion errors in parameter substittutions.

* Text editor window default font is now Monospace (somehow get set to
  Sans).

* Recognize and link libtinfo if found.  Required for WRspice terminal
  editing on some systems.


-------------------------------------------------------------------------------
wrspice-4.3.11  3/28/2020
Current Release

This update is long overdue, sorry.

CHANGES AND NEW FEATURES
------- --- --- --------

* Updates to findrange command.

    New commands: findlower, findupper
        Same arguments and operation as findrange, but only the lower
        or upper operating point is searched for.

    Each of the three functions can now take the parameter definitions
    and range parameters as supplied to the check command.  These no
    longer require their own check -b call, they can simply be listed
    following an initial check -b.

    New arguments to findrange/findupper/findlower,

        -n1 name1 -n2 name2

    The name1/2 tokens will serve as a base for new names that replace
    vector names opmin1/2, opmax1/2 for range results.  E.g.,
        -n1 foo
    will save output in  vectors named foo_min, foo_max.

    There is a subtlety in the syntax:  -n1 "pname", i.e., a
    double-quoted name, is accepted and the quotes will be stripped
    before use.  The quotes prevent parameter substitution, so this
    allows use of a name that has also been defined as a parameter
    (with .param or otherwise).

* New relational and logic operators in expressions.

    Added support for relational and logic operations in source
    expressions.  These are
        eq    =, ==
        ne    !=, <>
        gt    >
        lt    <
        ge    >=
        le    <=
        and   &, &&
        or    |, ||
        not   ~, !

    These evaluate to 0.0/1.0 when false/true.  As these are not
    differentiable they can potentially cause convergence issues.  An
    example application is pass/fail testing in a .stop callback
    function.

* Updates to .measure and .stop directives.

    New stop clause "repeat delta" where delta is a real number scale
    extent.  The exec and call function will be called at the first
    triggering and every delta delay subsequent as long a the call
    returns 1 (to not stop).

    Measurement functions are now available as new math functions:

        mmin, mmax, mpp, mavg, mrms, mpw, mrft

    Each function takes three arguments:  (vector, scaleval1, scaleval2).
    The two scale values frame the area of measurement.  These must be
    chosen to isolate the feature of interest for rise/fall/width
    measurement.  If not in range, the scale endpoints are assumed.

    The .stop and point measurements no longer use full plot data in
    operating range/Monte Carlo analysis, only interval measurements
    now trigger this.  These opertions are now much more memory
    efficient.

    In .stop/.measure parsing, a constant expression is now treated as
    a bare number rather than an expression in the context of
    "expr[=expr]".  E.g., stop at 30p+2p ...  now acts sensibly.

* Verilog co-simulation capability.

    It is now possible to run the internal digital Verilog simulator
    while running an analog SPICE simulation.  The digital result can
    be used as the basis for a pass/fail test for the analog circuit,
    for example.

    The new prbs.cir and nor_vamc.cir examples illustrates the new
    features.

    Syntax addition to .verilog line: .verilog [dly] [flgs]
        dly
        This is a word starting with s/f/anything_else (case
        insensitive) for slow/fast/typical gate delays.

        flgs
        These are the vl debugging flags in C-style hex syntax
        (0xnnnn) as would be supplied with the -d option in the vl
        command line.  See the vl documentation, unlikely to be of
        use to non-developers.

    New vastep option and command.
        .options vastep=N
        N is an integer:
        0  The Verilog simulation is advanced by calling the vastep
           command, likely through a callback function called from
           a .stop line.
        1  (the default)  the original advancing mechanism.  Advance
           Verilog at each transient time step.
        X  Otherwise, advance after X transient time steps. 

        vastep command
        This command has effect only when .option vastep=0 is set. 
        Calling this function will advance the Verilog simulation to
        the next tick.  The command accepts no arguments.

* Monte Carlo and operating range analysis changes.

    Instead of using shell substitution and the value1/value2 variables
    to set varying circuit parameters, one can use an internal parameter
    passing method which is probably more efficient.

    The form, given before the analysis,

        set value1="%devicelist,paramlist"

    sets up a direct push into the named parameters of listed devices,
    avoiding shell expansion and vectors.  Note that the list must
    follow a magic '%' character, which tells the system to use the
    devlist,paramlist syntax, as used in the sweep command.

    The new jjoprng2.cir example illustrates use of this syntax.

    It is now possible to fairly easily extract parameter operating
    ranges.  The nor_op.cir file illustrates how this can be done. 
    The file makes use of a number of new features and syntax
    elements.

    The new example nor_mc.cir illustrates some of the new syntax for
    Monte Carlo analysis.

* Pseudo-random support in bit strings.

    This applies to the "bstring" syntax of the pulse and gpulse
    voltage and current sources, and the compose command (below). 
    Support was added for a "bprbsN" bstring where N is an unsigned
    integer and the rest of the characters are verbatim.  N can be
    any unsigned integer or missing (default taken as 6), but values
    are clipped to the active range 6-12.  This expands to a
    pseudo-random bit sequence of order N, i.e., the length of the
    sequence is 2^N - 1.

    The associated "rb" option works slightly differently than normal
    bstrings:  the sequence is effectively rotated by the integer
    value that follows.  It affacts the first pass through the
    sequence, unlike in the normal sequence case where it affects the
    second and subsequent passes only.

* Update to the compose command.

    New compose syntax:  compose name pattern [n1 [n2]] bstring

    This is triggered by the literal keyword "pattern" and uses the
    pulse/gpulse bstring syntax.  The optional preceding numbers n1,n2
    apply only when infinite repetition (r=-1) is given in the
    bstring:  no numbers will quit at sequence end, no repeat.  1
    number gives the maximum length in points.  2 numbers are taken as
    step and stop, with the maximum length stop/step.  This is
    convenient for setting the length to match a transient analysis
    specification.

* Parameter handling.

    Support was added for a string return from $&@name constructs. 
    Since one can have .param foo="hello there", the $&@foo in the
    shell context new expands to "hello there".  Previously the return
    from this construct was assumed to be a real number only.

    Added def(paramname) handling to parameter expansion, the
    construct is replaced by 1/0 whether/not paramname is defined in
    the present parameter scope.  This is useful for .if statements,
    to define a parameter if it has not been defined already.

    White space is now preserved in double-quoted parameter strings,
    e.g. signal="b10110 r=-1".  Previously the internal space would
    not appear in a substituted string.

    New pre-defined parameter WRSPICE_BATCH, set to 1 if running in
    batch mode, 0 otherwise.

    Note:  Bound codeblocks are parameter expanded, named codeblocks
    are not.  In a named codeblock, parameters are available through
    @parmname syntax.

* Updates to the Josephson junction and TJM device models.

    The ICS parameter range was widened to [ICRIT/50:ICRIT*50] from
    [ICRIT/20:ICRIT*20] in the internal JJ/TJM and Verilog models.  A
    new FORCE model parameter flag is recognized in internal JJ/TJM
    models only.  When given, this skips testing of VN, RSUB, ICRN,
    and RN for out of range except for >= 0.  Similar functionality is
    available in the Verilog model by uncommenting NORLMT compiler
    symbol.

    The internal JJ model is presently correctly subtracting the
    subgap conductance from GSHUNT, this was not being done (a bug)
    previously.  The GSHUNT and LSHVAL instance output parameters are
    now available in both internal and Verilog models, the internal
    model has an additional RSHUNT output parameter as well.

    Added temperature dependence to the JJ model, with new model
    parameters TC, TNOM, TEMP, TCFCT, and a new instance parameter
    TEMP.  This applies to internal and VA models.

* Miscellaneous changes.

    Updated the jjpulse.cir example to cope with steptype=nousertp and
    the combine command.  This wasn't working due to JJ model change.

    Updated the linearize command to simply copy vectors with length
    less than the scale.  We assume that these are .measure results or
    similar.

    The combine command now prints a more detailed error message.

    Added new special vectors:
        @maxdelta               : The maximum allowed timestep in
                                  transient analysis.
        @tstep, @tstop, @tstart : Transient analysis parameters.
        @fstop, @fstart         : AC analysis parameters.


BUGS FIXED
---- -----

* Fixed default font sizes in Apple so they aren't huge on my new 15
  inch Macbook Pro (12 pt to 9 pt).  There is now a general fix for
  font sizes being the wrong size, see the note at the top of this
  document.

* Control-C was causing seg faults!  Ugly bug since this is used to
  pause simulations.

* Fixed an issue with .control/.exec that contained assignments only,
  vectors were unresolved when a subsequent circuit file was sourced.

  Note that assignments in .exec and .control blocks may be handled
  differently.  Exec blocks will create a special plot for new
  vectors, .control assignments may go to the constants plot. 
  Existing vectors in the constants plot override assignments in exec
  blocks.  If the current plot is an exec plot, it will be used in
  exec block processing, so multiple exec blocks can be read and all
  new vectors will be defined in one plot.

* Fixed bug in jj/tjm models, VSHUNT could not be given a value 0.

* The $&? (shell vector existence test) and $&# (shell vector size)
  prefixes were not being recognized.  Support for these has been
  reimplemented.

* Fixed a problem where plot windows that have complex data would
  freeze on resize.

* Fixed Fedora segfault, and several others.

* Fixed discrepancy in parameter expansion logic with .option
  parhier=local.


-------------------------------------------------------------------------------
wrspice-4.3.10  6/3/2019
Current Release

CHANGES AND NEW FEATURES
------- --- --- --------

* New microscopic "Werthamer" Josephson junction model.

  A new microscopic Josephson junction model has been added to WRspice
  as an internal model.  This is based on the MitMoJCo model by D.  R. 
  Gulevich that is hosted on github.com/drgulevich/mitmojco.

  The model is accessed by adding "Level=3" to the Josephson junction
  .model line.  Most parameters used in the RSJ model apply, in
  particular if no model parameters are given, the device is taken as
  the Lincoln Laboratory SFQ5ee Josephson junction (icrit=10ka/cm2,
  cpic=0.7pf/ma, vm=16.5mv).

* Evolution of standard RSJ Josephson junction models (Verilog-A and
  internal).

  The Josephson junction tsfactor model parameter now relative to 2pi,
  if set to X previously, it should now be set to X/2 for the same
  result.  The change has no effect unless this parameter is set
  explicitly.  Applies to all JJ models.

  A New JJ model parameter tsaccel is the ratio of longest time step
  allowed to that computed at the plasma voltage.  This allows the
  simulator to take longer time steps when the circuit is relatively
  quiescent, and can speed up SFQ circuit simulations if set to a
  value of about 2.5 (your results may vary).  Applies to all JJ
  models.

  Added read-only instance parameters:
    n                   SFQ emission count
    phase or phs        Junction phase
    phsf                True if SFQ count change at current time point
    phst                Time of last SFQ emission
  These are to support pass/fail testing of SFQ circuits, and apply to
  all JJ models (phsf/phst not in Verilog-A model).  The last two
  are "on probation" and may not be kept.

  In the Verilog-A JJ model example, a new compiler switch NEWVSHUNT
  turns on vshunt parameter support (on by default).  One can turn off
  NEWVSHUNT, NEWLSH, and NEWLSER for a core JJ model, and implement
  the extras in a .subckt, which might have some advantage.

* New ability to sweep and alter source "tran function" parameters.

  The source "tran" functions (pulse, sin, exp, etc) can now be
  altered with the alter command, or by setting a @name[param] special
  vector, or swept in a sweep specification.  The source device uses
  new parameters named "prm1", "prm2", etc.  If the device is a "tran"
  function, these parameters map to the arguments to the function, so
  that input can be changed or read via the parameter.  Sweeping pulse
  delay, for example, should facilitate automated extraction of
  setup/hold tomes.

  Note that this applies only if the tran function is "bare" and not
  part of an expression.

  In addition, the parameter named "function" can be set to an expression
  string, which will reset the expression for the source.

* Stop and Measure runop evolution.

  The .stop input syntax element is now supported.  The syntax is the
  same as in the stop command.  The command applies to all circuits
  while in effect, .stop pertains only to the circuit containing the
  line.

  New stop keyword "silent" suppresses the message that is normally
  printed.

  The .stop can be used in Monte Carlo/operating range analysis pass/fail
  testing.  Added jjoprng1.cir in the examples to illustrate this.

  The "at" keyword in stop/measure now differs from "after" and
  "when"; it is strobed.  In order to recognize the event, the
  conjunctions must be true at the time that the strobed time point is
  found.  In after/when, the event is recognized when the conjunctions
  become true then and anytime after the time is found.

  A new parameter in the "point" clause: ts
  Acts like the td parameter, however is strobing.

* Miscellaneous

  The internal constants planck and echarge (Planck's constant and
  electron charge) were updated to the latest NIST official values.

  Added a new vector phi0_2pi to the constants plot.  This is the
  flux quantum over two pi.

  The statistics in repeated analysis (Monte Carlo, operating range,
  sweep) now accumulate.  There is a new keyword "runs", in the rusage
  and stats commands that returns the number of accumulated runs for
  current statistics.

  The 'dc' keyword that triggers "chained dc" analysis now has the
  synonym 'sweep'.


BUGS FIXED
---- -----

* The predictor that was added by ADMS while translating Verilog-A was
  found to exacerbate accumulating phase error in the Verilog-A JJ
  model, so I added a Makefile switch to turn this off.  In the ADMS
  scripts, package_predictor replaced the LIMPRED variable, the former
  is set in the Makefile.  The JJ model now does not use the
  predictor.

* Chained sweeps didn't work with Verilog-A models.

* Repaired a logic bug in .if/.elif/.else logic.

* Fixed *@ and *# lines not being executed.

* Tweaks to noise.cir example.

* Fixed logic in time step control.

* Fixed || and && operators for real vectors, these previously worked
  only with scalar values.

* Repaired a bug: only one named codeblock could be read from a file.


-------------------------------------------------------------------------------
wrspice-4.3.9  3/11/2019

Lots going on under the hood.  This is an interim release, providing elements
of two new feature sets: the "runops", and "Atomic Monte Carlo".

CHANGES AND NEW FEATURES
------- --- --- --------

* Run Operations ("runops").

  WRspice has a collection of operations that can be performed during
  simulation called "runops".  These were originally called "debugs"
  in Berkeley SPICE3, but since these may have nothing to do with
  debugging, the name was changed in all WRspice documentation and
  source code.

  The runops are:       Input Keyword           Command
                        .save                   save
                        -                       trace
                        -                       iplot
                        .measure                measure
                        .stop                   stop

  What's New:
  The measure operation in now a "runop".  This means that measurements
  can be listed, activated, deleted, etc. with commands like status and
  delete.

  The measure command
  Same syntax as the .measure line in input, but will apply to all
  circuits until deleted or deactivated.

  The .stop input directive.
  Same syntax as the stop command.  A .stop line only applies when
  running the containing circuit.

  The SPICE stop command has been scrapped, and the new stop
  syntax, based on the new measure syntax (the old measure support
  has also been scrapped) is far more powerful.  The stop and
  measure operations now have a fair amount of similarity, however,
  the original functionality should still work, however syntax may
  differ slightly.

  Users of stop and .measure in earlier WRspice releases should
  definitely read about the new versions and test (and perhaps
  update) existing simulation decks.

* Atomic Monte Carlo and Range Analysis

  New commands are being created that will make available operations
  that have been available only as part of Monte Carlo or operating range
  analysis.  These will allow the user to create scripts for special
  purpose operations, such as Monte Carlo optimization, or advanced
  statistical extraction.

  New command:  alterf
  Dump alter list to Monte Carlo output file.

  New command:  findrange
  Measure the operating range of the current parameters with the
  current trial set.  This can be embedded in a Monte Carlo analysis.

  New command:  mctrial
  Run a single Monte Carlo trial, sets variable named "trial_return"
  to 0-error, 1-pass, 2-fail.

  The check command has new option: -b.
  If this is given, the analysis will be paused after setup and the
  check command will return.  This is the start for atomic Monte
  Carlo, a script can call mctrial numerous times at this point, then
  "check -c" when done.

  check -c now returns immediately after deleting the run in progress.

  New vector: checkINIT
  This is set to 1 before the initial execution of the header block,
  before operating range or the first Monte Carlo trial.  It is set to
  0 otherwise.  Thus one can identify the first trial in Monte Carlo
  analysis from within the header script.

  The margin/Monte Carlo analysis test function can now return 1
  instead of setting checkFAIL to indicate a failed run.

* Misc changes.
  
  "gnd!" is now a global ground token, same as "0".

  New variable: revertmode (integer 0-5)
  This sets up the strategy to revert focus to the terminal window
  when a new window pops up.  This is highly dependent on operating
  system/window manager, and previous attempts to do this in a one
  size fits all manner had problems and was replaced with the present
  approach.  The default auto mode makes a guess based on the
  operating system.  The variable can be set to one of the values below
  explicitly.

    0    default "auto" mode.
    1    off, don't attempt to revert focus.
    2    assume older linux, e.g. RHEL6 and Gnome.
    3    assume newish linux, e.g., RHEL7 and KDE.
    4    Apple Mac.
    5    Microsoft Windows.

  Josephson junction models now have a CPIC model parameter which
  supplies the default capacitance per critical current in F/A.  This
  defaults to the MITLL SFQ5ee value, and will set the capacitance if
  CAP is not given.  With CAP not given, changing ICRIT will now
  change the assumed capacitance of the reference junction.

  New script syntax:  return [expression]
  The script will return immediately, and if an expression is given,
  the "retval" will be set to the evaluated result, similar to the
  now-deprecated retval command.  This value can be obtained with the
  "$?" pseudo-shell variable after the function returns (warning, this
  is a global variable).

  New feature:  named control blocks.  If a name follows
  .control/.exec/.postrun the lines in the block are saved in a
  codeblock with the given name.  The three types are identical in
  this usage.  These are not associated with any circuit or run when
  the circuit is sourced like unnamed codeblocks.  The inline *$/*#
  lines are added to an unnamed codeblock.

  New variable: units_sepchar
  Changed the character that separates numerator and denominator units
  from '/' to '_', which is tied to the new "units_sepchar" variable. 
  The earlier choice could cause ambiguous expressions.  e.g., 1/V
  could be one over a vector V or one per volt.


BUGS FIXED
---- -----

  The WRSPICE_PROGRAM test without a .param assignment caused a seg
  fault.

  Fixed a bug in plot windows:  the marker readout was frozen in
  non-single scale plots with two multi-dimensional traces.

  Now use new "units_sepchar" (default _) as separator between
  numerator and denominator in units strings.  The / used previously
  could lead to ambiguity and failure to properly evaluate
  expressions.

  Fixed "illegal instruction" start-up fault on OS X Mojave.

  Fixed jjpulse.cir example to work when delay not broken.

  (Re)enabled output of complex vectors in server mode (rawfile).

  Fixed the internal Josephson junction model rtype=4 to be consistent
  with rtype=1.  Updated the jjiv4.cir example file.


-------------------------------------------------------------------------------
wrspice-4.3.8  10/10/2018

CHANGES AND NEW FEATURES
------- --- --- --------

* Added journal reference citations to documents and source code
  indicating that default parameters from the MIT-Lincoln Laboratory
  SFQ5EE Josephson process are obtained from public sources.

* New set variable / option.

  keyword: submaps

  This is a string which can be set to a list of tokens of
  the form name[,value], separated by space.  The square brackets
  indicate that the value part and delimiting comma are optional.

  Before subcircuit expansion, if a line starts with Xname (X followed
  by a name given in the option), then if the corresponding value is
  given it will replace Xname.  If no value was given, the X is simply
  stripped off.  This is all case insensitive.

  Example:  set submaps j,b
  In the deck, xj1 1 2 ... would be replaced by b1 1 2 ...

  This is fairly obscure, but may be useful for reading HSPICE
  netlists that contain Verilog-A devices.  HSPICE uses "X" for these,
  WRspice maps them to a standard letter for the device type.


BUGS FIXED
---- -----
* The Alter command now checks for existing entries for the same
  device and parameter, and will update rather than add a new list
  item.

* Fixed a bug preventing Monte Carlo/Operating Range analysis with
  bound codeblocks.

* DC operating point convergence error messages are now suppressed in
  Monte Carlo/Operating Range trials.

* Fixed the DLL_LOC define in the ADMS examples, wrspice.dll is no
  longer found in xictools/bin, must look in xictools/wrspice/bin.

-------------------------------------------------------------------------------
wrspice-4.3.7  8/24/2018

CHANGES AND NEW FEATURES
------- --- --- --------

* Updates to the Josephson junction models.

  These updates apply to both the internal and Verilog-A Josephson
  junction models.

  Added the LSER instance parameter to model junction series
  inductance.  This is intended to model geometric inductance of the
  Josephson junction structure, which looks lika a via.

  There are two new model parameters, LSH0 and LSH1, used to model the
  parasitic series inductance in the "external" shunt resistance
  assumed when using the VSHUNT parameter.  The shunt resistance
  series inductance will be

    L = LSH0 + Rshunt*LSH1

  LSH0 is a constant value intended to model end/via contributions. 
  LSH1 is inductance per ohm, intended to capture resistor length
  dependence.

  There is also a new instance parameter LSH, which will override the
  model parameters if also given.  This will set the value of the
  shunt resistor inductance directly.

  The following default parameter value and range changes were made
  to accommodate non-standard materials.
  vgap,min,,max   2.8mV,2.0mV,6.0mV    -> 2.6mV,0.1mV,10.0mV
  delv,min,max    0.08mV,0.01mV,0.2mV  -> 0.08mV,0.001*vgap,0.2*vgap

  Other evolution of the Verilog-A model, see the changes list in the
  model code.


-------------------------------------------------------------------------------
wrspice-4.3.6  7/20/2018

CHANGES AND NEW FEATURES
------- --- --- --------

* Updates to PULSE and GPULSE "tran" functions.

  Rewrote the basic framework tran function code, which now uses
  separate polymorphic classes, separate parse functions, etc.  for
  each function.  This is much cleaner and allows new functionality to
  be added more easily.

  The PULSE and GPULSE functions now provide a patterning capability
  similar to the HSPICE pattern source.  Both PULSE and GPULSE have the
  same basic argument format:

  PULSE {single pulse descr} {period and additional delays} {pattern spec}

  The initial options describe a single pulse.  This is followed by
  an optional period and additional delays.  If a period is given and
  nonzero, pulses will be emitted at the delay plus multiples of the
  period.  The period can be followed by additional delays, where a
  pulse is emitted at each delay, and multiples of the period
  thereafter if the period is nonzero.

  This is followed by "bstring" constructs which define a pattern for
  the periodic pulses.  A bstring is an arbitrarily long word starting
  with 'b' and continuing with 0 and 1 to indicate absence or presence
  of a pulse, in the corresponding period, as the sequence is read
  left to right.  A bstring can be immediately followed by two options:

    R [= number]

  The R options sets the repetition count of the preceding bstring. 
  If no number follows, a value of one (repeat once) is assumed.  If
  the number is negative, the repetition will continue indefinitely.
  If not given, or the number is 0, there is no repetition.

    RB = N

  This sets the bit in the bstring where repetitions commence, the
  following integer must be in the range of 1 to the bstring patern
  length.  If not given a value of 1 (repeat the whole sequence) is
  implied.

  Any number of bstrings and their options can be given, the patterns
  are concatenated.

* New passive element M parameter, inductor model.

  Inductor devices can now specify a model, consistent with resistor
  and capacitor devices.  At present, there is only one model
  parameter:  M, described below.  Future development will make use of
  this capability.

  The inductor instance now accepts a parameter "l" which is a synonym
  for "ind" and "inductance" as the given inductance.

  The resistor implementation was updated to allow preloading of
  constant resistance to avoid loading during transient analysis (for
  speed).  Nonlinear resistors are now handled properly in phase-mode
  DC analysis.

  Resistor, capacitor, and inductor devices and models all accept a new
  parameter "M".  This is a "parallel multiplier", and as a real number
  indicates the how many devices are effectively connected in parallel.

  The M instance parameter if given overrules M given in the model. 
  The effect of M is to alter the component value, as below.

     actual R  = given R / M
     actual L  = given L / M
     actual C  = given C * M

* New syntax element .DEFMOD, default model setting.

  Some simple devices support a "default model" in WRspice, meaning
  that if no model name is given in an instance line, an internally
  provided default model will be used.  Internally, all devices have a
  model structure, which is a container for the instances of that
  device type.  It is now possible to access the default model used
  for various devices with .defmod lines.

  .defmod Name ( name=val... )

  The Name is the name of the device model (the second name that would be
  provided on a .model line) such as R (for resistors), C (for capacitors),
  and L (for inductors).

  The name is followed by a list of parameter assignments, optionally
  enclosed in parentheses.  These are precisely the same as would
  appear in a .model line for the device.  These provide the values
  for the parameters to be used in the default model.

  Not all devices support default models, meaning that lack of a model
  name in an instance line is an error.  In particular devices that
  have a variable terminal count (optional nodes) require a model name
  and therefor don't support a default model.

  It is probably also not possible to use a LEVEL parameter in a
  default model, and binning parameters will be ignored at best. 
  Anything too fancy should be done through a normal model, or there
  may be trouble.

  The capability is very powerful, but might cause headaches, too, so
  the user should beware.

  For example, if the following line is added to an existing deck
    .defmod R(M=1.2)
  all "standard" resistors in the deck will have their values reduced
  by about 20%.  This can be useful for corner analysis, but don't
  let the line get "lost" in a big file.

* Options added to dump command, and related:

  Previously, there was an arbitrary mapping performed between node
  numbers and matrix indices.  This was probably to avoid
  non-contiguous matrix column/row numbers, but in WRspice this
  mapping is not needed and is no longer performed.  This saves a
  little time, and facilitates use of the dump command to do circuit
  debugging.  Any difference between node numbers and matrix indices
  is now only the result of internally performed reordering to improve
  matrix stability.

  If the "undocumented" option "translate" is given, translation will
  be done as it has been previously.

  The dump command, which dumps the last circuit matrix used to
  standard output, now accepts the following new options.

  -c  Use compact form, just show which entries are nonzero, using
      'x' for nonzero and '.' for zero.

  -r  Show the reordered matrix.

  -t  Terse, don't show header.

  -f filename   Send output to filename


BUGS FIXED
---- -----

* Handling of the tsfactor JJ model param fixed, now works
  consistently between internal and Verilog models.

* Fixes to avoid leaving empty temporary files behind after normal
  program exit.

* Linear controlled sources were not working with extended precision,
  bug fixed.

* The lossless transmission line model was updated to avoid excessive
  memory use.

* Fixed a bug in the Pade transmission line model that would impede DC
  operating point convergence (error in the stamp loaded for DC analysis).


-------------------------------------------------------------------------------
wrspice-4.3.5  4/21/2018

CHANGES AND NEW FEATURES
------- --- --- --------

* More changes to the JJ models (Verilog-A and internal)

  The accepted range of icrit is now 1nA - 0.1A, which should be
  adequate to cover special cases.  The previous range was fine for
  digital circuits but was too restrictive in general.

  The range ov vgap is now 2.0mV - 6.0mV to cover materials other than
  niobium.


BUGS FIXED
---- -----

* The new Josephson junction model documentation did not make it into
  the packages other than LinuxRHEL7, or into the source tree. 
  Infrastructure was added to the build system to prevent this from
  happening in the future.


-------------------------------------------------------------------------------
wrspice-4.3.4  4/9/2018

This is basically a re-release of 4.3.3, with some documentation
additions and a few tweaks.  The 4.3.3 packages were never built.

CHANGES AND NEW FEATURES
------- --- --- --------

* Lots of new documentation added for JJ model, and Verilog-A support.

* The analysis("smsig") feature added in the last release was removed.
  replaced by $simparam("smsllsig").

* Small tweaks and fine-tuning of JJ internal and Verilog-A models.  The
  VM and ICRN parameters are now accepted in volts instead of millivolts.


-------------------------------------------------------------------------------
wrspice-4.3.3  3/28/2018

CHANGES AND NEW FEATURES
------- --- --- --------

* Modified adms scripts to provide support for real-value arrays.

* Updated the Verilog-A Josephson junction model with better
  conditioned equations and better tracking with the WRspice internal
  JJ model.  THis is a major update with lots of new parameters and
  capability.  A separate document for this model (and the internal
  JJ model) is forthcoming.

* Update the the gpulse "tran" function.

  The "pw" is now interpreted as the full-width half-maximum value.
  Previously, this was the full width at peak/e, i.e., the "variance"
  of the gaussian.  If pw is given negative, it will be interpreted
  in the old way as a positive value.

  If pw is given as 0 or not given, the source now generates SFQ
  pulses with the given amplitude and computed width.  As before, if
  the amplitude is 0, output is SFQ with the amplitude computed from
  the (nonzero) pw given.  If both amplitude and pw are zero, the SFQ
  FWHM is taken as the transient analysis TSTEP, and the amplitude is
  computed.

* Completely new DC analysis capability when Josephson junctions
  are present.

  A new phase-based computation provides real operating-point and DC
  sweep analysis when Josephson junctions are present.  This is an
  important advance, which should avoid the long-standing need to use
  "uic" and ramp sources up from zero.  This also avoids the previous
  hack of using a small resistance value for JJs in OP analysis, which
  could avoid using "uic" but would cause startup transients that
  could cause non-convergence.

  For DC analysis, Josephson junctions require special treatment.
  The usual SPICE voltage-based calculation can't be used, since
  1. all (or most) node voltages are identically zero,
  2. inductors can't be shorted, since they contribute to the
     current distribution,
  3. quantum mechanical "phase" must be quantized around
     JJ/inductor loops.

  We get around this by using phase for josephson junctions,
  inductors, and possibly inductor-like devices such as lossless
  transmision lines.  Every node connected to a Josephson junction or
  inductor has a "Phase" flag set.  This indicates that the computed
  value is phase, and NOT voltage, for these nodes.  We have to
  special-case the load functions of inductors and mutual inductors
  (and lossless transmission lines), and resistors.  Other devices can
  probably be treated normally, however there will be limitations, as
  noted below.

  A JJ can be modeled by the basic formula I = Ic*sin(V(i,j)), where
  V(i,j) is the "voltage" difference between nodes i and j, which is
  actually the phase.  Inductors look like resistors, L*I =
  V(i,j)*phi0/(2*pi), where again V(i,j) is the phase difference
  across the inductor.  Mutual inductance adds similar cross terms.

  Capacitors are completely ignored.  The treatment of resistors is
  slightly complicated.  The connected nodes can each be "Ground",
  "Phase", or "Voltage".  If both nodes are Ground or Voltage, the
  resistor is loaded normally.  If both nodes are Phase or Ground, the
  resistor is not loaded at all.  The interesting cases are when one
  node is Phase, the other Voltage.  In this case, we load the
  resistor as if the phase node is actually Ground (number = 0).  In
  addition, we load a VCCS template which injects current into the
  phase node, of value V(voltage-node)/resistance.  The form is
  actually quite simple.

  Resistors are the bridge between the normal voltage-mode devices and
  phase nodes.  Some circuits may require introduction of resistors to
  get correct results.  For example, assume a JJ gate driving a CMOS
  comparator circuit.  If the input MOSFET gate is connected directly
  to the JJ device, the DCOP will be incorrect, as the comparator will
  see phase as its input.  However, if a resistor separates the MOS
  gate from the JJ, the comparator input will be zero, as it should
  be.

  There is (at present) a topological requirement that all phase nodes
  must be at ground potential.  This means that for a network of JJs
  and inductors, there must be a ground connection to one of these
  devices.  A voltage source connected to an inductor, which is
  connected to a resistor to ground, although a perfectly valid
  circuit, will fail.  One must use the equivalent consisting of the
  voltage source connected to a resistor, connected to the inductor
  which is grounded.  This satisfies the two topological requirements:

    Rule 1:  There must be a resistor between a voltage-mode device
             and a phase mode device, no direct connections.

    Rule 2:  Every phase-node subnet must have a direct connection to
             ground, so all phase nodes are at ground potential.

  With this bit of information, and the warning that controlled
  sources can cause unexpected behavior, the DC analysis using this
  technique can apply to general circuits. 

  Note that for this to work, all JJs must have bias current less than
  their Ic.  Both DCOP and DC sweep analysis are available, as is AC
  analysis.  These are supported by both the internal and new Verilog
  models.  In addition, SPICE-style NOISE analysis is showing signs of
  life with the internal model.

* The "update" command (to save tool window configuration) is now
  called "tbupdate" to avoid a keyword clash with the program update
  function in the help system.

* New Verilog analysis() system function keyword added:  "smsig"
  This returns true when the simulator is loading small-signal values
  before AC analysis.  Somehow the Verilog-A designers neglected to
  include this, as the function returns most other states of interest.

* Multiple analysis runs are now done in file order per analysis type,
  used to be the reverse.  The order of analysis types is hard-coded
  in WRspice.

* Updated and augmented the Josephson junction examples.

BUGS FIXED
---- -----

* The dump command was printing incorrect imaginary values for complex
  matrices.

* DC operating point convergence failure is now a "fail" point in
  operating range and Monte Carlo analysis rather than a fatal error.

* Bug fixed in mutual inductor code, initial transient starting point
  would not be correct if set from nonzero initial condition.  Works
  fine when ramping from zero, however.

* There was a problem with "tran" functions, specifically PULSE, being
  called in DC sweep analysis, with the swept voltage as "time". 
  This should only happen for PWL.  Fixed.

-------------------------------------------------------------------------------
wrspice-4.3.2  10/29/2017

CHANGES AND NEW FEATURES
------- --- --- --------

* New package management system

  The existing system which automatically checks for updated packages
  has been removed, and a new package management system is available. 
  The system for sending messages to users through the wrcad.com web
  site, which was never used, has also been removed.  Presently, there
  is no internet access attempted on program startup, which saves
  time.

  The new package management page is build into the help system, so is
  available in Xic, WRspice, and in the stand-alone mozy help browser. 
  Giving the keyword/url

    :xt_pkgs

  displays a page showing the installed and available xictools
  packages.  Available packages can be downloaded and installed
  through this interface.  This can also be accessed with the
  wrupdate command.

  The following items have been removed from WRspice and the
  documentation:
    XT_NO_CHECK_UPDATE  environment variable
    XT_UPD_DEBUG        environment variable
    nocheckupdate       variable
    installcmdFmt       variable
    passwd              command
    proxy               command

  The proxy functionality has also been moved the the help system,
  through a new Set Proxy button in the Options menu of the help
  windows.


-------------------------------------------------------------------------------
wrspice-4.3.1  10/1/2017

Welcome the the first open-source release of WRspice.  Now, instead of
asking Whiteley Research for new features, users can modify the source
code and do it themselves.  Please contribute!  We can help.

Changes are relative to the final production release wrspice-4.2.16.


CHANGES AND NEW FEATURES
------- --- --- --------

* Major refactoring due to lack of C++ standards conformance
  throughout the program, which caused real trouble with the latest
  C++ compilers.

  Specifically, it used to be possible to write very efficient
  linked-list code in C++ making use of the assumption that it is
  possible to call a method from a non-polymorphic class through a
  null pointer, and check for a null "this" pointer in the function
  body.  One could iterate over the list headed by "this" and have
  correct behavior when the list is empty.  This idiom was not
  uncommon, though it violated the official dictum that calling a
  method from a null object leads to undefined behavior.  The idiom
  was used in the Microsoft Foundation Class, for example.  Surely,
  the elegance and efficiency would obviously lead to de-facto
  standardization, right?  Alas, such code generates a warning in
  Apple's latest clang, and in addition segmentation faults in gcc-7.1
  under Fedora 26.  This code had to be replaced by static functions
  that explicitly pass an object pointer.  Uglier, more complex code,
  but it works.  This is an unfortunate step backward for "a better C
  than C" aspect of C++.

* Major effort to clean up core leaks and other internal consistency
  issues using the Valgrind analysis tool.  Lots of small things were
  fixed as a result.

* Miscellaneous changes required in port to Fedora 26, mostly in
  interprocess communication code.

* Print Control Panel updated.

  The Print Control Panel has changed.  When the PostScript Line-Draw
  driver is chosen, a new Line Width entry area becomes visible.  This
  can be used to set the line width as rendered in the plot, in points
  (1/72 in).  The default is "0", which means to use the minimum line
  width supported by the printer.

  The Portrait/Landscape selection is now a drop-down menu instead of
  radio buttons, and some controls have changed location a bit.
  
* The wrspice --v option now produces three tokens: version osname arch
  E.g., 4.3.1 LinuxRHEL7 x86_64

* Other small tweaks here and there.


BUGS FIXED
---- -----

* The default path to Xic was incorrect.

* In Monte Carlo analysis, the compose call for checkPNTS (e.g.)
  would try and delete and replace the vector, which was prevented and
  a message issued since the plot active flag would be set.

