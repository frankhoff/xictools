
!!  ---------------------------------------------------------------
!!  Xic/WRspice Help System Database
!!  $Id: xiCommands.hlp,v 1.117 2016/10/10 18:30:04 stevew Exp $
!!  Copyright (C) Whiteley Research Inc. 2003.  All Rights Reserved
!!  ---------------------------------------------------------------

!!TAG Xic

!!KEYWORD
xiCommands.hlp
!!TITLE
xiCommands.hlp
!!HTML

!!SUBTOPICS
sidemenu
xic:arc
xic:box
xic:break
xic:deck
xic:devs
xic:donut
xic:erase
xic:iplot
xic:label
xic:logo
xic:nodmp
xic:place
xic:plot
xic:polyg
xic:put
xic:round
xic:run
xic:shapes
xic:sides
xic:spcmd
xic:spin
xic:style
xic:end_flush
xic:width
xic:subct
xic:edtrm
xic:symbl
xic:terms
xic:wire
xic:xform
xic:xor

!! 020715
!!KEYWORD
sidemenu
!!TITLE
Side Menu Commands
!!HTML
    <i>Xic</i> has a "side" menu of buttons, typically displayed along
    the left edge of the application main window, next to the <a
    href="layertab">layer table</a>.  This menu contains buttons
    specific to editing, and is shown only when editing is enabled
    (meaning that it never appears in the <a href="xiv"><i>Xiv</i></a>
    feature set).  The content of the menu differs between electrical
    and physical modes.

    <p>
    If the environment variable <a
    href="XIC_MENU_RIGHT"><b>XIC_MENU_RIGHT</b></a> is set when
    <i>Xic</i> starts, the menu and layer table will be placed along
    the right edge of the main application window.  This might be more
    convenient for left-handed users.  If the <a
    href="XIC_HORIZ_BUTTONS"><b>XIC_HORIZ_BUTTONS</b></a> environment
    variable is set, the "side" menu buttons will instead be arrayed
    horizontally across the top of the main application window, above
    the <a href="topbuttons">top button menu</a>.

    <p>
    This section describes in detail the commands available in the
    side menu in physical and electrical modes.  These include
    commands for geometry creation and other frequently used
    operations.

    <p>
    Again, the side menu is only visible when cell editing is
    possible.

    <p>
    Side menu commands are executed by clicking with button 1 on the
    buttons.  Typing the first few letters of the <a
    href="accelerator">command name</a> while pointing in a drawing
    window will also initiate a side menu command.  The characters
    typed are displayed in the <a href="keyspresd">key press
    buffer</a> area to the left of the <a href="promptline">prompt
    line</a> in the main window, or in the upper-right corner of
    sub-window pop-ups.  Commands can be exited by selecting the same
    or another command in most cases, or by pressing the <b>Esc</b>
    key.

    <p>
    In the command descriptions, reference if often made to the
    "current transform".  This is a rotation, reflection, and
    magnification specification for moved or copied objects, and for
    newly created subcells.  The current transform is set with the
    pop-up produced by the <a href="xic:xform"><b>xform</b></a>
    button in the side menu.

    <p>
    Reference is also made to "selected" objects.  Objects are
    selected by clicking the left mouse button (button 1) while
    pointing at the object, or by pressing and holding button 1 so
    that the object is enclosed in the rectangle formed with the press
    and release locations.  Selecting a second time will deselect the
    objects, and all selected objects can be deselected with the <a
    href="xic:desel"><b>desel</b></a> button in the <a
    href="topbuttons">top button menu</a>.  Selected objects are
    displayed with a blinking highlighted border.  Objects can also be
    selected with the <a href="!select"><b>!select</b></a> command
    typed in the prompt area.

    <p>
    Reference is made to various commands that start with an
    exclamation point "!" such as "<b>!set</b>".  These <a
    href="keybang">commands</a> can be entered from the keyboard. 
    Since most of these commands are used infrequently, they are not
    assigned command buttons.  The most important of these commands is
    probably <a href="!set"><b>!set</b></a>, since this allows
    certain variables to be set which control the behavior of some
    side menu commands.

    <p>
    The tables below summarize the command buttons provided in the
    side menus in physical and electrical mode.  Note that the side
    menu is different between physical and electrical modes, and that
    the operation of some commands which appear in both may differ
    slightly.  These differences are noted in the descriptions.  In
    the text, side menu commands are referenced by their internal
    names, since the command buttons contain an icon and not a label.

    <p>
    The side menu is not available in the <i>Xiv</i> feature set, and
    is invisible when certain modes are in effect, such as in <a
    href="xic:hier">CHD display</a> mode, where editing is not
    allowed.

    <p>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><td colspan=3><b>Physical Side Menu</b></td>
     <td colspan=3><b>Electrical Side Menu</b></td></tr>
    <tr><th>Icon</th> <th>Name</th> <th>Function</th>
     <th>Icon</th> <th>Name</th> <th>Function</th></tr>
    <tr><td><img src="xform.xpm"></td>
     <td><a href="xic:xform"><b>xform</b></td>
     <td>Set current transform</td>
     <td><img src="xform.xpm"></td>
     <td><a href="xic:xform"><b>xform</b></td>
     <td>Set current transform</td></tr>
    <tr><td><img src="place.xpm"></td>
     <td><a href="xic:place"><b>place</b></td>
     <td>Place subcells</td>
     <td><img src="place.xpm"></td>
     <td><a href="xic:place"><b>place</b></td>
     <td>Place subcells</td></tr>
    <tr><td><img src="label.xpm"></td>
     <td><a href="xic:label"><b>label</b></td>
     <td>Create/edit labels</td>
     <td><img src="devs.xpm"></td>
     <td><a href="xic:devs"><b>devs</b></td>
     <td>Show device menu</td></tr>
    <tr><td><img src="logo.xpm"></td>
     <td><a href="xic:logo"><b>logo</b></td>
     <td>Create text object</td>
     <td><img src="shapes.xpm"></td>
     <td><a href="xic:shapes"><b>shapes</b><br>menu</td>
     <td>Create outline object</td></tr>
    <tr><td><img src="box.xpm"></td>
     <td><a href="xic:box"><b>box</b></td>
     <td>Create rectangles</td>
     <td><img src="wire.xpm"></td>
     <td><a href="xic:wire"><b>wire</b></td>
     <td>Create wires</td></tr>
    <tr><td><img src="polyg.xpm"></td>
     <td><a href="xic:polyg"><b>polyg</b></td>
     <td>Create polygons</td>
     <td><img src="label.xpm"></td>
     <td><a href="xic:label"><b>label</b></td>
     <td>Create/edit labels</td></tr>
    <tr><td><img src="wire.xpm"></td>
     <td><a href="xic:wire"><b>wire</b></td>
     <td>Create wires</td>
     <td><img src="erase.xpm"></td>
     <td><a href="xic:erase"><b>erase</b></td>
     <td>Erase geometry</td></tr>
    <tr><td><img src="style.xpm"></td>
     <td><a href="xic:style"><b>style</b><br>menu</td>
     <td>Set wire style</td>
     <td><img src="break.xpm"></td>
     <td><a href="xic:break"><b>break</b></td>
     <td>Cut objects</td></tr>
    <tr><td><img src="round.xpm"></td>
     <td><a href="xic:round"><b>round</b></td>
     <td>Create disk objects</td>
     <td><img src="symbl.xpm"></td>
     <td><a href="xic:symbl"><b>symbl</b></td>
     <td>Set symbolic mode</td></tr>
    <tr><td><img src="donut.xpm"></td>
     <td><a href="xic:donut"><b>donut</b></td>
     <td>Create disk with hole</td>
     <td><img src="nodmp.xpm"></td>
     <td><a href="xic:nodmp"><b>nodmp</b></td>
     <td>Name wire nets</td></tr>
    <tr><td><img src="arc.xpm"></td>
     <td><a href="xic:arc"><b>arc</b></td>
     <td>Create arcs</td>
     <td><img src="subct.xpm"></td>
     <td><a href="xic:subct"><b>subct</b></td>
     <td>Set subcircuit contacts</td></tr>
    <tr><td><img src="sides.xpm"></td>
     <td><a href="xic:sides"><b>sides</b></td>
     <td>Set rounded granularity</td>
     <td><img src="terms.xpm"></td>
     <td><a href="xic:terms"><b>terms</b></td>
     <td>Show terminals</td></tr>
    <tr><td><img src="xor.xpm"></td>
     <td><a href="xic:xor"><b>xor</b></td>
     <td>Exclusive-OR objects</td>
     <td><img src="spcmd.xpm"></td>
     <td><a href="xic:spcmd"><b>spcmd</b></td>
     <td>Execute <i>WRspice</i> command</td></tr>
    <tr><td><img src="break.xpm"></td>
     <td><a href="xic:break"><b>break</b></td>
     <td>Cut objects</td>
     <td><img src="run.xpm"></td>
     <td><a href="xic:run"><b>run</b></td>
     <td>Run <i>WRspice</i></td></tr>
    <tr><td><img src="erase.xpm"></td>
     <td><a href="xic:erase"><b>erase</b></td>
     <td>Erase geometry</td>
     <td><img src="deck.xpm"></td>
     <td><a href="xic:deck"><b>deck</b></td>
     <td>Save SPICE file</td></tr>
    <tr><td><img src="put.xpm"></td>
     <td><a href="xic:put"><b>put</b></td>
     <td>Paste from yank buffer</td>
     <td><img src="plot.xpm"></td>
     <td><a href="xic:plot"><b>plot</b></td>
     <td>Plot SPICE results</td></tr>
    <tr><td><img src="spin.xpm"></td>
     <td><a href="xic:spin"> <b>spin</b></td>
     <td>Rotate objects</td>
     <td><img src="iplot.xpm"></td>
     <td><a href="xic:iplot"><b>iplot</b></td>
     <td>Set dynamic plotting</td></tr>
    </table>

!!SEEALSO
xic:commands

!! 120615
!!KEYWORD
xic:arc shapes:arc
!!TITLE
The arc Button: Create Arcs
!!HTML
    <img src="arc.xpm">
    <b>Keyword</b>: <tt>arc</tt>

    <p>
    The <b>arc</b> command button allows the user to create arcs on
    the current layer.  The <a href="xic:sides"><b>sides</b></a>
    button, or the <b>Sides</b> entry in the <a
    href="xic:shapes"><b>shapes</b></a> menu in electrical mode, can
    be used to reset the number of segments used to represent the
    circle containing the arc.  Press button 1 first to define the
    center.  Subsequent presses, (or drag releases) define the inner
    and outer radii, the arc start angle, and the arc terminal angle. 
    In physical mode, if the arc path width is set to zero, a round
    disk is created, as with the <a href="xic:round"><b>round</b></a>
    button.  If the angle given is 360 degrees, then the created
    figure is identical to that produced by the <a
    href="xic:donut"><b>donut</b></a> button.  In electrical mode, the
    arc function is entered through the <b>arc</b> entry in the menu
    brought up with the <b>shapes</b> button.  In this case, the arc
    path has no width, so that the inner and outer radii are equal and
    not separately definable.  Arcs have no electrical significance,
    but can be used for illustrative purposes.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within two pixels.  When snapped, a
    small dotted highlight box is displayed.  This makes it much
    easier to create abutting objects when the grid snap spacing is
    very fine compared with the display scaling.  This feature can be
    controlled from the <b>Edge Snapping</b> group in the
    <b>Snapping</b> page of the <a href="xic:grid"><b>Grid
    Setup</b></a> panel.

    <p>
    In electrical mode, an arc is actually a wire, and as such should
    not be used on the SCED layer.  If the current layer is the SCED
    layer, the arc will be created using the ETC2 layer, otherwise the
    arc will be created on the current layer.  Although there is no
    error, arc vertices on the SCED layer are considered in the
    connectivity establishment, leading to inefficiency.  If the user
    insists on the arc being on the SCED layer, the <a
    href="xic:chlyr"><b>Change Layer</b></a> command in the <a
    href="xic:modifymenu"><b>Modify Menu</b></a> can be used to move
    it to that layer.

    <p>
    If the user presses and holds the <b>Shift</b> key after the
    center location is defined, and before the perimeter is defined by
    either lifting button 1 or pressing a second time, the current
    radius is held for x or y.  The pointer location of the
    <b>Shift</b> press defines whether x is held (pointer closer to
    the center y) or y is held (pointer closer to the center x).  This
    allows elliptical arcs to be generated.  This similarly applies
    when defining the outer radii, so that the inner and outer
    surfaces can have different elliptical aspect ratios, though the
    outer radius must be larger than the inner radius at all angles.

    <p>
    The <b>Ctrl</b> key also provides useful constraints.  Pressing
    and holding the <b>Ctrl</b> key when defining the radii produces a
    radius defined by the pointer position projected on to the x or y
    axis (whichever is closer) defined from the center.  Otherwise,
    off-axis snap points are allowed, which may lead to an unexpected
    radius on a fine grid.  When defining the angles of arcs with the
    <b>Ctrl</b> key pressed, the angle is constrained to multiples of
    45 degrees.  Ordinarily, the arc angle snaps to the nearest snap
    point. 

    <p>
    When the command is expecting a mouse button press to define a
    radius, the value as defined by the mouse pointer (in microns) is
    printed in the lower left corner of the drawing window, or the X
    and Y values are printed if different.  Pressing <b>Enter</b> will
    cause prompting for the value(s), in microns.  If one number is
    given, a circular radius is accepted, however one can enter two
    numbers separated by space to set the X and Y radii separately.

    <p>
    Similarly, the angles are displayed, and can be entered in this
    manner.  Prompts can be obtained for the start and end angles
    separately.  The angle should be entered in degrees.  Zero degress
    points along the X axis, and positive angles advance clockwise.

!!SEEALSO
sidemenu

!! 012715
!!KEYWORD
xic:box shapes:box
!!TITLE
The box Button: Create Rectangles
!!HTML
    <img src="box.xpm">
    <b>Keyword</b>: <tt>box</tt>

    <p>
    The <b>box</b> command button allows creation of boxes
    (rectangles) on the currently selected layer.  The rectangle can
    be defined by either clicking <a href="button1">button 1</a> on
    two diagonal corners, or by pressing button 1 to define the first
    corner, then releasing button 1 to define the second corner.  The
    outline of the box is ghost-drawn during creation.  The new box
    will be merged with or clipped to existing boxes on the same
    layer, unless this feature has been suppressed.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within a small distance.  When
    snapped, a small dotted highlight box is displayed.  This makes it
    much easier to create abutting objects when the grid snap spacing
    is very fine compared with the display scaling.  This feature can
    be controlled from the <b>Edge Snapping</b> group in the
    <b>Snapping</b> page of the <a href="xic:grid"><b>Grid
    Setup</b></a> panel.

    <p>
    In physical mode, boxes can also be created from the <a
    href="xic:dvsel"><b>Show/Select Devices</b></a> panel from the
    <b>Device Selections</b> button in the <b>Extract Menu</b>.  The
    <b>Enable Measure Box</b> button provides a means of creating
    boxes of a specific size to match electrical requirements, for
    example to create rectangular resistor bodies for a given
    resistance.  Boxes can be created whether or not the electrical
    layer parameters are used or present.

    <p>
    In physical mode while the <b>box</b> command is active, holding
    down the <b>Ctrl</b> key while clicking on a subcell will paint
    the area of the subcell with the current layer.

    <p>
    In electrical mode, the box command is available by selecting the
    <b>box</b> function in the <a href="xic:shapes"><b>shapes</b></a>
    menu.  If the current layer is the SCED layer, the box will be
    created using the ETC2 layer, otherwise the box will be created on
    the current layer.  It is best to avoid use of the SCED layer for
    other than active wires, for efficiency reasons, though it is not
    an error.  The <a href="xic:chlyr"><b>Change Layer</b></a> command
    in the <b>Modify Menu</b> can be used to change the layer of
    existing objects to the SCED layer, if necessary.  The outline
    style and fill will be those of the rendering layer.  Boxes have
    no electrical significance, but can be used for illustrative
    purposes.

    <p>
    The <b>box</b>, <a href="xic:erase"><b>erase</b></a>, and <a
    href="xic:xor"><b>xor</b></a> commands participate in a protocol
    that is handy on occasion.

    <p>
    Suppose that you want to erase an area, and you have zoomed in
    and clicked to define the anchor, then zoomed out or panned and
    clicked to finish the operation.  Oops, the <b>box</b> command
    was active, not <b>erase</b>.  One can press <b>Tab</b> to undo
    the unwanted new box, then press the <b>erase</b> button, and the
    <b>erase</b> command will have the same anchor point and will be
    showing the ghost box, so clicking once will finish the erase
    operation.

    <p>
    The anchor point is remembered, when switching directly between
    these three commands, and the command being exited is in the
    state where the anchor point is defined, and the ghost box is
    being displayed.  One needs to press the command button in the
    side menu to switch commands.  If <b>Esc</b> is pressed, or a
    non-participating command is entered, the anchor point will be
    lost.

!!SEEALSO
noopbutton
sidemenu

!! 012815
!!KEYWORD
xic:break
!!TITLE
The break Button: Cut Objects
!!HTML
    <img src="break.xpm">
    <b>Keyword</b>: <tt>break</tt>

    <p>
    The <b>break</b> command is used to divide objects along a
    horizontal or vertical line.  The command operates on <a
    href="xic:box">boxes</a>, <a href="xic:polyg">polygons</a>, and <a
    href="xic:wire">wires</a>.  If one or more of those objects was
    previously selected, the <b>break</b> command will operate on
    those selections.  Otherwise, the user is asked to select objects
    to break.  The user is then asked to click to divide the selected
    objects along the break line, which is attached to the pointer
    and ghost-drawn.  The orientation of the break line is either
    horizontal or vertical, which can be toggled by pressing either
    the <b>/</b> (forward slash) or <b>\</b> (back slash) keys when
    the break line is visible.  The <b>break</b> command is useful
    when one wants to relocate or create a subcell from pieces of an
    existing design.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within two pixels.  When snapped, a
    small dotted highlight box is displayed.  This makes it much
    easier to create abutting objects when the grid snap spacing is
    very fine compared with the display scaling.  This feature can be
    controlled from the <b>Edge Snapping</b> group in the
    <b>Snapping</b> page of the <a href="xic:grid"><b>Grid
    Setup</b></a> panel.

    <p>
    When the <b>break</b> command is at the state where objects are
    selected, and the next button press would initiate the break
    operation, if either of the <b>Backspace</b> or <b>Delete</b> keys
    is pressed, the command will revert the state back to selecting
    objects.  Then, other objects can be selected or selected objects
    deselected, and the command is ready to go again.  This can be
    repeated, to build up the set of selections needed.

    <p>
    At any time, pressing the <a href="xic:desel"><b>Deselect</b></a>
    button to the left of the <a href="coordline">coordinate
    readout</a> will revert the command state to the level where
    objects may be selected to break.

    <p>
    The <a href="xic:undo">undo</a> and <a href="xic:redo">redo</a>
    operations (the <b>Tab</b> and <b>Shift-Tab</b> keypreses and
    <b>Undo</b>/<b>Redo</b> in the <b>Modify Menu</b>) will cycle the
    command state forward and backward when the command is active. 
    Thus, the last command operation, such as initiating the break
    by clicking, can be undone and restarted, or redone if necessary. 
    If all command operations are undone, additional undo operations
    will undo previous commands, as when the undo operation is
    performed outside of a command.  The redo operation will reverse
    the effect, however when any new modifying operation is started,
    the redo list is cleared.  Thus, for example, if one undoes a box
    creation, then starts a break operation, the "redo" capability
    of the box creation will be lost.

!!SEEALSO
sidemenu
    
!! 062313
!!KEYWORD
xic:deck
!!TITLE
The deck Button: Save SPICE File
!!HTML
    <img src="deck.xpm">
    <b>Keyword</b>: <tt>deck</tt>

    <p>
    The <b>deck</b> command, available only in electrical mode,
    creates a SPICE file of the current circuit hierarchy.  The file
    name is prompted for, as is an analysis string.  If an analysis
    string is given, it will be included in the SPICE file after
    prepending a `.', unless it happens to start with "run", in which
    case it is ignored.  If a plot string has been created with the <a
    href="xic:plot"><b>plot</b></a> command, it will also be included
    as a <a href=".plot"><tt>.plot</tt></a> line.

    <p>
    Unless the variable <b>SpiceListAll</b> is set (with the <a
    href="!set"><b>!set</b></a> command), only devices and subcircuits
    that are "connected" will be included in the SPICE file.  A device
    or subcircuit is connected if any of the following is true:

    <ul>
    <li>The subcircuit has a global node.
    <li>The device or subcircuit has two or more non-ground
    connections.
    <li>The device or subcircuit has one non-ground connection and one
    or more grounds.
    <li>The device or subcircuit has one non-ground connection and no
    opens.
    <li>The subcircuit has a non-ground connection.
    </ul>

    <p>
    Note that it is possible for a subcircuit to have no connections
    on the <tt>.subckt</tt> line, if it contains a global node.  For
    example, the subcircuit might consist of a decoupling capacitor to
    ground, from a global power supply node (e.g., "<tt>vdd!</tt>").

    <p>
    Node names will be assigned according to the 
    <a href="xic:nodmp">node name mapping</a> currently in force.

    <p>
    After the new file is created, the user is given the option of
    viewing it in a <b>File Browser</b> window.

    <p>
    If the variable <a href="CheckSolitary"><b>CheckSolitary</b></a>
    is set (with the <a href="!set"><b>!set</b></a> command), then a
    warning will be issued if nodes are found with only one
    connection.

!!SEEALSO
sidemenu
xic:run

!! 020615
!!KEYWORD
xic:devs devtoolbar
!!TITLE
The devs Button: Device Menu
!!HTML
    <img src="devs.xpm">
    <b>Keyword</b>: <tt>devs</tt>

    <p>
    <img src="screenshots/devs1.png" align=right>
    The <b>devs</b> button appears only in electrical mode, and
    pressing this button will toggle the display of the device
    selection menu.

    <p>
    There are three styles of the device menu.  The default style
    contains a menu bar with four entries:  <b>Devices</b>,
    <b>Sources</b>, <b>Macros</b>, and <b>Terminals</b>.  Each brings
    up a sub-menu containing names of library "devices", that fall
    into each category. 

    <br clear=all>
    <p>
    <img src="screenshots/devs2.png" align=right>
    The second menu style is similar, but the menu bar contains the
    first letter of the device name (not the SPICE key).

    <p>
    In either of these styles, pressing and holding <a
    href="button1">button 1</a> while the pointer is over one of the
    menu bar buttons will pop up a menu of device names.  Moving the
    pointer down the menu will highlight the entry under the pointer. 
    A selection can be made by releasing the button.

    <br clear=all>
    <p>
    <img src="screenshots/devs3.png" align=right>
    The third style is the pictorial menu, which displays the
    schematic symbol of each available device, in alphabetical order. 
    Clicking on one of the device images will establish the
    selection.

    <p>
    Each menu style contains a button from which the style can be
    cycled.

    <p>
    After a selection is made, the device symbol will be ghost-drawn
    and attached to the pointer, and the device will be placed at
    positions where the user clicks in the drawing windows.  The
    device is positioned such that the reference terminal is located
    at the point where the user clicked.  Devices are placed according
    to the current transform, which is defined from the pop-up
    produced by the <a href="xic:xform"><b>xform</b></a> button in the
    side menu.

    <p>
    The devices available and other details depend upon the
    definitions in the <a href="devlib">device library</a> file.  By
    default, this file is named "<tt>device.lib</tt>", and is located
    in the installation startup directory, but this can be superseded
    by a custom file of the same name which is found in the library <a
    href="xicpaths">search path</a> ahead of the default file. 

    <p>
    The present device menu style tracks, and is tracked by, the <a
    href="DevMenuStyle"><b>DevMenuStyle</b></a> variable.  This
    variable can be set (with the <a href="!set"><b>!set</b></a>
    command) to an integer 0-2.  If 0 or unset, the categorized
    layout is used.  If 1, the alphabetized variation is used, and 2
    specifies the pictorial menu.  This variable tracks the style of
    the menu, and resets the style when set. 

    <p>
    The following table lists the devices found in the device library
    file supplied with <i>Xic</i>.

    <p>
    <blockquote>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><th>Name</th> <th>Description</th></tr>

    <tr><td colspan=2 align=center>Contact Devices</td></tr>
    <tr><td><a href="dev:gnd"><b>gnd</b></a></td>
      <td>Ground Contact</td></tr>
    <tr><td><a href="dev:gnde"><b>gnde</b></a></td>
      <td>Alternative Ground Contact</td></tr>
    <tr><td><a href="dev:tbar"><b>tbar</b></a></td>
      <td>Contact Terminal</td></tr>
    <tr><td><a href="dev:tblk"><b>tblk</b></a></td>
      <td>Alternative Contact Terminal</td></tr>
    <tr><td><a href="dev:tbus"><b>tbus</b></a></td>
      <td>Bus Contact Terminal</td></tr>

    <tr><td colspan=2 align=center>SPICE Devices</td></tr>
    <tr><td><a href="dev:res"><b>res</b></a></td>
      <td>Resistor</td></tr>
    <tr><td><a href="dev:cap"><b>cap</b></a></td>
      <td>Capacitor</td></tr>
    <tr><td><a href="dev:ind"><b>ind</b></a></td>
      <td>Inductor</td></tr>
    <tr><td><a href="dev:mut"><b>mut</b></a></td>
      <td>Mutual Inductor</td></tr>
    <tr><td><a href="dev:isrc"><b>isrc</b></a></td>
      <td>Current Source</td></tr>
    <tr><td><a href="dev:vsrc"><b>vsrc</b></a></td>
      <td>Voltage Source</td></tr>
    <tr><td><a href="dev:dio"><b>dio</b></a></td>
      <td>Junction Diode</td></tr>
    <tr><td><a href="dev:jj"><b>jj</b></a></td>
      <td>Josephson Junction</td></tr>
    <tr><td><a href="dev:npn"><b>npn</b></a></td>
      <td>NPN Bipolar Transistor</td></tr>
    <tr><td><a href="dev:pnp"><b>pnp</b></a></td>
      <td>PNP Bipolar Transistor</td></tr>
    <tr><td><a href="dev:njf"><b>njf</b></a></td>
      <td>N-Channel Junction FET</td></tr>
    <tr><td><a href="dev:pjf"><b>pjf</b></a></td>
      <td>P-Channel Junction FET</td></tr>
    <tr><td><a href="dev:nmos1"><b>nmos1</b></a></td>
      <td>N-Channel MOSFET, 4 Nodes</td></tr>
    <tr><td><a href="dev:pmos1"><b>pmos1</b></a></td>
      <td>P-Channel MOSFET, 4 Nodes</td></tr>
    <tr><td><a href="dev:nmos"><b>nmos</b></a></td>
      <td>N-Channel MOSFET, 3 Nodes</td></tr>
    <tr><td><a href="dev:pmos"><b>pmos</b></a></td>
      <td>P-Channel MOSFET, 3 Nodes</td></tr>
    <tr><td><a href="dev:nmes"><b>nmes</b></a></td>
      <td>N-Channel MESFET</td></tr>
    <tr><td><a href="dev:pmes"><b>pmes</b></a></td>
      <td>P-Channel MESFET</td></tr>
    <tr><td><a href="dev:tra"><b>tra</b></a></td>
      <td>Transmission Line</td></tr>
    <tr><td><a href="dev:ltra"><b>ltra</b></a></td>
      <td>Transmission Line (LTRA Compatible)</td></tr>
    <tr><td><a href="dev:urc"><b>urc</b></a></td>
      <td>Uniform RC Line</td></tr>
    <tr><td><a href="dev:vccs"><b>vccs</b></a></td>
      <td>Voltage-Controlled Current Source</td></tr>
    <tr><td><a href="dev:vcvs"><b>vcvs</b></a></td>
      <td>Voltage-Controlled Voltage Source</td></tr>
    <tr><td><a href="dev:cccs"><b>cccs</b></a></td>
      <td>Current-Controlled Current Source</td></tr>
    <tr><td><a href="dev:ccvs"><b>ccvs</b></a></td>
      <td>Current-Controlled Voltage Source</td></tr>
    <tr><td><a href="dev:sw"><b>sw</b></a></td>
      <td>Voltage-Controlled Switch</td></tr>
    <tr><td><a href="dev:csw"><b>csw</b></a></td>
      <td>Current-Controlled Switch</td></tr>

    <tr><td colspan=2 align=center>Misc</td></tr>
    <tr><td><a href="dev:opamp"><b>opamp</b></a></td>
      <td>Example Macro</td></tr>
    <tr><td><a href="dev:vp"><b>vp</b></a></td>
      <td>Current Meter</td></tr>
    </table>
    </blockquote>

    <p>
    The colors used in the pictorial device menu can be changed by setting
    the <a href="techfile:attr#color">Special GUI Colors</a> listed below.
    This can be done in the technology file, or with the
    <a href="!setcolor"><b>!setcolor</b></a> command.

    <blockquote>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><th>variable</th> <th>purpose</th> <th>default</th></tr>
    <tr><td><tt>GUIcolorDvBg</tt></td> <td>background</td>
      <td><tt>gray90</tt></td></tr>
    <tr><td><tt>GUIcolorDvFg</tt></td> <td>foreground</td>
      <td><tt>black</tt></td></tr>
    <tr><td><tt>GUIcolorDvHl</tt></td> <td>highlight</td>
      <td><tt>blue</tt></td></tr>
    <tr><td><tt>GUIcolorDvSl</tt></td> <td>selection</td>
      <td><tt>gray80</tt></td></tr>
    </table>
    </blockquote>

!!SEEALSO
sidemenu

!! 100916
!!KEYWORD
xic:donut
!!TITLE
The donut Button: Create Donut Object
!!HTML
    <img src="donut.xpm">
    <b>Keyword</b>: <tt>donut</tt>

    <p>
    The <b>donut</b> button appears only in physical mode.  It is used
    to create a ring-like polygon.  The number of segments used to
    approximate a circle can be altered with the <a
    href="xic:sides"><b>sides</b></a> command.

    <p>
    If the user presses and holds the <b>Shift</b> key after the
    center location is defined, and before the perimeter is defined by
    either lifting button 1 or pressing a second time, the current
    radius is held for x or y.  The location of the <b>Shift</b> press
    defines whether x is held (pointer closer to the center y) or y is
    held (pointer closer to the center x).  This allows elliptical
    donuts to be generated.  This similarly applies when defining the
    outer radii, so that the inner and outer surfaces can have
    different elliptical aspect ratios, though the outer radius must
    be larger than the inner radius at all angles.

    <p>
    The <b>Ctrl</b> key also provides useful constraints.  Pressing
    and holding the <b>Ctrl</b> key when defining the radii produces
    a radius defined by the pointer position projected on to the x or
    y axis (whichever is closer) defined from the center.  Otherwise,
    off-axis snap points are allowed, which may lead to an unexpected
    radius on a fine grid.

    <p>
    When the command is expecting a mouse button press to define a
    radius, the value as defined by the mouse pointer (in microns) is
    printed in the lower left corner of the drawing window, or the X
    and Y values are printed if different.  Pressing <b>Enter</b> will
    cause prompting for the value(s), in microns.  If one number is
    given, a circular radius is accepted, however one can enter two
    numbers separated by space to set the X and Y radii separately.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within two pixels.  When snapped, a
    small dotted highlight box is displayed.  This makes it much
    easier to create abutting objects when the grid snap spacing is
    very fine compared with the display scaling.  This feature can be
    controlled from the <b>Edge Snapping</b> group in the
    <b>Snapping</b> page of the <a href="xic:grid"><b>Grid
    Setup</b></a> panel.

    <p>
    If the <a href="SpotSize"><b>SpotSize</b></a> variable is set to a
    positive value, or the <a href="MfgGrid"><tt>MfgGrid</tt></a> has
    been given a positive value in the technology file, tiny round and
    donut figures are constructed somewhat differently.  Objects
    created with the <a href="xic:round"><b>round</b></a> and <a
    href="xic:donut"><b>donut</b></a> buttons, and corresponding
    script functions, will be constructed so that all vertices are
    placed at the center of a spot, and a minimum number of vertices
    will be used.  The <a href="xic:sides"><b>sides</b></a> number is
    ignored.  This applies only to figures with minimum radius 50
    spots or smaller; the regular algorithm is used otherwise.  An
    object with this preconditioning applied should translate exactly
    to the e-beam grid.

!!SEEALSO
sidemenu

!! 012715
!!KEYWORD
xic:erase
!!TITLE
The erase Button: Erase or Yank Geometry
!!HTML
    <img src="erase.xpm">
    <b>Keyword</b>: <tt>erase</tt>

    <p>
    Rectangular regions of <a href="xic:polyg">polygons</a>, <a
    href="xic:box">boxes</a>, and <a href="xic:wire">wires</a> can be
    erased or "yanked" with the <b>erase</b> button.  The user clicks
    twice or presses and drags to define the diagonal of the region to
    be erased.  Selected objects are not erased.  Wires maintain a
    constant width, and are cut at the points where the midpoint
    crosses the boundary of the erased area.

    <p>
    In physical mode, if the <b>Shift</b> key is held during the
    operation termination (click or button release), there is no
    erasure, however the pieces that would have been erased are
    "yanked", i.e., added to the yank buffer.  The pieces are also
    added to the yank buffer when actually erased.  The yank buffer
    chain has a depth of five, meaning that the contents of the last
    five yanks/erasures are available for placement with the <a
    href="xic:put"><b>put</b></a> command.

    <p>
    Geometry in "foreign" windows can be yanked.  These are
    physical-mode <a href="xic:vport">sub-windows</a> showing a
    different cell than the current cell being edited (as showing in
    the main window).  The foreign window is never erased (i.e.,
    holding <b>Shift</b> is not necessary), but the structure that
    would be erased is added to the yank buffer.  Thus, one can
    quickly copy a rectangular area of geometry from another cell into
    the current cell, by yanking with <b>erase</b> and placing with
    the <b>put</b> command (below <b>erase</b> in the side menu).

    <p>
    The <b>SpaceBar</b> toggles "clip mode".  When clip mode is
    active, for objects that overlap the rectangle defined with the
    mouse, instead of erasing the interior of the rectangle as in the
    normal case, the material outside of the rectangle will be erased
    instead.  The overlapping objects will be clipped to the
    rectangle.  This applies whether erasing or yanking, again the
    yank buffer will acquire the pieces that would (or actually do)
    disappear in an erase operation.

    <p>
    When the <b>Ctrl</b> key is held before the box is defined,
    clicking on a subcell will cause the subcell's bounding box to be
    used as the rectangle.  Thus, objects can be easily clipped to or
    around the subcell boundary.  This applies when yanking as well. 
    The standard erase is the inverse of the subcell paint operation
    in the <a href="xic:box"><b>box</b></a> command.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within two pixels.  When snapped, a
    small dotted highlight box is displayed.  This makes it much
    easier to create abutting objects when the grid snap spacing is
    very fine compared with the display scaling.  This feature can be
    controlled from the <b>Edge Snapping</b> group in the
    <b>Snapping</b> page of the <a href="xic:grid"><b>Grid
    Setup</b></a> panel.

    <p>
    The <a href="xic:box"><b>box</b></a>, <b>erase</b>, and <a
    href="xic:xor"><b>xor</b></a> commands participate in a protocol
    that is handy on occasion.

    <p>
    Suppose that you want to erase an area, and you have zoomed in
    and clicked to define the anchor, then zoomed out or panned and
    clicked to finish the operation.  Oops, the <b>box</b> command
    was active, not <b>erase</b>.  One can press <b>Tab</b> to undo
    the unwanted new box, then press the <b>erase</b> button, and the
    <b>erase</b> command will have the same anchor point and will be
    showing the ghost box, so clicking once will finish the erase
    operation.

    <p>
    The anchor point is remembered, when switching directly between
    these three commands, and the command being exited is in the
    state where the anchor point is defined, and the ghost box is
    being displayed.  One needs to press the command button in the
    side menu to switch commands.  If <b>Esc</b> is pressed, or a
    non-participating command is entered, the anchor point will be
    lost.

!!SEEALSO
sidemenu
xic:eundr

!! 101810
!!KEYWORD
xic:iplot
!!TITLE
The iplot Button: Interactive Analysis Plotting
!!HTML 
    <img src="iplot.xpm">
    <b>Keyword</b>: <tt>iplot</tt>

    <p>
    The <b>iplot</b> command, available in electrical mode, is useful
    only if the <i>WRspice</i> program is available.  Operation is
    similar to the <a href="xic:plot"><b>plot</b></a> button, whereby
    a command string is generated through selection of nodes and
    branches with the pointer.  The command line can be <a
    href="promptline#editing">edited</a> in the usual way to generate,
    for example, functions of the plot variables.  Pressing the
    <b>Enter</b> key saves the command.  When the <b>iplot</b> button
    is active and a command has been saved, the plot is generated
    dynamically while a simulation, initiated with the <a
    href="xic:run"><b>run</b></a> command, is in progress.

    <p>
    The <b>S</b> and <b>R</b> buttons, to the left of the prompt area,
    can be used to save and restore prompt line text in a set of
    internal registers.

    <p>
    Pressing the <b>iplot</b> button a second time will turn off the
    interactive plotting.  Pressing <b>iplot</b> and then <b>Enter</b>
    will turn the interactive plotting back on.  Of course, the trace
    points and plotting command can be modified before pressing
    <b>Enter</b>.  In particular, if all prompt line text is deleted,
    pressing <b>Enter</b> will delete the internally saved command
    string, and turn interactive plotting off.  Pressing the
    <b>iplot</b> button again will take as default text the string
    from the <b>plot</b> command, if any.

    <p>
    The command text and mark locations are saved with the cell data
    when written to disk, thus the <b>iplot</b> command is persistent.

!!SEEALSO
sidemenu
 
!!REDIRECT spicetext    xic:label#spicetext
!!REDIRECT longtext     xic:label#longtext
!!REDIRECT execlabel    xic:label#execlabel
!!REDIRECT wirelabel    xic:label#wire

!! 022619
!!KEYWORD
xic:label
!!TITLE
The label Button: Create/Edit Labels
!!HTML
    <table border=0>
    <tr><td valign=top><b>jump to</b></td> <td>
    <a href="xic:label#devprop"><b>Device Property Labels</b></a><br>
    <a href="xic:label#wire"><b>Wire Net Name Labels</b></a><br>
    <a href="xic:label#ctrl"><b>Ctrl-a and Ctrl-p</b></a><br>
    <a href="xic:label#spicetext"><b>Spicetext Labels</b></a><br>
    <a href="xic:label#longtext"><b>"Long Text" Capability</b></a><br>
    <a href="xic:label#execlabel"><b>Script Labels</b></a><br>
    <a href="xic:label#maxlen"><b>Label Size Issues</b></a><br>
    <a href="xic:label#lfont"><b>Label Font File</b></a>
    </td></tr></table>

    <p>
    <img src="label.xpm">
    <b>Keyword</b>: <tt>label</tt>

    <p>
    The <b>label</b> button is used to create or modify a text label. 
    Labels are abstract annotation objects which do not appear in
    physical output.  For physical text, use the <a
    href="xic:logo"><b>logo</b></a> command button.

    <p>
    If a label is selected before pressing the <b>label</b> button,
    then the selected label can be edited.  Multiple labels can be
    selected, and each will receive the new label text.  If more than
    one label is being changed, the command exits after the new text
    is entered on the prompt line, i.e., after <b>Enter</b> is pressed
    to terminate text entry.

    <p>
    If only one label is being changed, on pressing <b>Enter</b> the
    new text is "attached" to the mouse pointer, as for a new label. 
    In this state, the text size, orientation, and justification can
    be changed as will be described below.  The user can either click
    in a drawing window to place the label at the click location
    (effectively moving the selected label), or press <b>Enter</b> to
    update the selected label at the existing location.

    <p>
    This is the recommended way to change the size of a label:  select
    it, press the <b>label</b> button, press <b>Enter</b> to keep the
    same text, adjust the size with the arrow keys, then press
    <b>Enter</b> again to update the label.  This keeps the label in a
    standard size and aspect ratio which will match other labels. 
    This would not be the case if the <a
    href="xic:strch"><b>Stretch</b></a> command or operation was used
    instead.

    <p>
    If no label was initially selected, after the label text has been
    entered, the label will appear ghost-drawn, attached to the mouse
    pointer.  The text will be rotated or mirrored according to the
    current transform, as set from the pop-up provided by the <a
    href="xic:xform"><b>xform</b></a> button in the side.  Instances
    of the label are placed where the user clicks in a drawing window.

    <p>
    Label text in entered in the prompt line.  While editing, if the
    user clicks on an existing label in a drawing widow which is
    contained in the current cell, the text of that label will be
    inserted at the prompt line cursor.  <a
    href="hypertext">Hypertext</a> entries in the label will be
    preserved.  If the existing label is a "long text" label
    (described below), the long text attribute will be lost, unless
    the prompt line is empty before clicking on the label. 
    Particularly in electrical mode, clicking on other objects in a
    drawing window will insert text at the cursor position, as will be
    described.  Pressing <b>Enter</b> terminates the label text and
    will allow placement of copies of the new label.

    <p>
    The size and justification of the label can be adjusted with the
    arrow keys, before it is placed.  The arrow keys have the
    following effect:

    <blockquote>
    <table border=0 cellpadding=2>
    <tr><td><b>Up</b></td> <td>enlarge by 2</td></tr>
    <tr><td><b>Right</b></td> <td>enlarge by 10%</td></tr>
    <tr><td><b>Down</b></td> <td>reduce by 2</td></tr>
    <tr><td><b>Left</b></td> <td>reduce by 10%</td></tr>
    </table>
    </blockquote>

    <p>
    The initial size of a label is determined by the present default
    label height, and the magnification of the current drawing window. 
    The default label height is 1.0 microns, which can be reset by
    setting the <a href="LabelDefHeight"><b>LabelDefHeight</b></a>
    variable to a different value.  The default height is the smallest
    size available through scaling with the arrow keys.  Generally,
    <i>Xic</i> functions that create new labels will use the default
    label height.  The default height of one micron is too large for
    modern semiconductor processes, so one should redefine
    <b>LabelDefHeight</b> in the technology file to a more suitable
    value, typically the minimum feature size.

    <p>
    By default, the label is anchored at the lower left corner, though
    this justification can be changed by holding the <b>Shift</b> key
    while pressing the arrow keys.  The <b>Left</b> and <b>Right</b>
    arrows cycle through left, center, and right justification.  The
    <b>Up</b> and <b>Down</b> arrow keys cycle through bottom, center,
    and top justification.  Finally, holding the <b>Ctrl</b> key while
    pressing the arrow keys will change the current rotation angle. 
    The arrow keys implicitly cycle through the angle choices, with
    <b>Up</b> and <b>Right</b> cycling in the opposite sense from
    <b>Down</b> and <b>Left</b>.

    <p>
    Labels are scalable, and can be stretched with the <a
    href="xic:strch"><b>Stretch</b></a> command in the <b>Modify
    Menu</b> or with <a href="button1">button 1 </a> operations.

    <p>
    Newlines can be embedded in the label text by pressing
    <b>Shift-Enter</b>.  The displayed label will contain line breaks
    at those points.  The justification applies to the block, and
    line-by-line within the block.

    <p>
    Labels are shown in legible orientation (i.e., left to right or
    down to up) by default, independent of the actual transformation. 
    If the <a href="xic:larot"><b>Label True Orient</b></a> button in
    the <b>Main Window</b> sub-menu of the <b>Attributes Menu</b> or
    the <a href="xic:vport">sub-window</a> <b>Attributes</b> menu is
    set accordingly, labels will be shown in their actual orientation.

    <p>
    Pressing the <b>Delete</b> key after label text has been entered
    will repeat prompting for new label text.  Labels have fixed size
    as compared with layout geometry.

    <a name="devprop"></a>
    <h2>Device Property Labels</h2>

    Labels are created internally for device properties in electrical
    mode.  These labels can be moved, deleted, and edited just as
    user-supplied labels.  Once deleted, though, such labels can not
    be recreated except by recreating the device, or by using the <a
    href="!regen"><b>!regen</b></a> command.  The underlying property
    is not deleted, it simply is not displayed in a label.

    <p>
    These labels can be "hidden" by clicking on the label text with
    button 1 with the <b>Shift</b> key held.  This replaces the label
    text with a small box icon.  Shift-clicking the icon will
    redisplay the text.  This can be useful when long labels obscure
    other features.  See the <a href=xic:label#maxlen>Label Size
    Issues</a> section below for more information.

    <p>
    Labels can be edited by selecting the label before pressing the
    <b>label</b> button.  If the label was generated for a <a
    href="properties">property</a> in electrical mode, the underlying
    property is also changed.  This is a quick way to modify device
    properties, without invoking the <a
    href="xic:prpty"><b>Properties</b></a> command button in the
    <b>Edit Menu</b>.

    <a name="wire"></a>
    <h2>Wire Net Name Labels</h2>

    Similar to the property labels, electrical <a
    href="xic:wire">wires</a> that participate in schematic
    connectivity can have a bound <a href="xic:wire#label">label</a>
    that provides a <a href="xic:nodmp">name</a> for the net
    containing the wire.

    <p>
    Unlike the device labels, wire net labels are created by the user. 
    If the <b>label</b> command is started with a single selected wire
    on an electrically-active layer, the label created will be bound
    to that wire.  Thus, to create a label for a wire, select the
    wire, press the <b>label</b> button in the side menu, and create
    the label.  These labels can exist on any layer.

    <p>
    Once created, these labels can be edited in the same manner as
    property labels, i.e., select the label and enter the label
    command by pressing the side menu <b>label</b> button.

    <a name="ctrl"></a>
    <h2>Ctrl-a and Ctrl-p</h2>

    In electrical mode, outside of any command, pressing <b>Ctrl-a</b>
    will cause the associated labels of any selected device or wire to
    also become selected.  If labels are selected, then pressing
    <b>Ctrl-a</b> will cause their associated device or wire to also
    become selected.  The associated labels can be deselected by
    pressing <b>Ctrl-p</b>.  This is useful for determining which
    labels are associated with a given device or wire, and
    <i>vice-versa</i>.

    <a name="spicetext"></a>
    <h2>Spicetext Labels</h2>

    In electrical mode, for efficiency reasons it is best not to use
    the SCED layer for labels.  If the current layer is the SCED
    layer, a new label will instead be created using the ETC1 layer. 
    If for some reason a label is required on the SCED layer, the <a
    href="xic:chlyr"><b>Change Layer</b></a> command in the <b>Modify
    Menu</b> can be used to move an existing label to the SCED layer.

    <p>
    In electrical mode, labels can be used to enter arbitrary text
    into the SPICE output.  There are two methods to achieve this.  In
    addition, the <a href="SpiceInclude"><b>SpiceInclude</b></a>
    variable can be used to add a file inclusion to the SPICE output.

    <p>
    If an electrical layer named "SPTX" exists, labels on this layer
    will be included, verbatim, as separate lines in SPICE output,
    unless the label is a "spicetext" label (below).  These labels are
    sorted by position, top-to-bottom and left-to-right in output, and
    are placed ahead of the spicetext labels.  A label on the SPTX
    layer in the format of a spicetext label will be output as a
    spicetext label.

    <p>
    If the first word of the label is of the form
    <blockquote>
      <tt>spicetext</tt><i>N</i>
    </blockquote>
    the label is a "spicetext" label, and the text which follows will
    be entered verbatim as a separate line in the SPICE input.  The
    spicetext labels can appear on any layer.  The integer <i>N</i>,
    which is optional, is a sorting parameter.  If there are multiple
    labels containing SPICE text, they will be sorted by <i>N</i>
    before being added to the SPICE output.  Smaller <i>N</i> will
    appear earlier in the listing, with omitted <i>N</i> corresponding
    to a value of zero.  The <tt>spicetext</tt> lines are written as a
    contiguous block in the listing.

    <p>
    Any text which can be interpreted by the SPICE simulator in use
    can be added using these methods, but erroneous syntax will of
    course cause errors as the SPICE text is sourced.

    <a name="longtext"></a>
    <h2>"Long Text" Capability</h2>

    When editing or creating unbound labels, or labels for physical or
    certain electrical properties (<b>value</b>, <b>param</b>, and
    <b>other</b>), there is provision for entering a block of text
    that will not be visible in the layout or schematic.  This avoids
    cluttering the screen with labels containing large blocks of text.
    Rather, a symbolic form will be shown instead of the full text.

    <p>
    This same capability applies when adding or editing properties
    from the <b>Property Editor</b> provided by the <a
    href="xic:prpty"><b>Properties</b></a> button in the <b>Edit
    Menu</b>.

    <p>
    This capability is useful for properties which require a large
    block of text, such as a long PWL statement in a <b>value</b>
    property for SPICE.  It is not possible to edit a large text block
    in the prompt area, and if displayed would cause the screen to be
    obscured or cluttered.  The full text is added to SPICE output,
    however, and is available as the property value in functions that
    query the value.

    <p>
    It is also useful for the <tt>spicetext</tt> labels, so that a
    block of text can be inserted into SPICE output, rather than one
    line.  Remember that the text entered into the window must begin
    with "<tt>spicetext</tt>" and an optional integer, for the text to
    appear in SPICE output.

    <p>
    When entering a label where this "long text" capability applies, a
    small "<b>L</b>" button will appear to the left of the prompt
    line, and this will be active

    when the text cursor is in the leftmost column.  Pressing this
    button will set the internal flag for "long text", and open the <a
    href="texteditor">text editor</a> window for the text.  Any text that
    was previously entered in the prompt line will be added to the
    text editor window, or, if the label was already in long text mode,
    the existing text will be shown in the editor.

    <p>
    If preexisting text was present on the prompt line when the
    <b>L</b> button was pressed, that text will be loaded into the
    text editor, but any hypertext entries will be converted to plain
    text.  The long text blocks do not support the hypertext feature.

    <p>
    Pressing <b>Ctrl-t</b> has the same effect as pressing the
    <b>L</b> button when the button is visible and active.

    <p>
    From the editor window, one can edit the block of text, then press
    <b>Save</b> in the editor's <b>File</b> menu to complete the
    operation, or <b>Quit</b> to abort.  The on-screen label will
    simply say "<tt>[text]</tt>" for a normal "long text" property or
    non-associated label, or have the standard form for a
    script label (described below);
    
    <p>
    The long text labels can be edited with the label editor, as can
    normal labels, by selecting the label before pressing the
    <b>label</b> button.  The prompt line will display
    "<tt>[text]</tt>" as a hypertext entry.  Pressing <b>Enter</b> or
    the <b>L</b> button will bring up the text editor loaded with the
    text associated with the label, allowing editing.

    <p>
    To convert a long text label to a normal label, instead of
    bringing up the text editor, the hypertext "<tt>[text]</tt>" entry
    can be deleted in the prompt line.  Deleting the entry will place
    as much of the text block as possible on the prompt line, and
    delete the text block and the association of the label or property
    as a long text object.

    <a name="execlabel"></a>
    <h2>Script Labels</h2>

    <i>Xic</i> provides the ability to embed a <a
    href="xicscript">script</a> or script reference in a label, which
    is executed when the user clicks on the label.  These are created
    like any other label, but have the form

    <blockquote>
    <tt>!!script</tt> [<tt>name=</tt><i>word</i>] [<tt>path=</tt><i>path</i>]
      [<i>script text</i>...]
    </blockquote>

    The leading token in the label must be "<tt>!!script</tt>" to
    indicate that the label text is executable.  This is followed by
    zero or more keyword/value pairs as shown, followed by the script
    text that will be executed.  The keywords and values must be
    separated by '=' with no space.  The value is a single token,
    which should be double-quoted if it contains white space.  These
    are optional.

    <p>
    The keywords have the following interpretations.
    <dl>
    <dt><tt>name=</tt><i>some_word</i><dd>
    The script label is rendered on-screen as <i>some_word</i>
    surrounded by a box.  If no name is given, the word
    "<tt>script</tt>" is shown.
    </dl>

    <dl>
    <dt><tt>path=</tt><i>some_path</i><dd>
    If this is given, then the script to be executed is given by
    <i>some_path</i> and any executable statements in the label are
    ignored.  The <i>some_path</i> can be an absolute path to a script
    file, or can be the name of a script file expected to be found in
    the script <a href="xicpaths">search path</a>.
    </dl>

    <p>
    Any remaining text is executed as script commands, if
    <tt>path</tt> is not given.  For short scripts, semicolons can be
    used as command terminators in a single line.  Otherwise, a text
    editor can be invoked on the label string by pressing the "L"
    (long text) button when creating the label.

    <p>
    Clicking on a script label will execute the script, and not select
    the label as with normal labels.  To select a script label, hold
    <b>Shift</b> while clicking on the label, or drag over the label
    (area select).  If a script label is selected, it will not execute
    when clicked on, but rather be deselected.

    <p>
    For example, suppose that a user has a large layout, with a small
    section that the user often needs to zoom into.  The user can
    create a script label to perform the zoom operation.  After
    zooming in, one can note the position and estimate the width of
    the drawing window.  Then, one would create a label such as
    <blockquote>
      <tt>!!script name=zoom Window(</tt><i>x</i>, <i>y</i>, <i>width</i>,
      <tt>GetWindow())</tt>
    </blockquote>
    and place it somewhere convenient.  The <i>x</i>, <i>y</i>, and
    <i>width</i> above of course represent the actual values (in
    microns).  Clicking on the label will always zoom to this area.

    <a name=maxlen></a>
    <h2>Label Size Issues</h2>

    In electrical mode, property text labels can be displayed or
    "hidden".  If a label is hidden, the text is not displayed, only a
    small box at the text reference point is shown.

    <p>
    Labels with text size longer than a certain length will be shown
    as hidden by default.  Hidden labels can be made visible, and
    <i>vice-versa</i> by clicking on the label or small box with the
    <b>Shift</b> key held.  The label text can also be shrunk (with
    the <a href="xic:strch"><b>Stretch</b></a> command in the
    <b>Modify Menu</b> or with button 1 operations) to make it
    visible.

    <p>
    The label hidden status is persistent when the cell is saved in
    any format, however changing the display status does <b>not</b>
    change the modified state of a cell, thus this can be done in
    IMMUTABLE cells.

    <p>
    It should be noted that the "real" bounding box of the label,
    which is used to set the cell bounding box, is always the bounding
    box of the actual text.  The hidden display mode is only available
    for the labels that contain property strings in electrical mode. 
    Hidden labels can be selected only over the small box, and only
    the small box is highlighted.  However, when moving or stretching,
    the entire "real" bounding box is highlighted.

    <p>
    The size threshold can be changed with the <b>Maximum displayed
    property label length</b> entry in the <b>Window Attributes</b>
    panel from the <a href="xic:attr"><b>Set Attributes</b></a> button
    in the <b>Attributes Menu</b>.  Equivalently, the variable <a
    href="LabelMaxLen"><b>LabelMaxLen</b></a>, can be set to an
    integer greater than 6 with the <a href="!set"><b>!set</b></a>
    command.  The units are the width of a default-size character
    cell.  In releases prior to 2.5.66, the default length was 32
    default character size cells.  In this and later releases, the
    value is 256 character cells.  The larger threshold makes the
    non-display of label text much less probable, as this feature has
    been confusing to users.

    <p>
    Another way to obscure a long label is to convert it to a "long
    text" label.

    <p>
    To "hide" a label using the "long text" feature:
    <ol>
    <li> Select the label.
    <li> Press the side menu <b>label</b> button (with the black 'T' icon).
    <li> Press the gray <b>L</b> button that appears to the left of
     the prompt line.  This will cause the text editor to appear,
     loaded with the label text.  If there is no <b>L</b> button, then
     the property can't use long text, which is true for properties
     that are "always" short, such as for device and model names.
    <li> In the text editor, press <b>Save</b> in the <b>File</b> menu.
     The editor will disappear, and the label displayed on-screen will
     have changed to "<tt>[text]</tt>".
    </ol>

    <p>
    To convert back to a normal label:
    <ol>
    <li> Select the long-text label ("[text]").
    <li> Press the side menu <b>label</b> button (with the black 'T' icon).
    <li> With the cursor under "<tt>[text]</tt>" on the prompt line, press
     the <b>Delete</b> key.  The full label text will appear on the prompt
     line.
    <li> Press <b>Enter</b>.  The label will be shown normally.
    </ol>

    <p>
    Long property text labels can also be broken into multiple lines
    by adding embedded returns.  These are added with
    <b>Shift-Enter</b> while the string is being edited.  Note that
    this generates newlines in the SPICE output, so that in most cases
    the extra lines should begin with the "+" continuation character.

    <a name=lfont></a>
    <h2>Label Font File</h2>

    It is possible to change the <a href="vectorfont">font</a> used
    for labels.  The default font is set internally by <i>Xic</i>,
    however individual characters or the whole font used for labels
    will be updated upon startup if a file named "<tt>xic_font</tt>"
    is found along the library <a href="xicpaths"><b>search
    path</b></a>, which contains alternative character specifications.

!!SEEALSO
sidemenu
xic:xform
xic:strch

!! 052311
!!KEYWORD
xic:logo
!!TITLE
The logo Button: Create Physical Text
!!HTML
    <img src="screenshots/logo.png" align=right>

    <b>jump to</b> <a href="xic:logo#panel"><b>The Logo Font Setup
    Panel</b></a>

    <p>
    <img src="logo.xpm">
    <b>Keyword</b>: <tt>logo</tt>

    <p>
    The <b>logo</b> command allows the creation of physical text and
    images for labeling, identification, etc.  Operation is similar to
    the <a href="xic:label"><b>label</b></a> command, where the arrow
    keys alter text or image size, <b>Shift</b>-arrow cycles through
    the justification choices, and <b>Ctrl</b>-arrow cycles through
    the rotation angles.  By default, the text is implemented with
    wires in the current layer, using a vector font.

    <p>
    For rendering text, there are three font possibilities.  The
    default font is a vector font which constructs the characters
    using wire objects.  The Manhattan font is a built-in bitmap font
    from which the characters are constructed using Manhattan
    polygons.  The Manhattan font is fixed-pitch with an 8X16 map. 
    The "pretty" font is one of the system fonts, which similarly
    creates characters constructed as Manhattan polygons.  Logic is
    applied to extract the "best" rendition from anti-aliased fonts,
    which do not have a precisely defined shape.  Some fonts may look
    better than others in this application.

    <p>
    While in the <b>logo</b> command and using the vector font,
    pressing the <b>Ctrl-Shift</b>-arrow key combinations will adjust
    the path width; the <b>Up</b> and <b>Right</b> arrow keys increase
    the width, <b>Down</b> and <b>Left</b> arrows decrease the path
    width.

    <p>
    The <a href="LogoPathWidth"><b>LogoPathWidth</b></a> variable
    tracks the current path width setting.  The <a
    href="LogoEndStyle"><b>LogoEndStyle</b></a> variable tracks the
    current end style setting.

    <p>
    Instead of a text label, the <b>logo</b> command can be used to
    place an image.  The image must be provided by a file in the XPM
    format.  This is a simple ASCII bitmap format, commonly used in
    conjunction with the X-windows system on Unix machines.  Other
    types of bitmap files can be converted to XPM format with widely
    available free software, such as the ImageMagick package.  Several
    XPM files are supplied in the help directory for <i>Xic</i>
    (located by default in <tt>/usr/local/xictools/xic/help</tt>),
    which illustrate the format.

    <p>
    This feature is enabled in the <b>logo</b> command by giving the
    path of an XPM file, which must have a "<tt>.xpm</tt>" suffix, as
    the text string.  This will cause the image to be imported such
    that it can be scaled, transformed, and placed, just like a normal
    label.  The background color (the first color listed in the XPM
    file) is taken as transparent.  All other layers found in the XPM
    file are mapped to the current layer.  The image is rendered as a
    collection of Manhattan polygons.

    <p>
    Unlike in releases 3.0.11 and earlier, there is no attempt to
    limit feature sizes according to design rules.  The minimum size
    of a character is set by the internal resolution, while the
    maximum size is about .4 X .7 cm.  Once the text is entered, the
    size and other attributes can be changed with the arrow keys, and
    the text is placed where the user clicks in the drawing with
    button 1.  The text can be reentered, i.e., a new label or image
    file defined, if the <b>Delete</b> key is pressed.

    <p>
    Alternatively, a fixed "pixel" size can be specified.  In this
    case, the arrow keys will pan the display window, and have no
    effect on the label or image size.

    <p>
    The default operation is to apply the text or image feature
    directly in the current cell, where the user clicks.  It is also
    possible to create a subcell containing the text, which is
    instantiated at the clicked-on locations.  This may be more
    efficient if there are many copies of the same label.

    <p>
    Note that use of the vector font may produce design rule
    violations, which are pretty much inevitable due to the presence
    of acute angles in some characters.  Use of the other fonts, which
    are rendered using Manhattan polygons, can avoid design rule
    violations, if the "pixel" size is larger than the MinWidth and
    MinSpace design rules for the layer.  When physical text (or an
    image) is placed with the <b>logo</b> command, interactive design
    rule checking is suppressed.  The <a href="xic:sflag">NoDRC</a>
    flag can be set on the new label, or the NDRC layer can be used,
    to permanently suppress DRC.

    <p>
    It is possible to change the <a href="vectorfont">font</a> used
    for the <b>logo</b> command.  The default font is set internally
    by <i>Xic</i>, however individual characters or the whole font
    will be updated upon startup if a file named
    "<tt>xic_logofont</tt>" is found along the library <a
    href="xicpaths">search path</a>, which contains alternative
    character specifications.

    <a name="panel"></a>
    <h2>The Logo Font Setup Panel</h2>

    <p>
    While the <b>logo</b> command is active, the <b>Logo Font
    Setup</b> panel is visible, though this can be dismissed without
    leaving the <b>logo</b> command.  The top of the panel provides
    three "radio" buttons for selecting the font:  <b>Vector</b>,
    <b>Manhattan</b>, and <b>Pretty</b>.  The <a
    href="LogoAltFont"><b>LogoAltFont</b></a> variable tracks the
    choice in these buttons.

    <p>
    Below the <b>Font</b> choice buttons is the <b>Define "pixel"
    size</b> check box and numeric entry window.  When checked, the
    numeric entry area is enabled, and the value represents the size
    of a "pixel" used for rendering the label or image, in microns. 
    When checked, the arrow keys have no effect on label or image
    size, instead they revert to their normal function of panning the
    display window.  This feature is tied to the <a
    href="LogoPixelSize"><b>LogoPixelSize</b></a> variable, which when
    set to a real number larger than 0 and less than or equal to 100.0
    will define the "pixel" size used in the <b>logo</b> command.

    <p>
    There are two option menus in the <b>Logo Font Setup</b> panel
    which set the end style and path width assumed in the wires used
    for constructing characters with the vector font.  The user can
    set these according to personal preference.  Although rounded end
    paths may look better, they are somewhat less efficient in terms
    of storage and processing, and are not handled uniformly (or at
    all) in some CAD environments.  For example, rounded-end wires may
    be converted to square ends when written as OASIS data.

    <p>
    The <b>Select Pretty Font</b> button brings up the <b>Font
    Selection</b> panel, allowing the user to select a system font for
    use as the "pretty" font.  In the <b>Font Selection</b> panel, the
    user can select a font, then press the <b>Set Pretty Font</b>
    button to actually export the choice.  This will set the <a
    href="LogoPrettyFont"><b>LogoPrettyFont</b></a> variable.

    The <b>Create cell for text</b> check box, when checked, sets a
    mode where new labels and images are instantiated as subcells
    rather than directly as geometrical objects.  In addition to
    generating a master cell in memory, a native cell file with the
    same name is written in the current directory.  The boolean
    variable <a href="LogoToFile"><b>LogoToFile</b></a> tracks this
    state of this check box.

    <p>
    The name of the cell used for the label is internally generated,
    and the corresponding file is guaranteed to be unique in the
    current search path.  The name consists of the first 8 characters
    of the label, followed by an encoding of the various parameters
    related to the label.  For a given label, the uniqueness of the
    file name prevents recreating the same label file in a subsequent
    session.

    <p>
    The <b>Dump Vector Font</b> button will create a file containing
    the <a href="vectorfont">vector font</a> currently being used by
    the <b>logo</b> command.  By default, the vector font uses the
    same character maps as the vector font used to render label text
    on-screen.  However, these maps can be overridden by definitions
    from a file.  The <b>Dump Vector Font</b> button can be used to
    dump the current set of character maps to a file.  Character maps
    from this file can be modified and placed in a file named
    "<tt>xic_logofont</tt>" in the library <a href="xicpaths">search
    path</a>, in which case they will override the internal
    definitions when producing vector-based characters in the
    <b>logo</b> command.

!!SEEALSO
sidemenu

!!REDIRECT globname             xic:nodmp#glob

!! 061913
!!KEYWORD
xic:nodmp
!!TITLE
The nodmp Button: Node (Net) Name Assignments
!!HTML
    <img src="screenshots/nodemap.png" align=right>
    <table border=0>
    <tr><td><img src="nodmp.xpm">
    <b>Keyword</b>: <tt>nodmp</tt></td></tr>
    </table>

    <p>
    The <b>nodmp</b> button, which is available in the electrical mode
    side menu, will bring up the <b>Node (Net) Name Mapping</b> panel
    which is used to display and alter the names used for "nodes"
    (single-conductor wire nets) in the schematic, and in SPICE and
    other output.  This name may be internally generated, or may be
    derived from a terminal name, or may be assigned by the user. 
    This panel is also brought up by the <b>Find Terminal</b> button
    in the <b>Setup</b> page of the <a href="xic:excfg"><b>Extraction
    Setup</b></a> panel, which is obtained from the <b>Setup</b>
    button in the <b>Extract Menu</b>.

    <p>
    First, to facilitate the discussion that follows, some terminology
    will be introduced.  See also the section on <a
    href="elec:netname">wire net naming</a>.

    <dl>
    <dt>scalar<dd>
    Single-conductor wire nets, or "nodes" (from SPICE terminology)
    are referred to as "scalar" nets.  These are the actual circuit
    connections, which are compared in layout vs.  schematic (<a
    href="xic:lvs">LVS</a>) testing.  <i>Xic</i> also allows
    multi-conductor (including single-conductor) "vector" and "bundle"
    nets.  These actually reference and organize the nodes, but do not
    provide actually connectivity, except through name matching.  The
    present <b>Node (Net) Name Mapping</b> panel applies only to the
    scalar nets.
    </dl>

    <dl>
    <dt>associated name<dd>
    A scalar wire net, or "node" may have "associated names".  These
    names derive from <a href="dev:tbar">named terminal</a> devices
    which may be connected to the net, or from <a
    href="xic:wire#label">labeled wires</a> which are connected to the
    net.  Both the terminal device and the labeled wire derive the
    net name from the text of an associated label.  The labels can be
    edited, which will change the text of the associated name.  A net
    may have any number of associated names.
    </dl>

    <dl>
    <dt>cell terminal name<dd>
    Every electrical contact point of a cell has a name.  This name
    was assigned when the cell terminal was created with the <a
    href="xic:subct"><b>subct</b></a> command button in the side menu,
    or if no name was given a default name is used.

    <p>
    It is also possible to name cell contact terminals from the <a
    href="xic:tedit"><b>Edit Terminals</b></a> command button in the
    <b>Setup</b> page of the <a href="xic:excfg"><b>Extraction
    Setup</b></a> panel.  This panel is brought up with the
    <b>Setup</b> button in the <a href="xic:extmenu"><b>Extract
    Menu</b></a>.
    </dl>

    <a name="glob"></a>
    <dl>
    <dt>global names<dd>
    Certain names are registered within <i>Xic</i> as "global names",
    and are kept in an internal string table.  These names are known
    at every level of the cell hierarchy.  There is always at least
    one global name defined, the ground node with name "<tt>0</tt>".

    <p>
    Global names are easily created by the user, as any node name ending
    with an exclamation point ('<tt>!</tt>') is taken as a global name.
    For example, "<tt>vdd!</tt>" would be taken as a global name.

    <p>
    Global node names are also set with the <b>DefaultNode</b> global
    properties, in the <a href="devlib">device library</a> file.  They
    may be used as default nodes in some devices.  In particular, the
    "three terminal" <b>nmos</b> and <b>pmos</b> devices included in
    the default library make use of this feature, defining global node
    names "<tt>NSUB</tt>" and "<tt>PSUB</tt>" that connect to the
    device substrate.
    </dl>

    <dl>
    <dt>assigned name<dd>
    Names that are specified from the <b>Node (Net) Name Mapping</b>
    panel using the <b>Map Name</b> button will be referred to as
    "assigned names".
    </dl>

    <p>
    A wire net can clearly have a number of names associated with it.
    The actual name for the node will be chosen according to the
    priorities listed below.

    <p>
    <ol>
    <li>If a net has an associated name that matches a global name,
    that global name is used, and this can not be overridden by the
    user.

    <p>
    If two or more global names match associated names in the net,
    the name chosen will be the one earliest in ASCII lexicographic
    order.  This situation is unlikely and probably represents a
    topology error.

    <p>
    <li>If a net is given an assigned name, that name will be used.

    <p>
    <li>If a net contains a cell terminal, the cell terminal name will
    be used.  It is possible that more than one cell terminal is
    connected to the node, in which case the name chosen will be the
    one earliest in ASCII lexicographic order.

    <p>
    <li>If the net has an associated name, that name will be used.  It
    is possible that more than one associated name will be found, in
    which case the name chosen will be the one earliest in ASCII
    lexicographic order.

    <p>
    <li>The net will be given a name based on the internally-generated
    node number.
    </ol>

    <p>
    For names other than the internally generated node numbers, the
    name is predictable.  The internally generated numbers will change
    if the circuit is modified, or possibly for other reasons.  Thus,
    if netlist or SPICE output is to be used in another application,
    it may be important to assign names to nodes to be referenced by
    name.

    <p>
    The <b>Node (Net) Name Mapping</b> panel contains two text listing
    windows.  The left (node listing) window lists all of the nets in
    the current cell schematic.  An entry in the list can be selected
    by clicking on the text with the mouse.  When a net is selected in
    this list, the terminals to which the net connects are listed by
    name in the right (terminal listing) window.  Entries in the
    terminal listing can be selected as well by clicking on the text
    with the mouse.  In either window, the selected entry, if any, is
    highlighted.

    <p>
    There is a "grip" in the region separating the two text listings,
    which can be dragged horizontally to change the relative widths
    of the windows.

    <p>
    The left column in the node listing contains the internal node
    numbers, which can change arbitrarily if the circuit is modified. 
    Entries in the second column are the mapped names, i.e., the names
    used in SPICE and netlist files.  If the second column entry is
    blank, no name could be found for the net, and <i>Xic</i> will
    create a name from the node number for use in output.  The third
    column will contain the letter "<tt>Y</tt>" if the node has a name
    assigned by the user, and/or a "<tt>G</tt>" if the node name is
    that of a global node (including ground).  Both letters will
    appear if the user assigns a name that matches a global name,
    which includes any name that ends with an exclamation point.  The
    "<tt>G</tt>" nodes without "<tt>Y</tt>" can not be renamed by the
    user.

    <p>
    When a node is selected in the left text window, the right text
    window lists terminals and other features that are found in the
    selected net.  This includes
    <ul>
    <li>Device and subcircuit instance terminals.
    <li>Named terminal devices.  These start with a '<tt>T</tt>"
    character, followed by a space, followed by the name from
    the terminal label.
    <li>Named wires.  These start with '<tt>W</tt>' followed by space
    and the name from the wire label.
    <li>Cell contact terminal names.
    </ul>

    <p>
    The names used for device terminals are a concatenation of the
    device name and the terminal names as supplied in the node
    properties in the <a href="devlib">device library</a> file, if a
    name was given.  If no name was given, a default name is
    constructed as <i>devicename</i>_<i>contactnum</i>.  That is, the
    device name, followed by an underscore, followed by an internal
    index number for contacts of that device.  The device name starts
    with a letter which is the SPICE key for that device type. 
    Subcircuits are similar, and the terminal names begin with
    '<tt>X</tt>'.

    <p>
    In the electrical schematic drawing, when a net is selected in the
    node listing window, wire objects that are included in the
    selected net are highlighted.  Each of the device and subcircuit
    instance terminals listed in the terminal listing area will
    have a small highlighting box drawn around its location.  If one
    of the terminals in the terminal listing is selected, that
    terminal will displayed using highlighting.

    <p>
    The panel will cooperate closely with the physical extraction
    system when the <b>Use Extract</b> check box is checked.  This
    means that extraction/association will be performed as needed so
    that terminal locations are correctly defined in the physical
    layout as well.  In this case, a terminal selected in the terminal
    list will be shown in physical layout windows, as well as the
    schematic.  If the check box is not checked, extraction data will
    be used if present when showing the terminal in layouts, but there
    is no attempt to maintain currency.  The <b>Node (Net) Name
    Mapping</b> panel is also available from the <b>Find Terminal</b>
    button in the <a href="xic:excfg"><b>Extraction Setup</b></a>
    panel in both physical and electrical modes, in addition to the
    side-menu button in electrical mode.

    <p>
    When an entry in the terminal listing window is selected, the
    <b>Find</b> button, below the listing, is un-grayed.  Pressing the
    <b>Find</b> button will bring up a sub-window displaying the
    current cell, with the selected terminal at the exact center of
    the display.  One can press the numeric keypad <b>+</b> key
    repeatedly to zoom in to the terminal location, and the terminal
    will remain centered.  Further, if <b>Use Extract</b> is set or
    the extraction state is current, the terminal will also be
    displayed and centered if the sub-window is changed to physical
    mode.

    <a name="click"></a>
    <p>
    When the <b>Click-Select Mode</b> button is pressed, a command
    state is entered whereby clicking on a wire or contact point in a
    drawing window will select that net.  This works a bit differently
    depending on the state of the <b>Use Extract</b> check box.  If
    the box is checked, the button will bring up the <a
    href="xic:exsel"><b>Path Selection Control</b></a> panel from the
    extraction system.  This allows selection of conducting paths in
    the layout windows by clicking on objects.  The corresponding net
    will be selected in the node listing window, with corresponding
    highlighting shown in schematic windows.  One can also click on
    wires and terminal locations in the schematic, and the clicked-on
    net will become selected.  The corresponding conductor group will
    be displayed highlighted in layout windows.

    <p>
    With <b>Use Extract</b> not checked, the <b>Path Selection
    Control</b> panel will not appear, but clicking in schematic
    windows will have similar effect.  The system will once again use
    extraction data if available to map button presses in layout
    windows to a conductor group and back to the corresponding
    electrical net to be highlighted.  However, there is no
    highlighting of the physical conductor group.

    <p>
    In either case, the clicked-on node will be shown selected in the
    node listing window, and scrolled into view if necessary.  The
    terminal listing window will show the selected net details as
    usual.  <b>Click-Select Mode</b> is exited if another command is
    started, or <b>Esc</b> is pressed, or the <b>Click-Select Mode</b>
    button is pressed again, or, with <b>Use Extract</b> checked, the
    <b>Path Selection Control</b> panel is retired by any means.

    <p>
    The <b>Deselect</b> button will deselect selections in the node
    listing window, and the corresponding highlighting in the drawing
    windows.  The terminal listing window becomes empty.

    <p>
    It is also possible to search for nets and terminals by name using
    the controls just above the two listing windows.  The two "radio"
    buttons select whether to search for node or terminal names.  One
    enters a "regular expression" into the text area.  The button to
    the left of the text entry initiates the search.  A matching net
    is selected as is the matching terminal if searching for
    terminals.  One can press the button again to move to the next and
    subsequent matches.  If there is no initial selection, perhaps
    because <b>Deselect</b> was pressed, the search area starts at the
    top and extends toward the end of the listing.  If a net is
    selected, the search starts with the next item (terminal or net)
    after the selection end extends toward the end.

    <p>
    The regular expression conforms to POSIX.1-2001 as an extended,
    case-ignored regular expression.  On a Linux system, "<tt>man
    grep</tt>" provides a good overview of regular expression syntax
    and capability.  However, one probably doesn't need to know much
    more than
    <ol>
    <li>A given string will match any name containing the string, case
    insensitive.
    <li>The carat ('<tt>^</tt>') character matches the beginning of a
    name.
    <li>The dollar sign ('<tt>$</tt>') character matches the end of a
    name.
    </ol>

    <p>
    If the third column in the node listing window is not
    '<tt>G</tt>', then an overriding name for the selected node can be
    assigned with the <b>Map Name</b> button, but only while in
    electrical mode.  To apply a name, select a node in the node
    listing area, then press the <b>Map Name</b> button.  A new name
    will be prompted for in a pop-up window.  The name can be any text
    token (white space is not allowed), however it is up to the user
    to ensure that the name makes sense in the context of the output. 
    For example, for SPICE output, the node names must adhere to the
    rules for valid node names in SPICE.  After pressing <b>Apply</b>,
    The second column in the listing will be updated to show the new
    name, and the third column will show "<tt>Y</tt>".  Again, this
    can only be done while in electrical mode, in physical mode the
    button remains grayed.

    <p>
    The node naming can actually modify circuit topology, which can be
    a powerful feature or a curse.  If two nets share a name, they
    will be merged, and the left window will reflect this.  Thus, it
    is easy to make connections using node name mapping that are not
    obvious when looking at the schematic.  For this reason, if the
    user is about to apply a duplicate name, a confirmation pop-up
    will appear.  The user is given the choice to back out of the
    operation, or continue.

    <p>
    The node name assignment works by association with a connection
    point in the net, equivalent to a hypertext reference.  This
    association persists if the object is moved, and is transferred to
    another device or wire if the object is deleted, if possible.  In
    some cases it may get lost, however, so an assigned name may have
    to be reentered after the circuit is edited.

    <p>
    In electrical mode, an assigned name can be deleted by first
    selecting the node in the node listing area, then pressing the
    <b>Unmap</b> button.  The <b>Unmap</b> button is un-grayed only if
    the third column of the selected node shows "<tt>Y</tt>"
    indicating that it has an assigned name.  On pressing the button,
    the name will revert to the default name.  This may effectively
    change circuit topology by undoing the net merging brought about
    through net name assignments.  Again, this operation is available
    only in electrical mode.

    <p>
    The internal data structure representing node name mapping, and
    the listings, will be in one of two states.  Either devices and
    subcircuits with the <a href="xic:lvs#nophys"><b>nophys</b></a>
    property will be included as normal devices and subcircuits, or
    these will be ignored.  In the latter case, if the <b>nophys</b>
    property has the "shorted" option, the terminals will be
    effectively shorted together, which will obviously change the node
    numbering.

    <p>
    The current state is as set by the last function to generate the
    connectivity map.  Functions in the extraction system will always
    recognize the <b>nophys</b> properties, and build the map
    excluding these devices but taking the "shorted" <b>nophys</b>
    devices as shorted.  Then, the schematic will correspond to the
    actual physical layout.  Functions in the side menu which generate
    a SPICE listing will ignore <b>nophys</b> properties and include
    all such devices in the net list.  This produces a schematic
    appropriate for SPICE simulation.

    <p>
    The <b>Use nophys</b> button is used to switch between these two
    representations, and the state of the button will be reset if
    another function changes the state.

    <p>
    When the <b>Use nophys</b> button is pressed, devices and
    subcircuits with the <b>nophys</b> property set will be
    <i>included</i> in the listings, just as "normal" devices.  Their
    terminals will be listed in the terminals listing window.  The
    <b>nophys</b> property is ignored in this case, as will be true
    when a listing is being prepared for SPICE output from functions
    in the side menu.

    <p>
    When the <b>Use nophys</b> button is not pressed, devices and
    subcircuits with the <b>nophys</b> property will be ignored in the
    listings, and the node numbering will respect the "shorted"
    <b>nophys</b> properties.  Terminals from these devices and
    subcircuits will not be listed in the terminal listing window. 
    This mode is consistent with the usage by the extraction system.

!!SEEALSO
sidemenu

!! 100416
!!KEYWORD
xic:place placepanel
!!TITLE
Cell Placement Control
!!HTML 
    <img src="place.xpm">
    <img src="screenshots/place.png" align=right>
    <b>Keyword</b>: <tt>place</tt>

    <p>
    The <b>place</b> button in the side menu brings up the
    <b>Cell Placement Control</b> panel which allows instances of
    cells (subcells) to be added to the current editing cell.

    <p>
    When the <b>Place</b> button in the panel or the <b>place</b>
    button in the side menu is active (the two buttons show the same
    status), and the user is not being prompted for a cell name (the
    "master") to place, the current master can be instantiated at
    locations where the user clicks ("place mode").  The bounding box
    of the cell is ghost-drawn and attached to the pointer.  The
    orientation and size of the instance are set by the <a
    href="xic:xform">current transform</a>.  If the <b>Cell Placement
    Control</b> panel is dismissed the place mode, if active, is
    exited.  The place mode can be exited with the <b>Esc</b> key, or
    by pressing the <b>Place</b> button (either one) a second time. 
    The panel is not popped down when place mode is exited.

    <p>
    The substructure of cell instances being placed is highlighted to
    the depth shown in the main window.  This facilitates alignment
    with other objects.  One can change the display depth to reveal
    more or less of the substructure.

    <p>
    From the <a href="xic:open"><b>Open</b></a> command in the <a
    href="xic:filemenu"><b>File Menu</b></a>, if one holds down
    <b>Shift</b> while selecting one of cells from the history list,
    the <b>Cell Placement Control</b> panel will appear with that cell
    added as the current master.  This applies to cell names and not
    the "<b>new</b>" entry.  This is a quick backdoor for
    instantiating cells recently edited.

    <p>
    In electrical mode, when a connection point of a device or subcell
    is near another connection point, it will snap to that location
    and a small dotted box will be drawn around the point.  This
    facilitates placement of devices and subcircuits in the schematic. 
    While the <b>Shift</b> or <b>Ctrl</b> keys are held, this feature
    is disabled.

    <p>
    Cells can be placed individually, or as arrays in physical mode. 
    When the <b>Use Array</b> button is set, cells will be placed as
    arrays, governed by the currently set array parameters.  The array
    parameters can be entered into the four text fields below, only
    when the <b>Use Array</b> button is active.  Arrays are allowed in
    physical mode only.  If this button is not active, single cells
    are placed.

    <p>
    The array replication factors Nx and Ny can be set to any value in
    the range of 1 through 32767.  The upper limit is set by the GDSII
    file format, and is enforced bu <i>Xic</i> to avoid portability
    problems.

    <p>
    The spacing values Dx and Dy are edge to adjacent edge spacing,
    i.e., when zero the elements will abut.  If Dx or Dy is given the
    negative cell width or height, so that all elements appear at the
    same location, the corresponding Nx or Ny is taken as 1. 
    Otherwise, there is no restriction on Dx or Dy except that very
    large (unphysical) values can cause integer overflow internally.

    <p>
    The <a href="!array"><b>!array</b></a> command can be used to
    convert existing instances into arrays, and to modify the array
    parameters of existing arrays.

    <p>
    In physical mode, the reference point of the cell, which is the
    point in the cell located at the pointer, can be set to either the
    cell's origin, or to one of the cell's corners.  A drop-down menu
    in the <b>Cell Placement Control</b> panel indicates the present
    selection, and allows the user to make a new choice.  The
    nomenclature "Upper Left", etc., refers to the corner of the
    untransformed cell array bounding box.  When place mode is active,
    pressing the <b>Enter</b> key repeatedly will cycle the reference
    point around the corners and back to the origin.

    <p>
    In electrical mode, the cell reference point is always set to the
    location of the reference terminal, which is usually the first
    terminal defined.  If the cell has no terminals, the reference
    point can be cycled around the corners, as in physical mode,
    however for corners the reference point is snapped to the nearest
    grid location.  This should prevent device terminals from being
    located off-grid.  An electrical cell should always have terminals
    (assigned with the <a href="xic:subct"><b>subct</b></a> command in
    the electrical side menu) if it is to be part of the circuit, and
    not some kind of decoration or annotation. 

    <p>
    When the <b>Smash</b> button is active, is active, instances will
    be smashed into the parent where the user clicks, meaning that the
    cell content will be merged into the parent cell, rather than
    creating a new instance.  The flattening is one-level, so that any
    subcells of the cell being placed become subcells in the parent.

    <p>
    When the <b>Replace</b> button is active, existing cells are
    replaced with the new master when clicked on, and no cells are
    placed if the user clicks in the area outside of any subcells. 
    When a cell is replaced, the placement of the new cell is
    determined in physical mode by the setting of the reference
    selection drop-down menu.  For example, if this setting is "Upper
    Right", the new cell untransformed upper-right corner will be
    placed at the existing cell untransformed upper right corner.

    <p>
    In electrical mode, the reference terminal (the first connection
    point) is always placed at the same location as the reference
    terminal of the replaced cell.  In either case, any currently
    active transformations are performed in addition to the
    transformations of the replaced cell on the new cell.

    <p>
    Cells can be placed or replaced only when place mode is active,
    i.e., when the <b>Place</b> button in the <b>Cell Placement
    Control</b> pop-up or the <b>place</b> button in the side menu is
    active.

    <p>
    If the <b>Use Array</b> button is active when cells are being
    replaced, the replaced cell will take the array parameters from
    the <b>Cell Placement Control</b> panel.  Otherwise, the array
    parameters are unchanged during replacement.  Note that it is
    possible to replace an instance with another instance of the same
    cell, but with different array parameters.  This is one way that
    array parameters can be "edited".

    <p>
    The <b>Dismiss</b> button will retire the <b>Cell Placement
    Control</b> panel, and exit place mode.

    <p>
    The cell currently being placed, the "master", can be selected in
    several ways.  A list of masters is kept, and can be viewed with
    the menu button in the <b>Cell Placement Control</b> panel. 
    Pressing and holding button 1 with the pointer on the menu button
    issues a drop-down menu, whose entries are highlighted as the
    pointer passes over them.  A selection is made by releasing button
    1 over one of the selections.  Pressing the <b>New</b> button in
    this menu brings up a dialog box which allows the user to enter a
    new master name.

    <p>
    The pop-up list of cells will grow with each addition until a
    limit is reached, at which point new entries will replace the
    oldest one.  The <b>New</b> item is always at the top of the list. 
    The list consists of the most recent
    masters specified, either with the <b>New</b> button, or through
    the <b>Place</b> button in the <a href="xic:cells"><b>Cells
    Listing</b></a> or <a href="xic:files"><b>Files Listing</b></a>
    panels.

    <p>
    The maximum number of masters saved in the menu can be
    specified in the <b>Maximum menu length</b> entry area just
    below the menu.  The
    default is 25, which may not be suitable for some screen
    resolutions or window systems.  It is not very useful if the
    pull-down menu extends off-screen.  This entry tracks the value of
    the <a href="MasterMenuLength"><b>MasterMenuLength</b></a>
    variable.  The variable can be set as an integer or cleared to
    change the value, which is equivalent to changing the integer
    entry in this panel.

    <p>
    When a new entry is selected, a dialog pop-up appears for the new
    cell name.  If a selection can be found in the various panels that
    provide file or cell selection, that selection is pre-loaded into
    the dialog as a default.  Each of these sources is tested in
    order, and the first one that is visible and has a selection will
    yield the default cell name.

    <ul>
    <li>A selection in the <a href="filesel"><b>File Selection</b></a>
     pop-up from the <a href="xic:fsel"><b>File Select</b></a> button
     in the <a href="xic:filemenu"><b>File Menu</b></a>.
    <li>A selection in the <b>Cells Listing</b> pop-up from the <a
     href="xic:cells"><b>Cells List</b></a> button in the <b>Cell
     Menu</b>.
    <li>A selection in the <b>Files Listing</b> pop-up from the <a
     href="xic:files"><b>Files List</b></a> button in the <b>File
     Menu</b>, or its <b>Content List</b>.
    <li>A selection in the <b>Content List</b> of the <b>Libraries</b>
     pop-up from the <a href="xic:libs"><b>Libraries List</b></a>
     button in the <b>File Menu</b>.
    <li>A selection in the <b>Cell Hierarchy</b> pop-up from the <a
     href="xic:tree"><b>Show Tree</b></a> button in the <b>Cell
     Menu</b> or from the <b>Tree</b> button in the <b>Cells
     Listing</b> pop-up.
    <li>A cell name that is selected in the <b>Info</b> pop-up, from
     the <a href="xic:info"><b>Info</b></a> button in either the <a
     href="xic:viewmenu">View Menu</a> or the <b>Cells Listing</b>
     pop-up.
    <li>The name of a selected subcell in the drawing window, the most
     recently selected if there is more than one.
    </ul>

    <p>
    The first time the <b>Cell Placement Control</b> panel comes up,
    the user is prompted for the name of a cell, just as if the
    <b>New</b> menu button was pressed.

    <p>
    The name provided can be a file containing data in one of the
    supported <a href="xic:fsaf">archive formats</a>, the name of an
    <i>Xic</i> cell, or a <a href="libraries">library file</a>.  If
    the name of an archive file is given, the name of the cell to open
    can follow the file name separated by space.  If no cell name is
    given, the top level cell (the one not used as a subcell by any
    other cells in the file) is the one opened for placement.  If
    there is more than one top level cell, the user is presented with
    a pop-up choice menu and asked to make a selection.  If the file
    is a library file, the second argument can be given, and it should
    be one of the reference names from the library, or the name of a
    cell defined in the library.  If no second name is given, a pop-up
    listing the library contents will appear, allowing the user to
    select a reference or cell.

    <p>
    The given given string can also consist of the name of a <a
    href="xic:hier">Cell Hierarchy Digest</a> (CHD) in memory,
    optionally followed by the name of a cell known within the CHD
    hierarchy.  If no cell name is provided, the cell name <a
    href="xic:chdconfig">configured</a> into the CHD is understood. 
    The string can also contain the name of a saved CHD file, with an
    optional following cell name.

    <p>
    The <b>Cell Placement Control</b> panel is sensitive as a <a
    href="dragdrop">drop receiver</a>.  If a file name is dragged over
    the panel and the mouse button released, the behavior is as if the
    <b>New</b> button in the masters menu was pressed, and the file
    name will be loaded into the dialog window.

!!SEEALSO
fileorg
xic:editmenu
xic:pcells


!! 022316
!!KEYWORD
xic:plot
!!TITLE
The plot Button: Generate SPICE Plot
!!HTML 
    <img src="plot.xpm">
    <b>Keyword</b>: <tt>plot</tt>

    <p>
    The <b>plot</b> button, available only in electrical mode, gathers
    input for plotting via <i>WRspice</i>.

    <p>
    The <a href="promptline">prompt area</a> displays the command
    string as it is being built.  Clicking on nodes or device "hidden"
    targets (usually indicated by a '+' symbol in the device schematic
    representation) will add <a href="hypertext">hypertext</a> entries
    to the command string, and will add a marker to the screen at the
    clicked-on location.  One can click anywhere on a wire, or on
    subcircuit and device connection points to select nodes.  Clicking
    on a marker will delete the marker, and the corresponding entry
    from the string.

    <p>
    Some devices have "hidden" nodes for accessing internal variables
    for plotting, such as current through a voltage source or the
    phase node of a Josephson junction.  By convention, these are
    indicated with a '+' mark in the symbol.  For many devices, this
    will access the current through the device.  The marker for a
    current has an orientation in the direction of positive current
    flow.  Ordinary node markers have no orientation, and access the
    node voltage.

    <p>
    One can click on reference points to any depth in the hierarchy,
    though selection requires that the cell be showing as a schematic,
    and as expanded.  To make selections inside a subcircuit that is
    shown as a symbol, one can use <a href="hyproxy">proxy
    windows</a>.  Holding down both the <b>Shift</b> and <b>Ctrl</b>
    keys, and clicking on a subcircuit instance, will bring up a <a
    href="xic:vport">sub-window</a> displaying the master of the
    clicked-on instance in schematic form.  One can click on objects
    in this window in the normal way, and plot points will be added to
    the prompt line.

    <p>
    Holding the <b>Shift</b> key while clicking on a device of
    subcircuit not over any node or "hidden" location will enter the
    hypertext device or subcircuit name.  These are not often needed
    in plot command strings, and the requirement of holding down
    <b>Shift</b> prevents unwanted returns.

    <p>
    Markers can be deleted by clicking on them, or by deleting the
    corresponding hypertext in the prompt line.  Multiple markers can
    reference the same node, as long as they are spatially distinct.

    <p>
    Existing marks can be dragged and dropped to a new location, which
    must also reference a node or reference point, as for the initial
    placement.  If dropped on an existing plot mark, the two marks
    will exchange locations, both as marks in the drawing window, and
    hypertext entries in the prompt line.

    <p>
    The prompt line text is equivalent to the string given to the
    <b>plot</b> command in <i>WRspice</i>.  The string can be <a
    href="promptline#editing">edited</a> in the usual way.  The user
    can add text to combine the hypertext references into expressions
    involving other syntax elements known to <i>WRspice</i>.  The
    registers available through the <b>S</b> and <b>R</b> buttons to
    the left of the prompt line can be used to save and restore plot
    command strings.

    <p>
    The <i>WRspice</i> parser can distinguish the expressions, however
    in some cases the user must intervene to force an expected result. 
    For example,

    <blockquote>
    <tt>v(1) -v(2)</tt>
    </blockquote>

    will be interpreted as <tt>(v(1)-v(2))</tt>, i.e., the difference. 
    To force a unary minus interpretation, one can enclose the second
    token in double quotes or parentheses, i.e. <tt>v(1) "-v(2)"</tt>
    will plot <tt>v(1)</tt> and negative <tt>v(2)</tt>.  Note that
    white space is not considered when interpreting the expression,
    and is required only to separate identifier names.

    <p>
    One should refer to the <i>WRspice</i> documentation for a
    complete description of the syntax accepted by the <b>plot</b>
    command.  The command line can also contain keyword assignments
    which override defaults used when composing the plot.  It is also
    possible to produce X-Y plots by using the "<tt>vs</tt>" keyword. 
    The expression following "<tt>vs</tt>" will be used as the X scale
    for the other expressions.

    <p>
    The color used to render a plot reference mark in the schematic
    will be the same color used for the plot trace of the result to
    which the corresponding hypertext contributes (however, if the
    user has changed the plotting colors in <i>WRspice</i> or
    <i>Xic</i>, this may not be true).  The number (or letter)
    enclosed by the plot mark represents a count of the hypertext
    entries found in the prompt line, left to right, starting with 1.

    <p>
    If <i>Xic</i> detects a syntax error, one or more plot marks may
    be rendered with "no" color (actually the highlighting color is
    used).  This is also true for the marks used in the X-scale of an
    X-Y plot.

    <p>
    The <b>Enter</b> key terminates entry, and creates the plot if
    <i>WRspice</i> is available, and the circuit has been simulated
    with the <a href="xic:run"><b>run</b></a> command.  In the <a
    href="xic:deck"><b>deck</b></a> command, the string will be added
    to the SPICE listing, when generated, as a <tt>.plot</tt> line.

    <p>
    While the <b>plot</b> command is active, it is possible to select
    text labels in the normal way, other selections are inhibited. 
    This allows labels to be selected and modified without having to
    explicitly terminate the <b>plot</b> command first.

    <p>
    The command text and mark locations are saved with the cell data
    when written to disk, thus the <b>plot</b> command string is
    persistent.

!!SEEALSO
sidemenu
xic:iplot

!! 092717
!!KEYWORD
xic:polyg shapes:poly
!!TITLE
The polyg Button: Create/Edit Polygons
!!HTML
    <table border=0>
    <tr><td valign=top><b>jump to</b></td> <td>
    <a href="xic:polyg#vedit"><b>Polygon Vertex Editing</b></a><br>
    <a href="xic:polyg#wire"><b>Wire to Polygon Conversion</b></a>
    </td></tr></table>

    <p>
    <img src="polyg.xpm">
    <b>Keyword</b>: <tt>polyg</tt>

    <p>
    The <b>polyg</b> button is used to create and modify polygons.  In
    electrical mode, this functionality is available from the
    <b>poly</b> menu selection brought up by the <a
    href="xic:shapes"><b>shapes</b></a> button.  A polygon is created
    by clicking the left mouse button on each vertex location in
    sequence.  The vertices can be undone and redone with the
    <b>Tab</b> key and <b>Shift-Tab</b> combination, which are
    equivalent to the <a href="xic:undo"><b>Undo</b></a> and <a
    href="xic:redo"><b>Redo</b></a> commands.  Vertex entry is
    terminated, and a new polygon potentially created, by clicking on
    the initial point (marked with a cross), or double-clicking the
    last point, or by pressing the <b>Enter</b> key.  At least three
    distinct vertices must have been defined, and the polygon must
    pass some "normality" tests, for successful object creation.

    <p>
    The <a href="PixelDelta"><b>PixelDelta</b></a> variable can be set
    to alter the value, in pixels, of the snap distance to the target
    when clicking to terminate.  By default, the snap distance is 3
    pixels, so clicking within this distance of the initial point will
    terminate entry rather than add a new vertex.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within two pixels.  When snapped, a
    small dotted highlight box is displayed.  This makes it much
    easier to create abutting objects when the grid snap spacing is
    very fine compared with the display scaling.  This is also applied
    to the first vertex of polygons being created, facilitating point
    list termination.  This feature can be controlled from the <b>Edge
    Snapping</b> group in the <b>Snapping</b> page of the <a
    href="xic:grid"><b>Grid Setup</b></a> panel.

    <p>
    When adding vertices during polygon creation, the angle of each
    segment can be constrained to a multiple of 45 degrees with the
    <b>Constrain angles to 45 degree multiples</b> check box in the <a
    href="xic:edset"><b>Editing Setup</b></a> panel from the <b>Edit
    Menu</b>, in conjunction with the <b>Shift</b> and <b>Ctrl</b>
    keys.  There are three modes:  call them "no45" for no constraint,
    "reg45" for constraint to multiples of 45 degrees with automatic
    generation of the segment from the end of the 45 section to the
    actual point, and "simp45" that does no automatic segment
    generation.  The "reg45" algorithm adds a 45 degree segment plus
    possibly an additional Manhattan segment to connect the given
    point.  The "simp45" adds only the 45 degree segment.  The mode
    employed at a given time is given by the table below.  The <a
    href="Constrain45"><b>Constrain45</b></a> boolean variable tracks
    the state (set or not set) of the check box.

    <blockquote>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><th colspan=3 align=center>Constrain45 not set</td></tr>
    <tr><td>&nbsp;</td><th>Shift up</th><th>Shift pressed</th></tr>
    <tr><th>Ctrl up</th><td>no45</td><td>reg45</td></tr>
    <tr><th>Ctrl pressed</th><td>simp45</td><td>simp45</td></tr>
    <tr><th colspan=3 align=center>Constrain45 set</th></tr>
    <tr><td>&nbsp;</td><th>Shift up</th><th>Shift pressed</th></tr>
    <tr><th>Ctrl up</th><td>reg45</td><td>no45</td><tr>
    <tr><th>Ctrl pressed</th><td>simp45</td><td>no45</td></tr>
    </table>
    </blockquote>

    <p>
    In physical mode, a new polygon is tested for reentrancy and other
    problems, and a warning message is issued if a pathology is
    detected.  The new polygon is <i>not</i> removed from the database
    if such an error is detected.  It is up to the user to make
    appropriate changes.

    <p>
    In electrical mode, if the current layer is the SCED layer, the
    polygon will be created using the ETC2 layer, otherwise the
    polygon will be created on the current layer.  It is best to avoid
    use of the SCED layer for other than active wires, for efficiency
    reasons, though it is not an error.  The <a
    href="xic:chlyr"><b>Change Layer</b></a> command in the <b>Modify
    Menu</b> can be used to change the layer of existing objects to
    the SCED layer, if necessary.  The outline style and fill will be
    those of the rendering layer.  Polygons have no electrical
    significance, but can be used for illustrative purposes.

    <a name="vedit"></a>
    <h2>Polygon Vertex Editing</h2>

    On entering the <b>polyg</b> command, if a polygon is selected, a
    vertex editing mode is active on all selected polygons.  Each
    vertex of the selected object is marked with a small highlighting
    box.  Clicking on the edge of a selected polygon away from an
    existing vertex will create a new vertex, which can subsequently
    be moved.

    <p>
    In order to operate on a vertex, it must be selected.  A vertex
    can be selected by clicking on it, or by dragging over it.  Any
    number of vertices can be selected.  After the selection operation,
    selected vertices are shown marked with a larger box, and
    unselected vertices are not marked.  Additional vertices can be
    selected, and existing selected vertices unselected, by holding
    the <b>Shift</b> key while clicking or dragging over vertex
    locations.  Selecting a vertex a second time will deselect it.

    <p>
    Selected vertices can be deleted by pressing the <b>Delete</b>
    key.  This will succeed only if after vertex removal the object
    does not become degenerate.  In particular, one can not delete the
    object in this manner.

    <p>
    The selected vertices can be moved by dragging or clicking twice. 
    The selected vertices will be translated according to the
    button-down location and the button up location, or the next
    button-down location if the pointer did not move.  While the
    translation is in progress, the new borders are ghost-drawn.

    <p>
    All vertex operations can be undone and redone through use of the
    <a href="xic:undo"><b>Undo</b></a> and <a href="xic:redo"><b>Redo</b></a>
    commands.

    <p>
    With vertices selected, pressing the <b>Esc</b> or
    <b>Backspace</b> keys will deselect the vertices and return to the
    state with all vertices marked.

    <p>
    While in the <b>polyg</b> command, with no object in the process
    of being created, it is possible to change the selected state of
    polygon objects, thus displaying the vertices and allowing vertex
    editing.  Pressing the <b>Enter</b> key will cause the next
    button 1 operation to select (or deselect) polygon objects.  This
    can be repeated arbitrarily.  When one of these objects is
    selected, the vertices are marked, and vertex editing is
    possible.

    <p>
    If the vertex editor is active, i.e., a selected polygon is shown
    with the vertices marked, clicking with the <b>Ctrl</b> button
    pressed will start a new polygon, overriding the vertex editor. 
    This can be used to start a new polygon at a marked vertex
    location, for example.  Without <b>Ctrl</b> pressed, the vertex
    editor would have precedence and would select the marked vertex
    instead of starting a new polygon.

    <p>
    While moving vertices, holding the <b>Shift</b> key will enable or
    disable constraining the translation angle to multiples of 45
    degrees.  If the <b>Constrain angles to 45 degree multiples</b>
    check box in the <a href="xic:edset"><b>Editing Setup</b></a>
    panel from the <b>Edit Menu</b> is checked, <b>Shift</b> will
    disable the constraint, otherwise the constraint will be enabled. 
    The <b>Shift</b> key must be up when the button-down occurs which
    starts the translation operation, and can be pressed before the
    operation is completed to alter the constraint.  These operations
    are similar to operations in the <a
    href="xic:strch"><b>Stretch</b></a> command.

    <a name="wire"></a>
    <h2>Wire to Polygon Conversion</h2>

    If any non-zero width <a href="xic:wire">wires</a> are selected
    before the <b>polyg</b> command is entered, the user is given the
    option of changing the database representation of these objects to
    polygons.  Is is not possible to convert polygons to wires (except
    via the <a href="xic:undo"><b>Undo</b></a> command if the polygon
    was originally a wire).

!!SEEALSO
sidemenu
command

!! 062908
!!KEYWORD
xic:put
!!TITLE
The put Button: Extract From Yank Buffer
!!HTML
    <img src="put.xpm">
    <b>Keyword</b>: <tt>put</tt>

    <p>
    The <b>put</b> command allows the contents of the yank buffers to
    be added to the current cell.  This command is available in
    physical mode.  When parts of objects are erased with the <a
    href="xic:erase"><b>erase</b></a> command, the erased pieces are
    added to a five-deep yank buffer queue.  When the <b>put</b>
    button becomes active, the most recent deletion is ghost drawn and
    attached to the pointer.  Clicking will place the contents of the
    buffer at the location of the pointer.  The yank buffers can be
    cycled through with the arrow keys.

!!SEEALSO
sidemenu

!! 100916
!!KEYWORD
xic:round
!!TITLE
The round Button: Create Disk Object
!!HTML
    <img src="round.xpm">
    <b>Keyword</b>: <tt>round</tt>

    <p>
    The <b>round</b> button, only available in physical mode, will
    create a disk polygon object.  The number of sides can be altered
    with the <a href="xic:sides"><b>sides</b></a> command.  If the
    user presses and holds the <b>Shift</b> key after the center
    location is defined, and before the perimeter is defined by either
    lifting button 1 or pressing a second time, the current radius is
    held for x or y.  The location of the <b>Shift</b> press defines
    whether x is held (pointer closer to the center y) or y is held
    (pointer closer to the center x).  This allows elliptical objects
    to be generated.

    <p>
    The <b>Ctrl</b> key also provides useful constraints.  Pressing
    and holding the <b>Ctrl</b> key when defining the radius produces
    a radius defined by the pointer position projected on to the x or
    y axis (whichever is closer) defined from the center.  Otherwise,
    off-axis snap points are allowed, which may lead to an unexpected
    radius on a fine grid.

    <p>
    When the command is expecting a mouse button press to define a
    radius, the value as defined by the mouse pointer (in microns) is
    printed in the lower left corner of the drawing window, or the X
    and Y values are printed if different.  Pressing <b>Enter</b> will
    cause prompting for the value(s), in microns.  If one number is
    given, a circular radius is accepted, however one can enter two
    numbers separated by space to set the X and Y radii separately.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within two pixels.  When snapped, a
    small dotted highlight box is displayed.  This makes it much
    easier to create abutting objects when the grid snap spacing is
    very fine compared with the display scaling.  This feature can be
    controlled from the <b>Edge Snapping</b> group in the
    <b>Snapping</b> page of the <a href="xic:grid"><b>Grid
    Setup</b></a> panel.

    <p>
    If the <a href="SpotSize"><b>SpotSize</b></a> variable is set to a
    positive value, or the <a href="MfgGrid"><tt>MfgGrid</tt></a> has
    been given a positive value in the technology file, tiny round and
    donut figures are constructed somewhat differently.  Objects
    created with the <a href="xic:round"><b>round</b></a> and <a
    href="xic:donut"><b>donut</b></a> buttons, and corresponding
    script functions, will be constructed so that all vertices are
    placed at the center of a spot, and a minimum number of vertices
    will be used.  The <a href="xic:sides"><b>sides</b></a> number is
    ignored.  This applies only to figures with minimum radius 50
    spots or smaller; the regular algorithm is used otherwise.  An
    object with this preconditioning applied should translate exactly
    to the e-beam grid.

!!SEEALSO
sidemenu

!! 042411
!!KEYWORD
xic:run
!!TITLE
The run Button: Run SPICE Analysis
!!HTML
    <img src="run.xpm">
    <b>Keyword</b>: <tt>run</tt>

    <p>
    The <b>run</b> button, available only in electrical mode, will
    establish interprocess communication with the <i>WRspice</i>
    program.  If a link can not be established, the <b>run</b> command
    terminates with a message.  If connection is established, then a
    SPICE run of the circuit is performed.

    <p>
    The user is first prompted for the <i>WRspice</i> analysis command
    string to run.  This should be in a format understandable to
    <i>WRspice</i> as an interactive-mode command.  During prompting,
    the last six unique analysis commands entered are available and
    can be cycled through with the up and down arrow keys.

    <p>
    The first word in the analysis string is checked, and only words
    from the following list will be accepted:

    <blockquote>
    <table border=0 cellpadding=4>
    <tr><td><tt>ac</tt></td>     <td><tt>loop</tt></td>
      <td><tt>run</tt></td>    <td><tt>tran</tt></td></tr>
    <tr><td><tt>check</tt></td>  <td><tt>noise</tt></td>
     <td><tt>send</tt></td>   <td>&nbsp;</td></tr>
    <tr><td><tt>dc</tt></td>     <td><tt>op</tt></td>
        <td><tt>sens</tt></td>   <td>&nbsp;</td></tr>
    <tr><td><tt>disto</tt></td>  <td><tt>pz</tt></td>
        <td><tt>tf</tt></td>   <td>&nbsp;</td></tr>
    </table>
    </blockquote>

    <p>
    The "<tt>send</tt>" keyword is not a <i>WRspice</i> command.  If
    given, the circuit will be sent to <i>WRspice</i> and sourced, but
    no analysis is run.  Other commands can be sent to <i>WRspice</i>
    with the <a href="xic:spcmd"><b>spcmd</b></a> button.

    <p>
    The link is established to the SPICE server (<tt>wrspiced</tt>
    daemon) named in the SPICE_HOST <a href="xic:env">environment
    variable</a>, or the <a href="SpiceHost"><b>SpiceHost</b></a> <a
    href="!set"><b>!set</b></a> variable (which overrides the
    environment).  If neither is set, <i>Xic</i> will attempt to
    attach to <i>WRspice</i> on the local machine.

    <p>
    By default, the <i>WRspice</i> toolbar is visible when a
    connection has been established.  This gives the user more control
    over <i>WRspice</i> by providing access to the visual tools.  If
    the <a href="NoSpiceTools"><b>NoSpiceTools</b></a> variable is set
    (with the <b>!set</b> command), the toolbar will not be visible.

    <p>
    During a simulation run, a small pop-up window appears, which
    contains a status message, and a <b>Pause</b> button.  Pressing
    <b>Pause</b> will pause the analysis.  It can be resumed by
    pressing the <b>run</b> button again.  The analysis can also be
    paused by pressing <b>Ctrl-c</b> in the controlling terminal
    (xterm) window.  A <b>Ctrl-c</b> press over a drawing window goes
    to <i>Xic</i>, where it stops redraws and other functions as
    usual.

    <p>
    <i>Xic</i> is notified when a run is paused from <i>WRspice</i>
    (using the red X button in the toolbar), and will change state
    accordingly.  However, <i>Xic</i> is <i>not</i> notified when a
    run is restarted from <i>WRspice</i> (with the green triangle
    button in the toolbar), and will continue to assume that
    <i>WRspice</i> is inactive.  In this case, commands from
    <i>Xic</i> that communicate with <i>WRspice</i> will pause any
    analysis in progress before executing.  The user will have to
    resume the analysis manually after the operation completes, either
    with the <b>run</b> button or from the <i>WRspice</i> toolbar.

    <p>
    This affects the <a href="xic:plot"><b>plot</b></a>, <a
    href="xic:iplot"><b>iplot</b></a>, and <b>run</b> buttons, and the
    <a href="!spcmd"><b>!spcmd</b></a> command.  When a run is started
    or resumed with the <b>run</b> button in <i>Xic</i>, these
    features are locked out, producing a "WRspice busy" message, and
    the run in progress is not affected.

    <p>
    The node connectivity is recomputed, if necessary, before the run. 
    If the variable <a href="CheckSolitary"><b>CheckSolitary</b></a>
    is set with the <b>!set</b> command, then warnings are issued if
    nodes with only one connection are encountered.  A SPICE file is
    generated internally, and transmitted to <i>WRspice</i> for
    evaluation.  Only devices and subcircuits that are "connected"
    will be included in the SPICE file.  A device or subcircuit is
    connected if one of the following is true:

    <ul>
    <li>There are two or more non-ground connections.
    <li>There is one non-ground connection and one or more grounds.
    <li>There is one non-ground connection and no opens.
    <li>There is one non-ground connection and the object is a subcircuit.
    </ul>

    <p>
    As a final step before sending the circuit text to SPICE,
    <i>Xic</i> will recursively expand all <a
    href=".include"><tt>.include</tt></a> and <a
    href=".lib"><tt>.lib</tt></a> lines, replacing the
    <tt>.include</tt> lines with the actual file text, and the
    <tt>.lib</tt> lines with the indicated text block from the
    library.  This is to handle the case where <i>WRspice</i> is
    located on a remote machine, and the user's files are on the local
    machine.  As in <i>WRspice</i>, <tt>.inc</tt> is a synonym for
    <tt>.include</tt>, and the '<tt>h</tt>' option (strip '$' comments
    for HSPICE compatibility) is recognized.

    <p>
    The <tt>.include</tt> and <tt>.lib</tt> lines are generally
    inserted into the SPICE text using the <a
    href="spicetext"><tt>spicetext</tt></a> label mechanism.  There
    may be occasions where the expansion of these lines by <i>Xic</i>
    is undesirable, such as when the included file resides on the
    SPICE host, or one wishes to use the <i>WRspice</i>
    <tt>sourcepath</tt> variable to resolve the file.  To this end,
    the user can use the <tt>.spinclude</tt> keyword rather than
    <tt>.include</tt>, and <tt>.splib</tt> rather than <tt>.lib</tt>. 
    The <tt>.sp</tt> directives use the same syntax as the normal
    keyword, however <i>Xic</i> will not attempt to expand these
    directives, rather it changes the keyword to the normal directive
    ("<tt>.include</tt>" or "<tt>.lib</tt>").  Thus, <i>WRspice</i>
    will see and handle these inclusions.

    <p>
    <i>WRspice</i> release 2.2.60 and later recognize
    <tt>.spinclude</tt> as a synonym for <tt>.include</tt>.  This
    allows <i>WRspice</i> to be able to directly source top-level cell
    files, where the SPICE listing may contain <tt>.spinclude</tt>
    lines, without syntax errors.  <i>WRspice</i> release 2.2.62-2 and
    later recognize <tt>.splib</tt> as a synonym for <tt>.lib</tt>,
    and is able to handle <tt>.lib</tt> constructs sent from
    <i>Xic</i>.

    <p>
    Sometimes it may be desirable to place the output of a SPICE run
    initiated from <i>Xic</i> into a rawfile, rather than saving the
    output internally.  To do this, use the <a
    href="spicetext"><tt>spicetext</tt></a> labels to add an analysis
    string, such as "<tt>spicetext .tran 1p 1000p</tt>" (note that the
    "." ahead of "tran" is necessary).  One can also add a save
    command using "<tt>spicetext *#save v(1) ...  </tt>" to save only
    a subset of the circuit variables.  The "<tt>*#</tt>" means that
    the save is executed as a shell command, <tt>.save</tt> is ignored
    since <i>WRspice</i> is in interactive mode.  Then, for the
    analysis string from <i>Xic</i>, use "<tt>run</tt>
    <i>filename</i>", where <i>filename</i> is
    the name for the rawfile.  The run will be performed, but the
    output data will go to the file, so don't expect to see it with
    the <b>plot</b> command.  If the <i>filename</i> is omitted, the
    run will be performed with internal storage as usual.

    <p>
    The <a href="!spcmd"><b>!spcmd</b></a> command can be used to give
    arbitrary commands to <i>WRspice</i>.

!!SEEALSO
sidemenu
xic:iplot
 
!! 111908
!!KEYWORD
xic:shapes shapes:dot shapes:tri shapes:ttri shapes:and shapes:or
!!TITLE
The shapes Button: Add Predefined Features, Shapes Menu
!!HTML
    <img src="shapes.xpm">

    <p>
    The <b>shapes</b> button appears in the electrical mode side menu. 
    Pressing this button provides a pull-down menu of different
    outlines that can be applied to drawings.  These outlines have no
    electrical significance, but can be used for illustrative
    purposes.  In particular, in <a href="xic:symbl">symbolic
    mode</a>, this facilitates creating symbol representations.  After
    a selection is made from the pull-down menu, the shape outline is
    ghost-drawn and attached to the pointer.  The object is placed at
    locations where the user clicks.

    <p>
    The current choices in the pull-down menu are:

    <blockquote>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><td><b>box</b></td>
        <td>Create a box, like the physical mode
        <a href="shapes:box"><b>box</b></a> command.</td></tr>
    <tr><td><b>poly</b></td>
        <td>Create a polygon, like the physical mode
        <a href="shapes:poly"><b>polyg</b></a> command.</td></tr>
    <tr><td><b>arc</b></td>
        <td>Create an arc, similar to the physical mode
        <a href="shapes:arc"><b>arc</b></a> command.</td></tr>
    <tr><td><b>dot</b></td>
        <td>Place a dot (an octagonal polygon).
    <tr><td><b>tri</b></td>
        <td>Place a triangle (buffer symbol).
    <tr><td><b>ttri</b></td>
        <td>Place a truncated triangle symbol.
    <tr><td><b>and</b></td>
        <td>Place an AND gate symbol.
    <tr><td><b>or</b></td>
        <td>Place an OR gate symbol.
    <tr><td><b>Sides</b></td>
        <td>Set the number of sides used to approximate rounded
        geometry, similar to the <a href="xic:sides"><b>sides</b></a>
        command in physical mode.
    </table>
    </blockquote>

    <p>
    None of these shapes have significance electrically, and for
    efficiency is is best to avoid using the SCED layer for these
    objects.  In particular, arcs are actually wires, and arc vertices
    on the SCED layer are considered in the connectivity
    establishment.  If the current layer is SCED when one of these
    objects is created, the object is instead created on the ETC2
    layer.  If the object must be on the SCED layer, the <a
    href="xic:chlyr"><b>Change Layer</b></a> command in the <a
    href="xic:modifymenu"><b>Modify Menu</b></a> can be used to move
    it to that layer.

    <p>
    The <b>dot</b>, <b>tri</b>, <b>ttri</b>, <b>and</b>, and <b>or</b>
    choices work a little differently from the others.  After
    selection, a ghost rendering of the shape is attached to the
    pointer, and the objects are placed where the user clicks.  The
    object can be modified with the arrow keys:

    <blockquote>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><td><tt>Up</tt></td><td>           expand by 2</tr></td>
    <tr><td><tt>Right</tt></td><td>        expand by 10%</tr></td>
    <tr><td><tt>Down</tt></td><td>         shrink by 2</tr></td>
    <tr><td><tt>Left</tt></td><td>         shrink by 10%</tr></td>
    <tr><td><tt>Shift-Up</tt></td><td>     stretch vertically 10%</tr></td>
    <tr><td><tt>Shift-Right</tt></td><td>  stretch horizontally 10%</tr></td>
    <tr><td><tt>Shift-Down</tt></td><td>   shrink vertically 10%</tr></td>
    <tr><td><tt>Shift-Left</tt></td><td>   shrink horizontally 10%</tr></td>
    <tr><td><tt>Ctrl-Arrows</tt></td><td>  cycle trough 90 degree
     rotations</tr></td>
    </table>
    </blockquote>

!! 021615
!!KEYWORD
xic:sides shapes:sides
!!TITLE
The sides Button: Set Rounded Granularity
!!HTML
    <img src="sides.xpm">
    <b>Keyword</b>: <tt>sides</tt>

    <p>
    The <b>sides</b> button, available in physical mode, allows the
    user to set the number of sides used to approximate rounded
    geometries.  Larger numbers give better resolution, but decrease
    efficiency.  The number provided is the sides for a full 360
    degrees, arcs will use proportionally fewer.

    <p>
    The setting tracks the <a
    href="RoundFlashSides"><b>RoundFlashSides</b></a> variable.  If
    the variable is not set, 32 sides will be used.  The acceptable
    range is 8-256.

    <p>
    The setting applies when new round objects are created with the <a
    href="xic:round"><b>round</b></a>, <a
    href="xic:donut"><b>donut</b></a>, and <a
    href="xic:arc"><b>arc</b></a> buttons in the physical side menu,
    or the equivalent script functions.

    <p>
    In electrical mode, the number of sides used has a separate
    setting using the <a
    href="ElecRoundFlashSides"><b>ElecRoundFlashSides</b></a>
    variable, which can be set from the <b>sides</b> entry in the
    menu presented by the <a href="xic:shapes"><b>shapes</b></a>
    button in the electrical side menu.

!!SEEALSO
sidemenu

!! 110213
!!KEYWORD
xic:spcmd
!!TITLE
The spcmd Button: Execute <i>WRspice</i> Command
!!HTML
    <img src="spcmd.xpm">
    <b>Keyword</b>: <tt>spcmd</tt>

    <p>
    This will prompt the user, in the prompt area, for a command that
    will be sent to <i>WRspice</i> for execution.  If the user simply
    presses <b>Enter</b> without entering a command, or enters the
    command "<tt>setup</tt>", the <a href="xic:spif"><b>WRspice
    Interface Control Panel</b></a> will appear, from which the
    interface to <i>WRspice</i> can be set up.

    <p>
    Otherwise, a stream to <i>WRspice</i> will be established, if one
    is not already active, providing a means for running arbitrary
    <i>WRspice</i> commands.  However, commands that cause
    <i>WRspice</i> to prompt the user for additional input (such as
    <tt>setplot</tt>) will not work properly, as the communication is
    one-way only and not interactive.  Text output goes to the console
    window.

    <p>
    In addition to the <i>WRspice</i> commands, the client-side directive
    <blockquote>
    <tt>send</tt> <i>filename</i>
    </blockquote>
    is available.  The <i>filename</i> is that of a local SPICE input
    file.  The file will have <tt>.include</tt> and <tt>.lib</tt> lines
    expanded locally, and <tt>.spinclude</tt>, <tt>.splib</tt> lines
    will be converted to "<tt>.include</tt>", "<tt>.lib</tt>", as is
    done for decks created within <i>Xic</i>.  The result will be sent
    to <i>WRspice</i> and sourced.

    <p>
    This operation is basically identical to the <a
    href="!spcmd"><b>!spcmd</b></a> command.

!! 110213
!!KEYWORD
xic:spif
!!TITLE
WRspice Interface Control Panel
!!HTML
    This panel appears when the user presses the <a
    href="xic:spcmd"><b>spcmd</b></a> button in the electrical side
    menu, and either gives no command at the prompt, or enters
    "<tt>setup</tt>".  It provides entry areas for setting the
    variables which control the interprocess communication channel to
    the <i>WRspice</i> circuit simulator, and other simulation
    settings.  Most users will probably never need to use this panel
    or set the associated variables as the defaults suffice in most
    installations.

    <p>
    The <b>WRspice Interface Control Panel</b> contains the following
    entry objects.

    <dl>
    <dt><b>List all devices and subcircuits</b><dd>
    This check box corresponds to the <a
    href="SpiceListAll"><b>SpiceListAll</b></a> variable.  When
    checked, all devices and subcircuits in the schematic will be
    included in SPICE output.  Otherwise, only devices and subcircuits
    that are "connected" will be included, as explained in the <a
    href="xic:deck"><b>deck</b></a> and <a
    href="xic:run"><b>run</b></a> command descriptions.
    </dl>

    <dl>
    <dt><b>Check and report solitary connections</b><dd>
    This check box corresponds to the <a
    href="CheckSolitary"><b>CheckSolitary</b></a> variable.  If
    checked, warning messages will be issued when electrical netlists
    are generated for nodes having only one connection.  This affects
    the <a href="xic:run"><b>run</b></a> and <a
    href="xic:deck"><b>deck</b></a> commands, and the <a
    href="xic:enet"><b>Dump Elec Netlist</b></a> command in the <a
    href="xic:extmenu"><b>Extract Menu</b></a>.
    </dl>

    <dt><b>Don't show WRspice Tool Control panel</b><dd>
    This check box corresponds to the <a
    href="NoSpiceTools"><b>NoSpiceTools</b></a> variable.
    When running <i>WRspice</i> from <i>Xic</i>, by default the
    <i>WRspice</i> toolbar is shown, if <i>WRspice</i> is running on
    the local machine.  This gives the user much greater flexibility
    and control over <i>WRspice</i>.  If this check box is checked,
    <i>before</i> the connection to <i>WRspice</i> is established, the
    toolbar will not be visible.

    <p>
    This check box will also control toolbar visibility if the
    <tt>wrspiced</tt> daemon is used.  However, this requires
    <tt>wrspiced</tt> distributed with wrspice-3.0.7 or later.  <b>If
    this variable is set with an earlier <tt>wrspiced</tt> release,
    the <i>WRspice</i> connection will not work!</b>
    </dl>

    <dl>
    <dt><b>Spice device prefix aliases</b><dd>
    This group consists of a check box and a text entry area.  When
    the box is checked, the text in the entry area will be used to set
    the <a href="SpiceAlias"><b>SpiceAlias</b></a> variable.  This can
    be set to a string which will modify the printing of device names
    in SPICE output.  The aliasing operates on the first token of
    device lines.  The format of the string is

    <blockquote>
      <i>prefix1</i>=<i>newprefix1</i> <i>prefix2</i>=<i>newprefix2</i> ...
    </blockquote>

    This will cause lines beginning with <i>prefix</i> to have
    <i>prefix</i> replaced with <i>newprefix</i>.  If the
    "=<i>newprefix</i>" is omitted, that line will not be printed. 
    For example, to map all devices that begin with 'B' to 'J', and to
    suppress all 'G' devices, the string is

    <blockquote>
       <tt>B=J G</tt>
    </blockquote>

    Note that there can be no space around the '='.  With the text
    entered and the box checked, the indicated mappings will be
    performed as SPICE text is produced. 
    </dl>

    <dl>
    <dt><b>Remote WRspice server host name</b><dd>
    This group consists of a check box and a text entry area.  When the box
    is checked, the <a href="SpiceHost"><b>SpiceHost</b></a> variable is
    set to the text in the text area.

    <p>
    The text should be the name of the host which maintains a server for
    remote <i>WRspice</i> runs.  If set, this will override the value
    of the <a href="SPICE_HOST"><b>SPICE_HOST</b></a> environment
    variable.  The host name specified in the <b>SPICE_HOST</b>
    environment variable and the <b>SpiceHost</b> <b>!set</b> variable
    can have a suffix "<tt>:</tt><i>portnum</i>", i.e., a colon
    followed by a port number.  The port number is the port used by
    the <tt>wrspiced</tt> program on the specified server, which
    defaults to 6114, the IANA registered port for this service.  If
    the server uses a non-standard port, and the <tt>wrspice/tcp</tt>
    service has not been registered (usually in the
    <tt>/etc/services</tt> file) on this port, the port number must be
    provided.
    </dl>

    <dl>
    <dt><b>Remote WRspice server host display name</b><dd>
    This group consists of a check box and a text entry area.  When
    the box is checked, the <a
    href="SpiceHostDisplay"><b>SpiceHostDisplay</b></a> variable is
    set to the text in the text area.

    <p>
    This text can be set to the X display string to use on a remote
    host for running <i>WRspice</i> through a <tt>wrspiced</tt>
    daemon, from <i>Xic</i> in electrical mode.  This is intended to
    facilitate use of <tt>ssh</tt> X forwarding to take care of
    setting up permission for the remote host to draw on the local
    display.  See the description of the <b>SpiceHostDisplay</b>
    variable for complete details.
    </dl>

    <dl>
    <dt><b>Path to local WRspice executable</b><dd>
    This group consists of a check box and a text entry area.  When
    the box is checked, the <a href="SpiceProg"><b>SpiceProg</b></a>
    variable is set to the text in the text area.

    <p>
    The text is the full path name of the <i>WRspice</i> executable. 
    This is useful if there are multiple versions of <i>WRspice</i>
    available, or the binary has been renamed, or is not located in
    the standard location.  If given, the value supersedes the values
    from environment variables or other variables (and corresponding
    entries) which also set a path to the SPICE executable.
    </dl>

    <dl>
    <dt><b>Path to local directory containing WRspice executable</b><dd>
    This group consists of a check box and a text entry area.  When
    the box is checked, the <a href="SpiceExecDir"><b>SpiceExecDir</b></a>
    variable is set to the text in the text area.

    <p>
    The text is a path to the directory to search for the
    <i>WRspice</i> executable.  If given, the value overrides the <a
    href="SPICE_EXEC_DIR"><b>SPICE_EXEC_DIR</b></a> environment
    variable.  The default search location is
    "<tt>/usr/local/xictools/bin</tt>", or, if the <a
    href="XT_PREFIX"><b>XT_PREFIX</b></a> environment variable has
    been set, its value will replace "<tt>/usr/local</tt>".
    </dl>

    <dl>
    <dt><b>Assumed WRspice program executable name</b><dd>
    This group consists of a check box and a text entry area.  When
    the box is checked, the <a href="SpiceExecName"><b>SpiceExecName</b></a>
    variable is set to the text in the text area.

    <p>
    The text will give the expected name of the <i>WRspice</i> binary. 
    If given, the value overrides the <a
    href="SPICE_EXEC_NAME"><b>SPICE_EXEC_NAME</b></a> environment
    variable.  The default name is "<tt>wrspice</tt>".
    </dl>

    <dl>
    <dt><b>Assumed WRspice subcircuit concatenation character</b><dd>
    This group consists of a check box and a text entry area.  When
    the box is checked, the <a
    href="SpiceSubcCatchar"><b>SpiceSubcCatchar</b></a> variable is
    set to the text in the text area.  See the description of the
    variable for information about this setting.
    </dl>

    <dl>
    <dt><b>Assumed WRspice subcircuit expansion mode</b><dd>
    This group consists of a check box and a menu.  When the box is
    checked, the <a
    href="SpiceSubcCatmode"><b>SpiceSubcCatmode</b></a> variable is
    set to the current menu selection.  See the description of the
    variable for information about this setting.
    </dl>

!! 012815
!!KEYWORD
xic:spin
!!TITLE
The spin Button: Rotate Objects
!!HTML
    <img src="spin.xpm">
    <b>Keyword</b>: <tt>spin</tt>

    <p>
    The <b>spin</b> button, available in physical mode, allows
    rotation of <a href="xic:box">boxes</a>, <a
    href="xic:polyg">polygons</a>, and <a href="xic:wire">wires</a> by
    an arbitrary angle, and subcells and <a
    href="xic:label">labels</a> by multiples of 45 degrees.  If no
    objects are selected, the user is requested to select an object. 
    When objects have been selected, the user is asked to click on the
    origin of rotation.  The selected objects are ghost-drawn, and
    rotated about the reference point as the pointer moves.

    <p>
    If the <b>Constrain angles to 45 degree multiples</b> check box in
    the <a href="xic:edset"><b>Editing Setup</b></a> panel from the
    <b>Edit Menu</b> is checked, the angle will be constrained to
    multiples of 45 degrees.  Pressing the <b>Shift</b> key will
    remove the constraint.  If the check box is not checked, holding
    the <b>Shift</b> key will impose the constraint.  Thus the
    <b>Shift</b> key inverts the effect of the check box.  However, if
    the selected objects include a subcell or label, the angle will
    always be constrained to multiples of 45 degrees.  The <a
    href="Constrain45"><b>Constrain45</b></a> variable tracks the
    state (set or unset) of the check box.

    <p>
    During rotation, the angle is displayed in the lower left corner
    of the drawing window.  The readout defaults to degrees, pressing
    the '<tt>r</tt>' key will switch to radians, and pressing the
    '<tt>d</tt>' key will switch back to degrees.  Pressing the
    spacebar will toggle between radians and degrees.

    <p>
    At this point, one can click to define the rotation angle, or an
    absolute angle can be entered on the prompt line.  To enter an
    angle, either press <b>Enter</b> or click on the origin marker,
    then respond to the prompt with an angle in degrees.  In either
    case, the rotated boundaries of the selected objects are attached
    to the pointer, and new objects can be placed by clicking. 
    Ordinarily, the original objects will be deleted, however if the
    <b>Shift</b> key is held while clicking, the original objects are
    retained.  Instead of clicking, one can press the <b>Enter</b>
    key, which will simply rotate the selected objects around the
    reference point.

    <p>
    When the <b>spin</b> command is at the state where objects are
    selected, and the next button press would establish the rotation
    origin, if either of the <b>Backspace</b> or <b>Delete</b> keys is
    pressed, the command will revert the state back to selecting
    objects.  Then, other objects can be selected or selected objects
    deselected, and the command is ready to go again.  This can be
    repeated, to build up the set of selections needed.

    <p>
    At any time, pressing the <a href="xic:desel"><b>Deselect</b></a>
    button to the left of the <a href="coords">coordinate readout</a>
    will revert the command state to the level where objects may be
    selected to rotate.

    <p>
    The <a href="xic:undo">undo</a> and <a href="xic:redo">redo</a>
    operations (the <b>Tab</b> and <b>Shift-Tab</b> keypreses and
    <b>Undo</b>/<b>Redo</b> in the <b>Modify Menu</b>) will cycle the
    command state forward and backward when the command is active. 
    Thus, the last command operation, such as setting the angle by
    clicking, can be undone and restarted, or redone if necessary.  If
    all command operations are undone, additional undo operations will
    undo previous commands, as when the undo operation is performed
    outside of a command.  The redo operation will reverse the effect,
    however when any new modifying operation is started, the redo list
    is cleared.  Thus, for example, if one undoes a box creation, then
    starts a rotation operation, the "redo" capability of the box
    creation will be lost.

    <p>
    It is possible to change the layer of rotated objects.  During the
    time that newly-rotated objects are ghost drawn and attached to
    the mouse pointer, if the <a href="layertab">current layer</a> is
    changed, the objects that are attached can be placed on the new
    layer.  Subcells are not affected.

    <p>
    How this is applied depends on the setting of the <a
    href="LayerChangeMode"><tt>LayerChangeMode</tt></a> variable, or
    equivalently the settings of the <b>Layer Change Mode</b> pop-up
    from the <a href="xic:mvlcg"><b>Set Layer Chg Mode</b></a>
    button in the <b>Modify Menu</b>.  The three possible modes are to
    ignore the layer change, to map objects on the old current layer
    to the new current layer, or to place all objects on the new
    current layer.  If the current layer is set back to the previous
    layer before clicking to locate the new objects, no layers will
    change.

    <p>
    Note that this operation can change boxes to polygons and
    vice-versa.  The rotation can be performed by clicking or
    dragging, however an angle can only be entered textually if the
    clicking mode is used.

!!SEEALSO
sidemenu

!! 100412
!!KEYWORD
xic:style
!!TITLE
The style Button: Set/Change Wire Style
!!HTML 
    <img src="style.xpm">

    <p>
    The <b>style</b> button, available in physical mode, pops up a
    menu of options for the presentation style of wires.  The <a
    href="xic:width"><b>Wire Width</b></a> choice sets the default
    width if no wires are selected, or changes the width of selected
    wires.  If there are wires selected, <i>Xic</i> prompts for a new
    wire width for the selected wires, and the selected wires will
    have their widths altered.  The new width should not be less than
    the minimum width (<tt>MinWidth</tt> design rule) for the layers.

    <p>
    If there are no applicable wires selected, the default wire width
    for the current layer is set, which is constrained to be greater
    or equal to the minimum width.  Wires subsequently created on the
    present layer will have the new width.

    <p>
    The other choices set the default end style if no applicable wire
    is selected, or changes selected wires to the chosen end style if
    wires are selected.  All selections depend on layer-specific mode. 
    In layer-specific mode, only selected wires on the current layer
    are changed.  Otherwise, all selected wires are changed.

    <p>
    The possible end styles are flush ends, extended rounded ends, and
    extended square ends.  The extended styles project the length of
    the wire by half of the width beyond the terminating vertex.  The
    button icon changes to indicate the present wire end style with a
    small dot.

!!SEEALSO
sidemenu

!! not in manual
!!KEYWORD
xic:end_flush xic:end_round xic:end_extend
!!TITLE
Wire End Style
!!HTML
    Select one of the three end styles available for nonzero width
    wires:  <b>Flush</b>, <b>Rounded</b>, and <b>Extended</b>.  If any
    applicable wires are selected, they will be converted to the
    chosen end style, otherwise the choice represents the default end
    style for new wires on the current layer.

!!SEEALSO
xic:style

!! not in manual
!!KEYWORD
xic:width
!!TITLE
Wire Width
!!HTML
    This function, provided in the <a href="xic:style"><b>style</b>
    menu</a> has two modes.  If there are <a href="xic:wire">wires</a>
    selected, <i>Xic</i> prompts for a new wire width for the selected
    wires, and the selected wires will have their widths altered.  The
    new width should not be less than the <a href="drcrules">minimum
    width</a> for the layers.

    <p>
    The other mode, when no applicable wires are selected, sets the
    default wire width for the current layer, which is constrained to
    be greater or equal to the minimum width.  Wires subsequently
    created on the present layer will have the new width.

!! 110713
!!KEYWORD
xic:subct
!!TITLE
The subct Button: Set Subcircuit Connections
!!HTML
    <table border=0>
    <tr><td valign=top><b>jump to</b></td> <td>
    <a href="xic:subct#vterm"><b>Virtual Terminals</b></a><br>
    <a href="xic:subct#bterm"><b>Multi-Contact Connectors</b></a><br>
    <a href="xic:subct#torder"><b>Terminal Ordering</b></a><br>
    <a href="xic:subct#tname"><b>Terminal Naming and Editing</b></a>
    </td></tr></table>

    <p>
    <img src="subct.xpm">
    <b>Keyword</b>: <tt>subct</tt>

    <p>
    The <b>subct</b> button, available in the electrical side menu,
    allows electrical connection terminals to be added to a circuit. 
    The terminals are points at which electrical connections are
    defined, as in the SPICE subcircuit definition.  Terminal
    definition is necessary if the circuit is to be used as a
    subcircuit in another circuit with connections to the instance (it
    is possible for a subcircuit to connect to <a
    href="globname">global</a> nets only, in which case the master and
    instances would have no terminals).  The terminals are also used
    by the <a href="xic:extmenu">extraction system</a> and can provide
    an initial <a href="ext:operations">association</a> of a
    particular schematic net and physical conductor group.

    <p>
    Terminals can only be created in electrical mode.  Once created, a
    terminal's flags may be edited so as to enable a corresponding
    terminal location in the physical layout.  The extraction system
    will most often find suitable physical terminal locations
    automatically, however there are times when the user may need to
    place terminals manually, which can be done with the <b>Edit
    Terminals</b> button in the <b>Views and Operations</b> page of
    the <a href="xic:excfg"><b>Extraction Setup</b></a> panel from the
    <b>Setup</b> button in the <b>Extract Menu</b>, while in physical
    mode.  In electrical mode, this same button is equivalent to the
    <b>subct</b> button in the side menu.

    <p>
    Subsequent to creation with the present command, terminals can be
    made visible with the <a href="xic:terms"><b>terms</b></a> button
    in the electrical side menu.  While in physical mode, the
    terminals will be visible in electrical windows when either the
    <b>All Terminals</b> or <b>Cell Terminals Only</b> check boxes in
    the <b>Show</b> group in the <b>Views and Operations</b> page of
    the <b>Extraction Setup</b> panel is checked.

    <p>
    The terminals must be defined in the schematic representation of
    the cell, whether or not the cell will ultimately be <a
    href="xic:symbl">symbolic</a>.  The terminals can be created and
    deleted only in the schematic.  Once created, they will be visible
    in the symbol view, but must be moved to the desired location by
    hand.  In the symbol view (only) each terminal can have
    arbitrarily many copies or itself at different locations, each one
    of which is an equivalent connection point for the subcircuit. 
    This facilitates, for example, tiling.  If an equivalent
    connection point appears on either side of the instance, then
    placing a row of these instances side-by-side will automatically
    connect this node to all of the instances.  This applies only to
    the symbolic representation.  In the schematic, each cell terminal
    has a single connection point.

    In <i>Xic</i>, there are two types of cell contact terminals.
    <dl>
    <dt>Scalar terminals<dd>
    These are the "normal", single-contact terminals.  These terminals
    actually convey the connectivity information between the parent
    and subcell schematics, and are the only terminals that may have
    corresponding terminals in the physical layout.  A scalar terminal
    is associated with a <a href="prpty:node"><b>node</b></a>
    property, of a cell or cell instance.
    </dl>

    <dl>
    <dt>Multi-contact "bus" terminals<dd>
    These terminals reference the scalar terminals and provide a means
    for connecting a number of these terminals to a multi-conductor
    net in the schematic.  The use of multi-conductor nets and
    multi-contact terminals can greatly simplify a schematic visually. 
    Be advised that a multi-conductor terminal only references
    existing scalar terminals, which must exist.  These terminals are
    associated with a <a href="prpty:bnode"><b>bnode</b></a> property,
    of a cell or cell instance.
    </dl>

    <p>
    In the schematic, by default ordinary scalar terminals can only be
    located at connection points of the underlying geometry.  These
    are the vertices of electrically-active wires, and device or
    subcell connection points.  Clicking on such a point, if no
    terminal already exists at the point, will create a new scalar
    terminal at the location.  The <a href="xic:edtrm"><b>Terminal
    Edit</b></a> panel will appear, which can be used to apply a name
    for the terminal and edit other terminal properties.  The new
    terminal will be shown highlighted to indicate that it is the
    target of the <b>Terminal Edit</b> panel.

    <a name="vterm"></a>
    <h2>Virtual Terminals</h2>

    If one holds the <b>Ctrl</b> key while clicking anywhere except
    over another terminal, a scalar terminal will be placed, whether
    or not it is over a circuit connection point.  This is useful if
    the <a href="BYNAME"><tt>BYNAME</tt><a> flag is to be set for the
    terminal, which indicates that it will not connect by location,
    but by name matching only.  It is also useful for implementing
    "virtual" terminals which connect to nothing, but satisfy
    connectivity references in layout vs.  schematic testing, and for
    other purposes.

    <p>
    Suppose one has a subcell with physical layout only that one
    wishes to include in a full design hierarchy.  It may not be
    convenient to create a schematic for the subcell, but it is
    desired that the connections to the subcell be included in the <a
    href="xic:lvs">LVS</a> checking of the overall design.  It is
    possible to assign "virtual terminals" to the subcell.  Virtual
    terminals are treated like ordinary terminals in connecting to
    instances of the subcell, but are ignored when creating netlists
    for the subcell itself.

    <p>
    A virtual terminal is created in the <b>subct</b> command by
    holding the <b>Ctrl</b> key while clicking on locations in the
    electrical schematic (even if the schematic is empty).  They can
    be placed anywhere except on top of another terminal, location is
    not important.  Once created, they can be moved or deleted like
    ordinary terminals.

    <p>
    Once placed, they will be considered in establishing the
    connectivity to instances of the cell, but will be ignored when
    establishing connections within the cell.  Thus the cell looks
    like a "black box" with terminals.  Virtual terminals can be used
    along with ordinary terminals if only part of the internal circuit
    is to be visible from the outside.

    <p>
    In SPICE netlists, virtual terminals will appear in the subcircuit
    connection list in <tt>.subckt</tt> and call lines, but will not
    be connected in the <tt>.subckt</tt> definition.  One can use a <a
    href="spicetext">spicetext</a> label to add a <tt>.include</tt>
    line to bring in a circuit definition from a file, for example, to
    satisfy the references.

    <p>
    In the graphical display, virtual terminals of the current cell
    are shown with a beer-barrel outline for differentiation from the
    standard terminals which are square.  The cell bounding box is
    expanded to contain all virtual terminal locations.  The center of
    a virtual terminal is a "hot spot" for hypertext node references,
    i.e., clicking on the terminal center will add the associated node
    to the prompt line edit string in the <a
    href="xic:plot"><b>plot</b></a> and <a
    href="xic:iplot"><b>iplot</b></a> commands and when creating <a
    href="xic:label">labels</a> or <a href="xic:prpty">properties</a>.

    <a name="bterm"></a>
    <h2>Multi-Contact Connectors</h2>

    If the <b>Shift</b> key is held while clicking in the schematic, a
    new multi-contact terminal will be created.  A different version
    of the <b>Terminal Edit</b> panel will appear, allowing the new
    terminal to be configured.

    <p>
    Multi-contact terminals reference scalar terminals, and every
    referenced scalar terminal should exist.  The pop-up provides
    convenience functions for creating the "bit" terminals.  In some
    cases, these will be made invisible and not shown in either the
    schematic or symbol, yet they must exist as they provide a crucial
    data structure required for actual connectivity.

    <p>
    Named and unnamed multi-conductor terminals identify their
    constituent bits quite differently.  If a terminal is named, the
    name is a <a href="elec:netname">net expression</a> that
    unambiguously specifies the names of the scalar terminals.  These
    terminals are referenced by name, so ordering is unimportant.

    <p>
    If a multi-conductor terminal is unnamed, it will at least have a
    default range of <tt>[0:0]</tt>.  The terminal also has an index
    number that defaults to 0.  The bits are the scalar terminals with
    indices starting with the multi-conductor terminal index value,
    through the width of the multi-conductor range, contiguously and
    increasing.  In this case, terminal ordering is obviously quite
    important. 

    <p>
    See the <a href="xic:edtrm"><b>Terminal Edit</b></a> panel
    description for a complete discussion of the configuration
    options for multi-contact terminals (and scalar terminals, too).

    <a name="torder"></a>
    <h2>Terminal Ordering</h2>

    By default, a newly-created scalar terminal will be given the
    largest index number, meaning that it will be the last terminal
    listed when the subcircuit is represented in SPICE or other
    netlisting output.  However, it is possible to insert new
    terminals at any point in the sequence.

    <p>
    If the user types a number while the command is active, the number
    will appear in the <a href="keyspresd">keypress buffer</a> area
    for the drawing window that has the keyboard focus.  If this
    number is within the range of existing terminal indices, then new
    terminals created from this window will be given this index, and
    existing terminals with this index or larger will have their
    indices incremented.

    <p>
    Suppose for example that the cell contains five terminals, and one
    needs to add a sixth, and further the new terminal should be the
    fourth terminal in the sequence (index number 3).  While in the
    <b>subct</b> command, one can type "3" and note that "3" appears
    in the keypress buffer area.  One can now click on a circuit
    location to create the new terminal, and note that the new
    terminal is given index 3, the previous 3 is now 4, etc.  The
    backspace key can be used to clear the keypress buffer, or the
    next new terminal added will also be inserted as number 3.  Note
    that one can type "0" and leave this in place, so that all new
    terminals will be added to the front of the list rather than the
    back.
 
    <p>
    The indexing and order can also be changed with the <b>Terminal
    Edit</b> panel.

    <p>
    For multi-contact terminals, the index parameter provides ordering
    information.  The terminal order assumed by <i>Xic</i> is that a
    multi-contact terminal is ordered by its index, ahead of a scalar
    terminal with the same index.  If the multi-contact terminal is
    named, then the index number is arbitrary, however by convention
    <i>Xic</i> will set the index to the index of the first (leftmost)
    bit.  If the terminal is unnamed, the index is also the index of
    the first bit, and in fact this identifies the first bit.

    <a name="tname"></a>
    <h2>Terminal Naming and Editing</h2>

    If no name is given to a scalar terminal, <i>Xic</i> will use a
    default name, which is an underscore followed by the internal
    index (the number shown in the marker).  Otherwise, a short
    descriptive name can be entered.  The name must follow the rules
    for a scalar <a href="elec:netname">net expression</a>, that is,
    it must be a simple text name, with or without a single index
    subscript.  A non-default name will be displayed next to the
    terminal marker (the default name is assumed if the entry is an
    underscore followed by one or two digits).

    <p>
    Clicking on an existing terminal will select it, and begin a move
    operation.  A box will be ghost-drawn and attached to the mouse
    pointer.  If the terminal is scaler, it can be moved to a new
    location by clicking on a connection point not occupied by another
    terminal.  It can be moved to a non-contact point by holding
    <b>Ctrl</b> while clicking, and the terminal becomes "virtual". 
    Multi-contact terminals can be moved to any location not already
    occupied by a terminal.

    <p>
    While a terminal is selected, pressing the <b>Delete</b> key will
    delete the terminal.  Pressing <b>Backspace</b> or <b>Esc</b> will
    deselect the terminal, aborting the move operation.

    <p>
    If an existing terminal is clicked on with the <b>Shift</b> key
    held down, or double-clicked on (including being "moved" to the
    same location), the <b>Terminal Edit</b> panel will appear,
    allowing the user to edit the parameters for the terminal.

    <p>
    From the <b>Terminal Edit</b> panel, it is possible to make the
    terminal invisible.  This can be applied to terminals that do not
    participate in the visual connections, so clutter the display
    needlessly.  The <b>PageUp</b> and <b>PageDown</b> toggle the
    display of (otherwise) invisible terminals while the <b>subct</b>
    command is active.  Invisible terminals can also be selected for
    editing with the <b>Next</b> and <b>Prev</b> buttons in the panel,
    which cycle through the terminals to edit by the index value.

    <p>
    In <a href="xic:symbl">symbolic mode</a>, terminals can not be
    added or deleted, however they can be moved to new locations
    consistent with the symbolic representation.  Terminals can be
    moved by dragging, or by clicking on a terminal then clicking on
    the new location.  Terminals can be placed anywhere in the
    symbolic representation.  Further, if the <b>Shift</b> key is held
    during the terminal placement, the original terminal mark is
    retained, i.e., a copy is made.  Any number of copies can be
    placed.  Copies can be deleted by clicking to select, then
    pressing the <b>Delete</b> key.  The last remaining instance of a
    terminal can not be deleted in this way, one must go to the
    schematic to delete the terminal.

!!SEEALSO
sidemenu

!!REDIRECT FIXED        xic:edtrm#FIXED
!!REDIRECT BYNAME       xic:edtrm#BYNAME
!!REDIRECT SCINVIS      xic:edtrm#SCINVIS
!!REDIRECT SYINVIS      xic:edtrm#SYINVIS

!! 110713
!!KEYWORD
xic:edtrm
!!TITLE
The Terminal Edit Pop-Up
!!HTML
    <table border=0>
    <tr><td valign=top><b>jump to</b></td> <td>
    <a href="xic:edtrm#tedit"><b>Electrical Scalar Terminal Editing</b></a><br>
    <a href="xic:edtrm#phys"><b>Physical Terminal Editing</b></a><br>
    <a href="xic:edtrm#bedit"><b>Multi-Contact Connector Editing</b></a>
    </td></tr></table>

    <p>
    The <b>Terminal Edit</b> pop-up appears when using the <a
    href="xic:subct"><b>subct</b></a> button in the electrical side
    menu.  It also appears while in physical mode and using the <a
    href="xic:tedit"><b>Edit Terminals</b></a> button from the
    <b>Setup</b> page of the <a href="xic:excfg"><b>Extraction
    Setup</b></a> panel, which is brought up with the <b>Setup</b>
    button in the <b>Extract Menu</b>.  In either case, it provides a
    means for editing various properties of a terminal, including its
    name.

    <p>
    When the panel is visible, one of the terminals in the display is
    highlighted, and the controls in the panel represent the state for
    the highlighted terminal.  This is the "target terminal" which
    will be modified by the panel.

    <p>
    The panel configures itself for either scalar or multi-contact
    terminals in electrical mode, depending on the target terminal. 
    In physical mode, only scalar terminals exist and not all
    parameters are editable, and the panel configures itself
    accordingly.  The panel will appear quite different in these three
    cases.

    <p>
    The target terminal can be changed by Shift-clicking or
    double-clicking over a different terminal.  It can also be changed
    with the <b>Prev</b>, <b>Next</b>, and <b>To Index</b> buttons
    found in the panel.

    <p>
    Every scalar terminal has a unique index number.  This is the
    number that is shown in the box which represents the terminal in
    the schematic.  This represents the order of the terminals in
    calls to instances of the current cell.  Bus terminals have an
    index number as well, which must be one of the scalar terminal
    indices.  The ordering of the multi-contact terminal is at the
    index, but <i>before</i> the scalar terminal with the same index.

    <p>
    The <b>Prev</b> button will cycle the target terminal to the one
    with index value one less than the current index, wrapping at
    zero.  The <b>Next</b> button will cycle the target terminal in
    the opposite direction.  The <b>To Index</b> button and numeric
    entry area can be used to change the target terminal to one with
    the specified index, of the same type (scalar or multi-contact
    terminal) as the present terminal.

    <p>
    No actual change is made unless or until the <b>Apply</b> button
    is pressed.  Pressing <b>Apply</b> will update the target terminal
    according to the entries in the panel.  Changes made can be undone
    and redone with the standard <i>Xic</i> undo/redo operations.

    <p>
    Pressing the <b>Dismiss</b> button will retire the panel.

    <a name="tedit"></a>
    <h2>Electrical Scalar Terminal Editing</h2>

    <p>
    <img src="screenshots/tedit3.png" align=right>
    At the top of the panel is a <b>Terminal Index</b> numeric entry
    area.  This can be used to change the terminals index number, and
    therefor order in subcircuit references.  The renumbering is a two
    step process:

    <ol>
    <li>The present terminal is removed, and the remaining terminals
    are renumbered, using unique and contiguous new index values (zero
    based).

    <li>The terminal is reinserted at the given index.  The terminal
    that had that index and those larger will have their index values
    incremented.
    </ol>

    Changing the index of a scalar terminal does <b>not</b> update the
    multi-contact terminals!  The index values used in the bus
    terminals may require compensating changes.

    <p>
    Just below is the <b>Terminal Name</b> text entry area.  This will
    contain the name of the terminal, which can be edited by the user. 
    The entry can be empty, in which case <i>Xic</i> will generate a
    name.

    <p>
    The <b>Has physical terminal</b> check box should be checked if
    the terminal will have a corresponding contact point in the
    physical layout.  Setting this check box will allocate the
    internal data structure needed to maintain the association.  In
    most cases, this will be required.  It is not required if, for
    example, the user at this point is only concerned with a schematic
    for simulations.  The terminal can be edited and this box checked
    at a later time, when the user is ready to add a layout.  The box
    is never checked for terminals used in the schematic for special
    purposes that are perhaps related to simulation, that have no
    "real" implementation in the layout.
    
    <p>
    When the <b>Has physical terminal</b> check box is checked, the
    <b>Physical</b> group is un-grayed.  There are two controls in
    this group.

    <dl>
    <dt><b>Layer Binding</b><dd>
    The <b>Layer Binding</b> menu provides a layer name that is a hint
    used by the extraction system when placing the physical terminal
    in the layout.  This is set by <i>Xic</i> after extraction, and if
    correct should not be changed.  It is set by the user when a
    terminal is manually placed, to resolve ambiguity about which
    layer the terminal connects to.
    </dl>

    <a name="FIXED"></a>
    <dl>
    <dt><b>Location locked by user placement</b><dd>
    When a terminal is manually placed, the <b>Location locked by user
    placement</b> check box will become checked.  This indicates that
    the <tt>FIXED</tt> flag is set in the terminal. 
    Terminals with this flag set will never be moved by <i>Xic</i>
    during extraction/association.
    </dl>

    The location and layer must be correct or <a
    href="ext:operations">association</a> will fail.  Although
    <i>Xic</i> will automatically place terminals, at times this will
    fail and the user will have to place some terminals manually to
    obtain correct or complete association.

    <p>
    Below the <b>Physical</b> group are check boxes for setting some
    binary options.

    <a name="BYNAME"></a>
    <dl>
    <dt><b>Set contact by name only</b><dd>
    This check box, when checked, sets the <tt>BYNAME</tt> in the
    terminal which changes its interpretation in the schematic (it has
    no effect in physical mode).  Ordinarily, a terminal is placed on
    a "connection point" of a wire net in the schematic (i.e., a
    vertex), or a device or subcircuit contact point.  Association of
    the terminal to that wire net is by location.  If there is no
    underlying connection point, and the terminal has an assigned
    name, <i>Xic</i> will then attempt to add the terminal to an
    existing net with a matching name.  If this flag is set, then the
    initial attempt to connect the terminal by location will be
    skipped.  This is useful if the terminal is to be made invisible,
    to avoid accidental connections.  The scalar wire nets can be
    named with the <a href="xic:nodmp"><b>Node (Net) Name
    Mapping</b></a> panel from the side menu.
    </dl>

    <a name="SCINVIS"></a>
    <dl>
    <dt><b>Set terminal invisible in schematic</b><dd>
    This check box, when checked, sets the <tt>SCINVIS</tt> flag in
    the terminal which prevents the terminal from being displayed in
    schematics.  This is for terminals that are used only as bit
    connections for a multi-contact connector.  Recall that every bit
    in a multi-contact connector is a scalar connector, that must
    exist if a connection is to be established.  If connectivity is to
    be provided only via the multi-contact connector, the individual
    bits are visually superfluous and clutter the display.  However,
    they can be made invisible in the schematic with this flag.  They
    should probably also have the <tt>BYNAME</tt> flag set as well, so
    that they don't make an unintended connection by location.  The
    setting has no effect in physical mode.
    </dl>

    <a name="SYINVIS"></a>
    <dl>
    <dt><b>Set terminal invisible in symbol</b><dd>
    This check box controls the analogous <tt>SYINVIS</tt> flag,
    which when set causes the terminal to be invisible
    in the <a href="xic:symbl">symbolic representation</a>, if any. 
    This flag will almost always track the state of the <tt>SCINVIS</tt>
    flag, but this is not an absolute requirement.
    It is possible for a schematic to use individual bits
    for connections, whereas the symbol uses a multi-contact terminal,
    or vice-versa.
    </dl>

    <a name="phys"></a>
    <h2>Physical Terminal Editing</h2>

    <img src="screenshots/tedit1.png" align=right>
    In physical mode, the panel allows changes only within the
    <b>Physical</b> group described above.  That is, the <b>Layer
    Binding</b> choice and the <b>Location locked by user
    placement</b> check box are the only editable entries.  These have
    the purpose and functionality as described above.  One must return
    to electrical mode to change other parameters.

    <br clear=all>
    <a name="bedit"></a>
    <h2>Multi-Contact Connector Editing</h2>

    <img src="screenshots/tedit2.png" align=right>
    When the target terminal is a multi-contact connector, the
    panel reconfigures itself to provide the appropriate entry areas. 

    <p>
    At the top of the panel is a numeric <b>Term Index</b> entry area. 
    Just below this are two text entry areas with labels <b>Terminal
    Name</b> and <b>Net Expression</b>.  A "bundle" terminal may have
    a separate simple text name, as well as its net expression.  If
    given, the simple text name will be used as a name for the
    terminal in instance placements of the cell.  The terminal in the
    instance will look like a pure vector terminal with the given
    name, and a range starting with zero and extending to the width of
    the bundle minus one.

    <p>
    If the terminal does not represent a bundle, then internally there
    is only one name, which is the net expression.  This is obtained
    from the two entry areas, which should not conflict or an error
    will result.  Probably the best approach is to use the <b>Net
    Expression</b> entry for the complete expression, and leave the
    <b>Terminal Name</b> entry blank.  Alternatively, one could put a
    text name in the name entry, and the subscripting, without a name
    or with the same name, in the expression entry.

    <p>
    It is legitimate to not provide a name, but to provide
    subscripting only.  In this case:

    <ol>
    <li>The subscripting is ignored, except to determine the implied
    width (number of conductors).

    <li>The connector maps the scalar terminal with index value equal
    to the <b>Term Index</b> entry and terminals with successive
    indices, the total number of which will be equal to the connector
    width.  Thus, scalar terminal order and the <b>Term Index</b>
    value are critical in this case.  It is up to the user to maintain
    consistency while editing, as indices may change.  Probably,
    though, there is no reason to use this approach, and not supply a
    terminal name.
    </ol>

    <p>
    If the terminal has a name, or has a bundle net expression, then
    the name of every scalar terminal "bit" is well defined.  These
    are found by name, so there is no order requirement, only an
    existence requirement.  Furthermore, the <b>Term Index</b> entry
    has much less significance.  It is only used to assign an order
    for the terminal relative to other terminals.  Specifically, the
    terminal order is just ahead of the scalar terminal with the same
    index (multi-conductor terminal index values are required to be
    unique).  <i>Xic</i> will initially assign the index as the index
    of the first scalar terminal referenced.  This can be changed if
    necessary.

    <p>
    Below the three entry areas is a <b>Delete</b> button, which will
    delete the terminal if pressed.  This, and all other operations,
    can be undone/redone with the standard <i>Xic</i>
    <b>Tab</b>/<b>Shift-Tab</b> keys and equivalent operations in the
    <b>Modify Menu</b>.

    <p>
    There are two check boxes for terminal visibility in the schematic
    and symbol, as we saw for scalar terminals.  It is unlikely that
    the user would go to the trouble of implementing a multi-contact
    terminal and not have it visible, but it is possible.

    <p>
    The <b>Bus Term Bits</b> group provides some specialized functions
    for working with the scalar terminals referenced.  These can be
    applied only if the terminal has a name or is a bundle terminal.

    <dl>
    <dt><b>Check/Create Bits</b><dd>
    This will create, at the end of the scalar terminal list, any
    scalar terminal referenced by the present terminal and not found. 
    Newly created scalar terminals will have <tt>BYNAME</tt>,
    <tt>SCINVIS</tt>, and <tt>SYINVIS</tt> set, meaning that the
    terminals will be invisible and make contact by name only.  The
    new terminals are placed at the same location as the present
    terminal.  As they are invisible and they do not connect by
    location, there is no problem with this.  In one way or another,
    the scalar terminals referenced by a multi-conductor terminal must
    exist for connectivity to be established, even if they are
    invisible and never dealt with again after creation.  The
    <b>Check/Create Bits</b> button makes the scalar terminal creation
    quick and easy.  Be aware, though, that it will probably still be
    necessary to edit these terminals to set the physical data.
    </dl>

    <dl>
    <dt><b>Reorder to Index</b><dd>
    This will create missing scalar terminals as above, but in
    addition it will reorder the scalar terminals list so that the
    index values of the referenced terminals are contiguous and start
    with the <b>Term Index</b> value.  All other considerations aside,
    this may be a "nice" way to organize the terminals.  It is also
    potentially more efficient.  If the net expression does not
    duplicate any connection bits, an internal mapping step can be
    skipped as it becomes an identity, saving a little memory and
    time.  This is the same ordering used with "unnamed" terminals.
    </dl>

    <p>
    The four buttons below allow setting of the visibility flags of
    all of the referenced scalar terminals.  It is unlikely that the
    flag states would vary between the bits.

    <p>
    The remaining buttons operate as described for scalar terminal
    editing.

!!SEEALSO
xic:subct
connect

!! 021912
!!KEYWORD
xic:symbl
!!TITLE
The symbl Button: Symbolic Representation
!!HTML 
    <img src="symbl.xpm">
    <b>Keyword</b>: <tt>symbl</tt>

    <p>
    The <b>symbl</b> button, available in electrical mode, allows
    instances of a cell to be shown as a symbol, rather than as a
    schematic.  In the symbolic representation, the substructure of
    the cell is never shown, instead a simple figure representing the
    cell is displayed.  This can simplify complex schematics.

    <p>
    When this button is active, the current cell is in symbolic mode. 
    It is not possible to add subcircuits or devices in this mode, but
    any geometry added will show as the symbolic representation.  If
    the cell is saved with this button active, then the cell and its
    instances will use the symbolic representation.

    <p>
    However, it is possible to apply a property to individual
    instances of the cell to force the display of that instance
    non-symbolically (as a schematic).  This property can be applied
    with the <a href="xic:prpty"><b>Property Editor</b></a>.

    <p>
    If the <a href="xic:nosym"><b>No Top Symbolic</b></a> button in
    the <b>Main Window</b> sub-menu of the <b>Attributes Menu</b>, or
    in the <a href="xic:vport">sub-window</a> <b>Attributes</b> menu,
    is set, the top cell will always display as a schematic in the
    window, whether or not the <b>symbl</b> button is pressed.

    <p>
    When a new cell is opened for editing, the <b>symbl</b> button
    will become active and the symbolic representation shown if the
    cell was previously saved in symbolic mode.  Pressing the button a
    second time will revert to normal presentation.

    <p>
    While in symbolic mode, subcircuit terminals can not be added,
    however existing terminals can be moved to new locations by
    dragging.  One should first place the terminals, with the <a
    href="xic:subct"><b>subct</b></a> command, in normal mode.  After
    switching to symbolic mode, the terminals can be moved to new
    locations, in the generally more compact symbolic representation. 
    The actual locations of subcircuit connections is dependent upon
    the mode.

!!SEEALSO
sidemenu

!! 013113
!!KEYWORD
xic:terms
!!TITLE
The terms Button: Show Subcircuit Connections
!!HTML
    <img src="terms.xpm">
    <b>Keyword</b>: <tt>terms</tt>

    <p>
    When the <b>terms</b> button is active, the electrical connection
    points of the subcircuits are shown.  These points are placed with
    the <a href="xic:subct"><b>subct</b></a> command.  The
    <b>terms</b> button is available in electrical mode only.  When
    active, the physical terminals will be shown in physical mode
    windows, as if the <b>All Terminals</b> check box in the
    <b>Setup</b> page of the <a href="excfg"><b>Extraction
    Setup</b></a> panel was checked.  This panel is obtained from the
    <b>Setup</b> button in the <b>Extract Menu</b>.  Similarly, in
    physical mode, when physical terminals are visible, electrical
    terminals will also be visible in electrical windows, as if the
    <b>terms</b> button was active.

!!SEEALSO
sidemenu
 
!! 092717
!!KEYWORD
xic:wire
!!TITLE
The wire Button: Create/Edit Wires
!!HTML
    <table border=0>
    <tr><td valign=top><b>jump to</b></td> <td>
    <a href="xic:wire#vedit"><b>Wire Vertex Editor</b></a><br>
    <a href="xic:wire#label"><b>Associated Net Name Label</b></a>
    </td></tr></table>

    <p>
    <img src="wire.xpm">
    <b>Keyword</b>: <tt>wire</tt>

    <p>
    The <b>wire</b> button is used to create or modify wires.  A wire
    is created by clicking the left mouse button on each vertex
    location in sequence.  The vertices can be undone and redone with
    the <b>Tab</b> key and <b>Shift-Tab</b> combination, which are
    equivalent to the <a href="xic:undo"><b>Undo</b></a> and <a
    href="xic:redo"><b>Redo</b></a> commands.  Vertex entry is
    terminated, and a new wire created, by clicking a second time on
    the last point, or by pressing the <b>Enter</b> key.

    <p>
    The <a href="PixelDelta"><b>PixelDelta</b></a> variable can be set
    to alter the value, in pixels, of the snap distance to the target
    when clicking to terminate.  By default, the snap distance is 3
    pixels, so clicking within this distance of the last point will
    terminate entry rather than add a new vertex.

    <p>
    In electrical mode, wires are used to connect
    devices into circuits.  Vertices are recognized as connecting
    points, and are created where the wire crosses a device or
    subcircuit terminal or a vertex of another wire.  The <a
    href="xic:dots"><b>Connection Dots</b></a> button in the
    <b>Attributes Menu</b> can be used to display connections.  The
    vertices can be edited to remove or reestablish connections.

    <p>
    In electrical mode, entering the <b>wire</b> command will switch
    the current layer to the SCED (active) layer.  The current layer
    can be changed if necessary, but without the reverting it was too
    easy to create wires on another layer, sometimes difficult to
    visually differentiate, that will not be electrically active in
    the schematic causing the circuit to not work.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within two pixels.  When snapped, a
    small dotted highlight box is displayed.  This makes it much
    easier to create abutting objects when the grid snap spacing is
    very fine compared with the display scaling.  This is also applied
    to the last vertex of wires being created, facilitating point list
    termination.  This feature can be controlled from the <b>Edge
    Snapping</b> group in the <b>Snapping</b> page of the <a
    href="xic:grid"><b>Grid Setup</b></a> panel.

    <p>
    When adding vertices during wire creation, the angle of each
    segment can be constrained to a multiple of 45 degrees with the
    <b>Constrain angles to 45 degree multiples</b> check box in the <a
    href="xic:edset"><b>Editing Setup</b></a> panel from the <b>Edit
    Menu</b>, in conjunction with the <b>Shift</b> and <b>Ctrl</b>
    keys.  There are three modes:  call them "no45" for no constraint,
    "reg45" for constraint to multiples of 45 degrees with automatic
    generation of the segment from the end of the 45 section to the
    actual point, and "simp45" that does no automatic segment
    generation.  The "reg45" algorithm adds a 45 degree segment plus
    possibly an additional Manhattan segment to connect the given
    point.  The "simp45" adds only the 45 degree segment.  The mode
    employed at a given time is given by the table below.  The <a
    href="Constrain45"><b>Constrain45</b></a> variable tracks the
    state (set or not set) of the check box.

    <blockquote>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><th colspan=3 align=center>Constrain45 not set</td></tr>
    <tr><td>&nbsp;</td><th>Shift up</th><th>Shift pressed</th></tr>
    <tr><th>Ctrl up</th><td>no45</td><td>reg45</td></tr>
    <tr><th>Ctrl pressed</th><td>simp45</td><td>simp45</td></tr>
    <tr><th colspan=3 align=center>Constrain45 set</th></tr>
    <tr><td>&nbsp;</td><th>Shift up</th><th>Shift pressed</th></tr>
    <tr><th>Ctrl up</th><td>reg45</td><td>no45</td></tr>
    <tr><th>Ctrl pressed</th><td>simp45</td><td>no45</td></tr>
    </table>
    </blockquote>

    <p>
    In physical mode, three end styles are available for nonzero width
    wires:  <b>Flush</b>, <b>Rounded</b>, and <b>Extended</b>.  The
    end style and the default width are set from the menu provided by
    the <a href="xic:style"><b>style</b></a> button.  The end style of
    selected wires can be changed from this menu, from within the
    <b>wire</b> command or without.

    <p>
    The width of wires on a particular layer, or the widths of
    existing wires, can be set of changed with the <a
    href="xic:width"><b>Wire Width</b></a> button in the menu brought
    up with the <b>style</b> button.  Zero-width wires are accepted
    into the database if they contain more than one point.  In
    physical mode, they probably should not be used, and they will, of
    course, fail DRC tests.  They are allowed in the off chance that
    the user uses them for annotation purposes.  Such lines will be
    invisible, however, unless the layer pattern is outlined or solid. 
    In electrical cells, zero-width wires are commonly used for the
    connecting lines, and there is no question of their legality in
    electrical cells.  The width of selected wires can be changed with
    this menu command, from within the <b>wire</b> command or without.

    <p>
    If the first vertex of a wire being created falls on an end vertex
    of an existing wire on the same layer, the new wire will use the
    same width and end style as the existing wire, overriding the
    defaults.  The completed new wire will be merged with the existing
    wire, unless merging is disabled.  Merging can be controlled from
    the <a href="xic:edset"><b>Editing Setup</b></a> panel from the
    <b>Edit Menu</b>, and note also that the <a
    href="NoMerge"><tt>NoMerge</tt></a> layer attribute will prevent
    merging.

    <p>
    Wires with a single vertex are acceptable if the width is nonzero
    and the end style is rounded or extended.  These are rendered as
    an octagon or box, respectively, centered on the vertex.

    <p>
    Existing wires can be converted to polygons through selection and
    execution of the <a href="xic:polyg"><b>polyg</b></a> command.

    <a name="vedit"></a>
    <h2>Wire Vertex Editor</h2>

    On entering the <b>wire</b> command, if a wire is selected, a
    vertex editing mode is active on all selected wires.  Each vertex
    of the selected object is marked with a small highlighting box. 
    Clicking on a selected wire away from an existing vertex will
    create a new vertex, which can subsequently be moved.

    <p>
    In order to operate on a vertex, it must be selected.  A vertex
    can be selected by clicking on it, or by dragging over it.  Any
    number of vertices can be selected.  After the selection operation,
    selected vertices are shown marked with a larger box, and
    unselected vertices are not marked.  Additional vertices can be
    selected, and existing selected vertices unselected, by holding
    the <b>Shift</b> key while clicking or dragging over vertex
    locations.  Selecting a vertex a second time will deselect it.

    <p>
    Selected vertices can be deleted by pressing the <b>Delete</b>
    key.  This will succeed only if after vertex removal the object
    does not become degenerate.  In particular, one can not delete the
    object in this manner.

    <p>
    The selected vertices can be moved by dragging or clicking twice. 
    The selected vertices will be translated according to the
    button-down location and the button up location, or the next
    button-down location if the pointer did not move.  While the
    translation is in progress, the new borders are ghost-drawn.

    <p>
    All vertex operations can be undone and redone through use of the
    <a href="xic:undo"><b>Undo</b></a> and <a href="xic:redo"><b>Redo</b></a>
    commands.

    <p>
    With vertices selected, pressing the <b>Esc</b> or
    <b>Backspace</b> keys will deselect the vertices and return to the
    state with all vertices marked.

    <p>
    While in the <b>wire</b> command, with no object in the process
    of being created, it is possible to change the selected state of
    wire objects, thus displaying the vertices and allowing vertex
    editing.  Pressing the <b>Enter</b> key will cause the next
    button 1 operation to select (or deselect) wire objects.  This
    can be repeated arbitrarily.  When one of these objects is
    selected, the vertices are marked, and vertex editing is
    possible.

    <p>
    If the vertex editor is active, i.e., a selected wire is shown
    with the vertices marked, clicking with the <b>Ctrl</b> button
    pressed will start a new wire, overriding the vertex editor.  This
    can be used to start a new wire at a marked vertex location, for
    example.  Without <b>Ctrl</b> pressed, the vertex editor would
    have precedence and would select the marked vertex instead of
    starting a new wire.

    <p>
    While moving vertices, holding the <b>Shift</b> key will enable or
    disable constraining the translation angle to multiples of 45
    degrees.  If the <b>Constrain angles to 45 degree multiples</b>
    check box in the <a href="xic:edset"><b>Editing Setup</b></a>
    panel from the <b>Edit Menu</b> is checked, <b>Shift</b> will
    disable the constraint, otherwise the constraint will be enabled. 
    The <b>Shift</b> key must be up when the button-down occurs which
    starts the translation operation, and can be pressed before the
    operation is completed to alter the constraint.  These operations
    are similar to operations in the <a
    href="xic:strch"><b>Stretch</b></a> command.

    <a name="label"></a>
    <h2>Associated Net Name Label</h2>

    In electrical mode, wires that participate in schematic
    connectivity can have an associated <a href="xic:label">text
    label</a>.  The text provides a name for the net (node) that
    contains the wire, and is equivalent to the placement of a <a
    href="dev:tbar">named terminal</a> device at a vertex of the wire.

    <p>
    To create and bind a <a href="xic:label#wire">label</a> to a wire,
    first select the wire.  Then, press the <a
    href="xic:label"><b>label</b></a> button in the side menu.  Enter
    the text, and place the label in the normal way.  The text in the
    label will be taken as a candidate <a href="xic:nodmp">net
    name</a> for the net containing the wire.

    <p>
    Unlike unlabeled wires, a wire with a label will never be merged
    with adjacent wires.  Labeled wires play an important role in the
    connectivity of some schematics, by defining multi-conductor wire
    nets, and providing the "taps" to access the net.  Complete
    information is provided in the <a href="elec:connect">Connectivity
    Overview</a> and the sections that follow.

!!SEEALSO
sidemenu

!! 020815
!!KEYWORD
xic:xform
!!TITLE
Current Transform
!!HTML 
    <img src="xform.xpm">
    <img src="screenshots/curtrans.png" align=right>
    <b>Keyword</b>: <tt>xform</tt>

    <p>
    The <b>xform</b> button in the side menu brings up the <b>Current
    Transform</b> panel, which allows the current transform to be set. 
    The current transform is applied to newly-placed subcells, and to
    objects which are moved or copied.

    <p>
    The transform that is applied to an instance of a cell is saved in
    an irreducible form in the database representation of the
    instance.  The irreducible form is an optional reflect-y (y ->
    -y), followed by an optional rotation, followed by the
    translation.  This maps directly to the format used in GDSII
    files.  However, the "current transform" applies rotation
    <i>before</i> the reflection, so that on screen, a reflect-x, for
    example, will flip the object's x coordinates independent of any
    rotation angle, which is what users tend to expect.  The transform
    string printed on unexpanded instances and on the <a
    href="statusline">status line</a> reflects this, i.e., forms like
    "R45M" imply a 45 degree rotation followed by a reflect-y ("M"
    always denotes reflect-y, reflect-x is equivalent to some other
    rotation and reflect-y combination).  However, the transformation
    shown in an <a href="xic:info"><b>Info</b></a> window will be
    reflect-y followed by a 315 degree rotation (in this example),
    since the internal representation performs the reflection before
    the rotation.

    <p>
    If the current transform is set to something other than the
    default identity transform, the transform code is printed on the
    status line.

    <p>
    The following buttons and input fields are available in the
    <b>Current Transform</b> panel.

    <a name="rotate"></a>
    <dl>
    <dt><b>Angle</b><dd>
    This choice menu allows setting the rotation component of the
    current transform.  The menu allows a choice of rotations in
    increments of 90 degrees in electrical mode or 45 degrees in
    physical mode.

    <p>
    Pressing and holding the <b>Ctrl</b> key and then pressing the
    left or right arrow keys cycles through the transformation angles,
    whether or not the <b>Current Transform</b> panel is visible.  The
    right arrow increases the angle, the left arrow decreases the
    angle.
    </dl>

    <a name="reflx"></a>
    <dl>
    <dt><b>Reflect X</b><dd>
    Add a reflection of the x-axis to the current transform.  The
    X-reflection is toggled by the <b>Ctrl-Down Arrow</b> key
    sequence, whether or not the <b>Current Transform</b> panel is
    visible.
    </dl>

    <a name="refly"></a>
    <dl>
    <dt><b>Reflect Y</b><dd>
    Add a reflection of the y-axis to the current transform.  The
    Y-reflection is toggled by the <b>Ctrl-Up Arrow</b> key sequence,
    whether or not the <b>Current Transform</b> panel is visible.
    </dl>

    <a name="magn"></a>
    <dl>
    <dt><b>Magnification</b><dd>
    This entry field allows setting of the magnification component of
    the current transform.  Any number from 0.001 through 1000.0 can be
    entered.
    </dl>

    <a name="ident"></a>
    <dl>
    <dt><b>Identity Transform</b><dd>
    This button will save the current parameters to internal storage,
    and reset these values to the default state (no transformation). 
    The saved state can be restored with the <b>Last Transform</b>
    button.

    <p>
    When the panel first appears, this button will have the keyboard
    focus if the current transform is not the identity transform.  The
    user can press <b>Enter</b> to "press" the button.  This will
    cause the focus to switch to the <b>Dismiss</b> button, so that
    another <b>Enter</b> press will retire the panel.  Thus, one can
    very quickly restore the identity transform using the <b>xform</b>
    button accelerator ("<tt>xf</tt>") followed by pressing the
    <b>Enter</b> key twice.
    </dl>

    <a name="last"></a>
    <dl>
    <dt><b>Last Transform</b><dd>
    This button will restore the state of the current transform last
    saved with the <b>Identity Transform</b> button, or one of the
    recall buttons.  If no state has been saved, the identity
    transform (the default) is set.  Note that there is separate
    storage for the current transform in electrical and physical
    modes.

    When the panel first appears, if the current transform is the
    identity transform, this button will have the keyboard focus.  In
    this case, the same key sequence as described above can be used to
    quickly restore the last transform.
    </dl>

    <dl>
    <dt>Store and Recall<dd>
    There are five internal registers for storage of transformation
    parameters.  Separate registers are used in electrical and
    physical modes.  Pressing these buttons will either save the
    current parameters to a register, or set the parameters from a
    register.  After a recall, the original parameters can be restored
    with the <b>Last Transform</b> button.
    </dl>

!!SEEALSO
xic:sidemenu
xic:place
xic:move
xic:copy

!! 012715
!!KEYWORD
xic:xor
!!TITLE
The xor Button: Exclusive-OR Objects
!!HTML
    <img src="xor.xpm">
    <b>Keyword</b>: <tt>xor</tt>

    <p>
    The <b>xor</b> button facilitates inverting the polarity of
    layers, and is available only in physical mode.  The operation is
    similar to the <a href="xic:box"><b>box</b></a> command, however
    all previously existing boxes, polygons, and wires on the same
    layer which overlap the created box become holes in the new box. 
    Only boxes, polygons, and wires are inverted, other structures are
    covered.  When a wire is partially xor'ed, the part of the wire
    outside of the xor region becomes a polygon.  The <a
    href="!layer"><b>!layer</b></a> command can also be used to invert
    layer polarity, and is recommended when an entire cell is to be
    inverted.

    <p>
    While the command is active in physical mode, the cursor will snap
    to horizontal or vertical edges of existing objects in the layout
    if the edge is on-grid, when within two pixels.  When snapped, a
    small dotted highlight box is displayed.  This makes it much
    easier to create abutting objects when the grid snap spacing is
    very fine compared with the display scaling.  This feature can be
    controlled from the <b>Edge Snapping</b> group in the
    <b>Snapping</b> page of the <a href="xic:grid"><b>Grid
    Setup</b></a> panel.

    <p>
    The <a href="xic:box"><b>box</b></a>, <a
    href="xic:erase"><b>erase</b></a>, and <b>xor</b> commands
    participate in a protocol that is handy on occasion.

    <p>
    Suppose that you want to erase an area, and you have zoomed in
    and clicked to define the anchor, then zoomed out or panned and
    clicked to finish the operation.  Oops, the <b>box</b> command
    was active, not <b>erase</b>.  One can press <b>Tab</b> to undo
    the unwanted new box, then press the <b>erase</b> button, and the
    <b>erase</b> command will have the same anchor point and will be
    showing the ghost box, so clicking once will finish the erase
    operation.

    <p>
    The anchor point is remembered, when switching directly between
    these three commands, and the command being exited is in the
    state where the anchor point is defined, and the ghost box is
    being displayed.  One needs to press the command button in the
    side menu to switch commands.  If <b>Esc</b> is pressed, or a
    non-participating command is entered, the anchor point will be
    lost.

!!SEEALSO
sidemenu

